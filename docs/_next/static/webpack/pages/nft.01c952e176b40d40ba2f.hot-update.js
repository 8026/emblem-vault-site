webpackHotUpdate_N_E("pages/nft",{

/***/ "./components/Nft.tsx":
/*!****************************!*\
  !*** ./components/Nft.tsx ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Nft; });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/core */ \"./node_modules/@chakra-ui/core/dist/es/index.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _web3_react_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @web3-react/core */ \"./node_modules/@web3-react/core/dist/core.esm.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/router */ \"./node_modules/next/dist/client/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _Refreshing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Refreshing */ \"./components/Refreshing.tsx\");\n/* harmony import */ var react_loader__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-loader */ \"./node_modules/react-loader/lib/react-loader.js\");\n/* harmony import */ var react_loader__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react_loader__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dynamic */ \"./node_modules/next/dist/next-server/lib/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils */ \"./utils.ts\");\n/* harmony import */ var _TransactionToast__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./TransactionToast */ \"./components/TransactionToast.tsx\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../constants */ \"./constants.ts\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../hooks */ \"./hooks.ts\");\n/* harmony import */ var react_tilt__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! react-tilt */ \"./node_modules/react-tilt/dist/tilt.js\");\n/* harmony import */ var react_tilt__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(react_tilt__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! crypto-js */ \"./node_modules/crypto-js/index.js\");\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(crypto_js__WEBPACK_IMPORTED_MODULE_16__);\n\n\n\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Nft.tsx\",\n    _s = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar AddrModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c = function _c() {\n  return __webpack_require__.e(/*! import() */ 5).then(__webpack_require__.bind(null, /*! ./AddrModal */ \"./components/AddrModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./AddrModal */ \"./components/AddrModal.tsx\")];\n    },\n    modules: ['./AddrModal']\n  }\n});\n_c2 = AddrModal;\nvar KeysModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c3 = function _c3() {\n  return __webpack_require__.e(/*! import() */ 6).then(__webpack_require__.bind(null, /*! ./KeysModal */ \"./components/KeysModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./KeysModal */ \"./components/KeysModal.tsx\")];\n    },\n    modules: ['./KeysModal']\n  }\n});\n_c4 = KeysModal;\nfunction Nft() {\n  _s();\n\n  var _this = this;\n\n  var _useWeb3React = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_6__[\"useWeb3React\"])(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId,\n      library = _useWeb3React.library;\n\n  var _useRouter = Object(next_router__WEBPACK_IMPORTED_MODULE_7__[\"useRouter\"])(),\n      query = _useRouter.query;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      approved = _useState[0],\n      setApproved = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(query.key),\n      mintPassword = _useState2[0],\n      setMintPassword = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(query.id),\n      tokenId = _useState3[0],\n      setTokenId = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(query.experimental),\n      experimental = _useState4[0],\n      setExperimental = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      vaultName = _useState5[0],\n      setVaultName = _useState5[1];\n\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      vaultDesc = _useState6[0],\n      setVaultDesc = _useState6[1];\n\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      vaultImage = _useState7[0],\n      setVaultImage = _useState7[1];\n\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      vaultValues = _useState8[0],\n      setVaultValues = _useState8[1];\n\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      vaultDataValues = _useState9[0],\n      setVaultDataValues = _useState9[1];\n\n  var _useState10 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      vaultAddresses = _useState10[0],\n      setVaultAddresses = _useState10[1];\n\n  var _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      vaultPrivacy = _useState11[0],\n      setVaultPrivacy = _useState11[1];\n\n  var _useState12 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(0),\n      vaultTotalValue = _useState12[0],\n      setVaultTotalValue = _useState12[1];\n\n  var _useState13 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      vaultChainId = _useState13[0],\n      setVaultChainId = _useState13[1];\n\n  var _useState14 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      hash = _useState14[0],\n      setHash = _useState14[1];\n\n  var _useState15 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      currCoin = _useState15[0],\n      setCurrCoin = _useState15[1];\n\n  var _useState16 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      currAddr = _useState16[0],\n      setCurrAddr = _useState16[1];\n\n  var _useState17 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])({\n    loaded: false\n  }),\n      state = _useState17[0],\n      setState = _useState17[1];\n\n  var _useState18 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      mine = _useState18[0],\n      setMine = _useState18[1];\n\n  var _useState19 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      claiming = _useState19[0],\n      setClaiming = _useState19[1];\n\n  var _useState20 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])('claimed'),\n      status = _useState20[0],\n      setStatus = _useState20[1];\n\n  var _useState21 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      claimedBy = _useState21[0],\n      setClaimedBy = _useState21[1];\n\n  var _useState22 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      mnemonic = _useState22[0],\n      setMnemonic = _useState22[1];\n\n  var _useState23 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      privKeyBTC = _useState23[0],\n      setPrivKeyBTC = _useState23[1];\n\n  var _useState24 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      privKeyETH = _useState24[0],\n      setPrivKeyETH = _useState24[1];\n\n  var _useState25 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      privValues = _useState25[0],\n      setKeyValues = _useState25[1];\n\n  var _useState26 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      loadingApi = _useState26[0],\n      setLoadingApi = _useState26[1];\n\n  var _useState27 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      decryptedEffect = _useState27[0],\n      setDecryptedEffect = _useState27[1];\n\n  var _useState28 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      decryptedEffectRunning = _useState28[0],\n      setDecryptedEffectRunning = _useState28[1];\n\n  var _useState29 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      decryptPassword = _useState29[0],\n      setDecryptPassword = _useState29[1];\n\n  var _useState30 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      invalidVault = _useState30[0],\n      setInvalidVault = _useState30[1];\n\n  var _useState31 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      hasCheckedNft = _useState31[0],\n      setHasCheckedNft = _useState31[1];\n\n  var _useState32 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      accepting = _useState32[0],\n      setAccepting = _useState32[1];\n\n  var _useState33 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      approving = _useState33[0],\n      setApproving = _useState33[1];\n\n  var _useState34 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      acceptable = _useState34[0],\n      setAcceptable = _useState34[1];\n\n  var _useState35 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      transferPassword = _useState35[0],\n      setTransferPassword = _useState35[1];\n\n  var _useState36 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      showTransferPassword = _useState36[0],\n      setShowTransferPassword = _useState36[1];\n\n  var _useState37 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      preTransfering = _useState37[0],\n      setPreTransfering = _useState37[1]; // const [transferImage, setTransferImage] = useState('')\n\n\n  var handlerContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerAbi, true);\n  var emblemContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemAbi, true);\n\n  var _useDisclosure = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"useDisclosure\"])(),\n      isOpenAddrModal = _useDisclosure.isOpen,\n      onOpenAddrModal = _useDisclosure.onOpen,\n      onCloseAddrModal = _useDisclosure.onClose;\n\n  var _useDisclosure2 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"useDisclosure\"])(),\n      isOpenKeysModal = _useDisclosure2.isOpen,\n      onOpenKeysModal = _useDisclosure2.onOpen,\n      onCloseKeysModal = _useDisclosure2.onClose;\n\n  var transferImage;\n\n  var fireMetaMask = function fireMetaMask() {\n    getWitness(function (witness) {\n      // console.log(tokenId, mintPassword, witness.nonce, witness.signature, account)\n      ;\n      handlerContract.transferWithCode(tokenId, mintPassword, account, witness.nonce, witness.signature).then(function (_ref) {\n        var hash = _ref.hash;\n        setTimeout(function () {\n          setHash(hash);\n          setAccepting(true); // setShowMakingVaultMsg(true)\n        }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n      })[\"catch\"](function (error) {\n        if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n          console.log(\"tx failed.\", error);\n        } else {\n          setAccepting(false); // setShowPreVaultMsg(false)\n        }\n      });\n    });\n  };\n\n  var addPreTransfer = function addPreTransfer() {\n    console.log('transferImage', \"0x\" + transferImage);\n    setPreTransfering(true);\n    handlerContract.addPreTransfer(tokenId, \"0x\" + transferImage).then(function (_ref2) {\n      var hash = _ref2.hash;\n      // setTimeout(() => {\n      setHash(hash);\n      console.log(\"Set Pre Transfering True\", preTransfering); // setShowMakingVaultMsg(true)\n      // }, 100) // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if (error === null || error === void 0 ? void 0 : error.code) {\n        console.log(\"Error?\");\n        setPreTransfering(false);\n        setShowTransferPassword(false);\n        setTransferPassword('');\n      } else {// setShowTransferPassword(!showTransferPassword? true : false)\n        // setPreTransfering(false)\n        // setShowPreVaultMsg(false)\n      }\n    });\n  };\n\n  var handleApproveForall = function handleApproveForall() {\n    ;\n    emblemContract.setApprovalForAll(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId], true).then(function (_ref3) {\n      var hash = _ref3.hash;\n      setTimeout(function () {\n        setHash(hash);\n        setApproving(true); // setShowMakingVaultMsg(true)\n      }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        console.log(\"tx failed.\", error);\n      } else {\n        setApproving(false); // setShowPreVaultMsg(false)\n      }\n    });\n  }; // \n\n\n  var getVault = /*#__PURE__*/function () {\n    var _ref4 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee() {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              loadCache();\n              _context.next = 3;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/meta/' + tokenId + '?experimental=true', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 3:\n              responce = _context.sent;\n              _context.next = 6;\n              return responce.json();\n\n            case 6:\n              jsonData = _context.sent;\n\n              // console.log('vault response was ', jsonData)\n              if (!jsonData.name) {\n                setState({\n                  loaded: true\n                });\n                setInvalidVault(true);\n              } else {\n                setStates(jsonData);\n                saveCache(jsonData);\n                setLoadingApi(false);\n                setInvalidVault(false);\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getVault() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var getWitness = /*#__PURE__*/function () {\n    var _ref5 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee2(cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/witness/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata',\n                  chainid: chainId.toString()\n                }\n              });\n\n            case 2:\n              responce = _context2.sent;\n              _context2.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context2.sent;\n\n              if (!jsonData.signature) {\n                _context2.next = 11;\n                break;\n              }\n\n              console.log('witness', jsonData);\n              return _context2.abrupt(\"return\", cb(jsonData));\n\n            case 11:\n              return _context2.abrupt(\"return\", cb(false));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getWitness(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var setStates = function setStates(jsonData) {\n    setVaultName(jsonData.name);\n    setVaultImage(jsonData.image);\n    setVaultDesc(jsonData.description);\n    setVaultTotalValue(jsonData.totalValue || 0);\n    setVaultValues(vaultValues.concat(jsonData.values));\n    setVaultDataValues(jsonData.attributes.filter(function (item) {\n      return item.trait_type === \"key\";\n    }));\n    setVaultDesc(jsonData.description);\n    setVaultAddresses(jsonData.addresses);\n    setVaultChainId(jsonData.network == 'mainnet' ? 1 : jsonData.network == \"rinkeby\" ? 4 : jsonData.network == \"mumbai\" ? 80001 : jsonData.network == \"matic\" ? 137 : 97);\n    setStatus(jsonData.status);\n\n    if (status === 'claimed') {\n      setClaimedBy(jsonData.claimedBy);\n    } // console.log('inside getstates. mine is ', mine)\n\n\n    setState({\n      loaded: true\n    });\n    var isPvt = jsonData.addresses.filter(function (item) {\n      return item.address.includes('private:');\n    }).length > 0;\n    setVaultPrivacy(isPvt);\n    setTimeout(function () {\n      !isPvt ? getNftBalance(jsonData.values, jsonData.addresses.filter(function (item) {\n        return item.coin === 'ETH';\n      })[0].address, function (_values) {\n        // console.log(\"Have new values\", _values)\n        setVaultValues(_values);\n      }) : null;\n    }, 5);\n  };\n\n  var loadCache = function loadCache() {\n    var vault = JSON.parse(localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_vault')); // Load vaults from storage before updating from server!\n\n    if (vault) {\n      setState({\n        loaded: true\n      });\n      setStates(vault);\n      setLoadingApi(true);\n    }\n  };\n\n  var getEthBalances = /*#__PURE__*/function () {\n    var _ref6 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee3(address, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/eth/balance/' + address, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context3.sent;\n              _context3.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context3.sent;\n              // console.log(Number(vaultTotalValue), Number(jsonData.totalValue))\n              setVaultTotalValue(Number(vaultTotalValue) + Number(jsonData.totalValue)); // console.log('get eth balances', jsonData.values)\n\n              return _context3.abrupt(\"return\", cb(jsonData.values));\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getEthBalances(_x2, _x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var getBtcBalance = /*#__PURE__*/function () {\n    var _ref7 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee4(values, address, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/btc/balance/' + address, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context4.sent;\n              _context4.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context4.sent;\n              return _context4.abrupt(\"return\", cb(values.concat(jsonData.values)));\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getBtcBalance(_x4, _x5, _x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var getNftBalance = /*#__PURE__*/function () {\n    var _ref8 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee5(values, address, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/eth/nft/' + address, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context5.sent;\n              _context5.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context5.sent;\n\n              if (!(jsonData.length > 0)) {\n                _context5.next = 10;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", cb(values.concat(jsonData)));\n\n            case 10:\n              return _context5.abrupt(\"return\", cb(values));\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getNftBalance(_x7, _x8, _x9) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var saveCache = function saveCache(vault) {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_vault', JSON.stringify(vault)); // Save new state for later\n  };\n\n  var getKeys = /*#__PURE__*/function () {\n    var _ref9 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee6(signature, tokenId, cb) {\n      var myHeaders, raw, responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainId', chainId.toString());\n              myHeaders.append('service', 'evmetadata');\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature\n              });\n              _context6.next = 7;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/verify/' + tokenId, {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 7:\n              responce = _context6.sent;\n              _context6.next = 10;\n              return responce.json();\n\n            case 10:\n              jsonData = _context6.sent;\n              return _context6.abrupt(\"return\", cb(jsonData));\n\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function getKeys(_x10, _x11, _x12) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var getContractStates = /*#__PURE__*/function () {\n    var _ref10 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee7() {\n      var owned, owner, _acceptable, isApproved;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              owned = false;\n              _context7.prev = 1;\n              _context7.next = 4;\n              return emblemContract.ownerOf(tokenId);\n\n            case 4:\n              owner = _context7.sent;\n              _context7.next = 7;\n              return handlerContract.getPreTransfer(tokenId);\n\n            case 7:\n              _acceptable = _context7.sent;\n              _context7.next = 10;\n              return emblemContract.isApprovedForAll(account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId]);\n\n            case 10:\n              isApproved = _context7.sent;\n              setApproved(isApproved);\n              setAcceptable(_acceptable._from !== \"0x0000000000000000000000000000000000000000\"); // console.log(\"owned\", owner === account)\n              // console.log(owner, account)\n              // console.log(\"approved\", isApproved)\n              // console.log(\"check approved for all\", account, contractAddresses.vaultHandler[chainId])\n\n              setMine(owner === account);\n              _context7.next = 18;\n              break;\n\n            case 16:\n              _context7.prev = 16;\n              _context7.t0 = _context7[\"catch\"](1);\n\n            case 18:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[1, 16]]);\n    }));\n\n    return function getContractStates() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {// console.log(\"mine?\", mine)\n    // console.log(\"claiming?\", claiming)\n    // console.log(\"accepting?\", accepting)\n  });\n\n  var handleSign = /*#__PURE__*/function () {\n    var _ref11 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee8() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              // library. .personal.sign(library.toHex(\"Claim:358746\"),library.eth.defaultAccount, (err,res) => console.log(err,res))\n              library.getSigner(account).signMessage('Claim: ' + tokenId).then(function (signature) {\n                getKeys(signature, tokenId, function (result) {\n                  // console.log('HandleSign response is ' + result)\n                  setMnemonic(result.decrypted.phrase);\n                  setPrivKeyBTC(result.decrypted.keys.filter(function (key) {\n                    return key.coin === 'btc';\n                  })[0].privkey);\n                  setPrivKeyETH(result.decrypted.keys.filter(function (key) {\n                    return key.coin === 'eth';\n                  })[0].privkey);\n                  setKeyValues(result.decrypted.values);\n                  onOpenKeysModal();\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function handleSign() {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var handleClaim = /*#__PURE__*/function () {\n    var _ref12 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee9() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              emblemContract.transferFrom(account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"BURN_ADDRESS\"], tokenId).then(function (_ref13) {\n                var hash = _ref13.hash;\n                setClaiming(true);\n                setTimeout(function () {\n                  setHash(hash);\n                }, 100); // Solving State race condition where transaction watcher wouldn't notice we were claiming\n              });\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function handleClaim() {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  var startDecryptEffect = /*#__PURE__*/function () {\n    var _ref14 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee10() {\n      var theLetters, ctnt, speed, increment, clen, si, stri, block, fixed, nextFrame;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              nextFrame = function _nextFrame(pos) {\n                for (var i = 0; i < clen - stri; i++) {\n                  //Random number\n                  var num = Math.floor(theLetters.length * Math.random()); //Get random letter\n\n                  var letter = theLetters.charAt(num);\n                  block = block + letter;\n                }\n\n                if (si == increment - 1) {\n                  stri++;\n                }\n\n                if (si == increment) {\n                  // Add a letter;\n                  // every speed*10 ms\n                  fixed = fixed + ctnt.charAt(stri - 1);\n                  si = 0;\n                } // $(\"#output\").html(fixed + block);\n\n\n                setDecryptedEffect(fixed + block);\n                block = '';\n              };\n\n              if (!decryptedEffectRunning) {\n                _context10.next = 3;\n                break;\n              }\n\n              return _context10.abrupt(\"return\");\n\n            case 3:\n              setDecryptedEffectRunning(true);\n              theLetters = 'abcdefghijklmnopqrstuvwxyz'; //You can customize what letters it will cycle through\n\n              ctnt = 'Decrypting'; // Your text goes here\n\n              speed = 5; // ms per frame\n\n              increment = 8; // frames per step. Must be >2\n\n              clen = ctnt.length;\n              si = 0;\n              stri = 0;\n              block = '';\n              fixed = '';\n\n              (function rustle(i) {\n                setTimeout(function () {\n                  if (--i) {\n                    rustle(i);\n                  } else {\n                    setDecryptedEffectRunning(false);\n                  }\n\n                  nextFrame(i);\n                  si = si + 1;\n                }, speed);\n              })(clen * increment + 1);\n\n            case 14:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function startDecryptEffect() {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    getVault();\n  }, []);\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    // console.log('Account chainid = ' + chainId + ' and vaultchainid = ' + vaultChainId)\n    account && chainId && vaultChainId && chainId == vaultChainId ? getContractStates() : null; // console.log('in the usefeect that clls getcontractstates')\n  });\n\n  function splitDescription(words) {\n    var desc = words.split('\\n\\n\\n\\n');\n    return desc[0].trim();\n  }\n\n  function tryDecrypt(key) {\n    if (decryptPassword) {\n      key = decryptPassword;\n    }\n\n    startDecryptEffect();\n    var ciphertext = vaultAddresses[0].address.replace('private:', '');\n\n    try {\n      var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(ciphertext, key);\n      JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n      setVaultPrivacy(false);\n      setDecryptPassword(key);\n      setVaultAddresses(decryptAddresses(key));\n      getEthBalances(vaultAddresses.filter(function (item) {\n        return item.coin === 'ETH';\n      })[0].address, function (values) {\n        getBtcBalance(values, vaultAddresses.filter(function (item) {\n          return item.coin === 'BTC';\n        })[0].address, function (_values) {\n          // console.log(\"Have fucking values\", values)\n          getNftBalance(_values, vaultAddresses.filter(function (item) {\n            return item.coin === 'ETH';\n          })[0].address, function (__values) {\n            setVaultValues(__values.concat(vaultValues));\n          });\n        });\n      });\n    } catch (err) {}\n  }\n\n  function decryptAddresses(key) {\n    vaultAddresses.forEach(function (item) {\n      var cipherText = item.address.replace('private:', '');\n      item.address = decrypt(cipherText, key);\n    });\n    return vaultAddresses;\n  }\n\n  function decrypt(cipherText, key) {\n    var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(cipherText, key);\n    var decryptedData = JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n    return decryptedData;\n  }\n\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(next_head__WEBPACK_IMPORTED_MODULE_5___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 8\n    }\n  }, __jsx(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:site\",\n    content: \"Emblem.Finance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:title\",\n    content: vaultName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:description\",\n    content: splitDescription(vaultDesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:image\",\n    content: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 9\n    }\n  })), __jsx(AddrModal, {\n    isOpen: isOpenAddrModal,\n    onClose: onCloseAddrModal,\n    addrCoin: currCoin,\n    addrAddr: currAddr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }\n  }), __jsx(KeysModal, {\n    isOpen: isOpenKeysModal,\n    onClose: onCloseKeysModal,\n    mnemonic: mnemonic,\n    privKeyBTC: privKeyBTC,\n    privKeyETH: privKeyETH,\n    privValues: privValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }\n  }), __jsx(react_loader__WEBPACK_IMPORTED_MODULE_9___default.a, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }\n  }, loadingApi ? __jsx(_Refreshing__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 23\n    }\n  }) : '', !invalidVault ? __jsx(react_tilt__WEBPACK_IMPORTED_MODULE_15___default.a, {\n    className: \"Tilt\",\n    options: {\n      max: experimental ? 0 : 0,\n      scale: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 11\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Flex\"], {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 13\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    borderColor: vaultChainId != chainId ? 'orange.500' : status == 'claimed' ? 'green.500' : null,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    minW: 390,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 15\n    }\n  }, vaultChainId != chainId ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    alignItems: \"center\",\n    color: \"orange.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 19\n    }\n  }, \"BEWARE: Vault is on a different network than you are.\") : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 17\n    }\n  }, vaultName, !vaultPrivacy ? ': ~$' + vaultTotalValue : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Stack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Image\"], {\n    src: Object(_utils__WEBPACK_IMPORTED_MODULE_11__[\"validImage\"])(vaultImage) ? vaultImage : 'https://circuitsofvalue.com/public/coval-logo.png',\n    width: \"250px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 19\n    }\n  })), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Stack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    mt: \"2\",\n    ml: \"4\",\n    lineHeight: \"tight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    mt: 2,\n    as: \"h4\",\n    ml: \"4\",\n    mr: \"4\",\n    fontSize: \"xs\",\n    fontStyle: \"italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 21\n    }\n  }, splitDescription(vaultDesc)))), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    p: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    color: \"gray.500\",\n    letterSpacing: \"wide\",\n    fontSize: \"sm\",\n    ml: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    as: \"h4\",\n    fontWeight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 23\n    }\n  }, \"Current Contents:\"), vaultPrivacy ? __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    pb: 2,\n    color: decryptedEffect ? 'green.500' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 27\n    }\n  }, decryptedEffect ? decryptedEffect : 'Contents hidden. Enter password to unlock.'), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Input\"], {\n    type: \"password\",\n    id: \"vault-password\",\n    onChange: function onChange(e) {\n      return tryDecrypt(e.target.value);\n    },\n    \"aria-describedby\": \"password-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 27\n    }\n  })) : vaultValues.length ? vaultValues.map(function (coin) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n      key: coin.name,\n      isTruncated: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 29\n      }\n    }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Image\"], {\n      width: 10,\n      src: coin.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 31\n      }\n    }), coin.name, \" :\", ' ', coin.balance ? coin.balance : coin.type == 'nft' ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Link\"], {\n      href: coin.external_url,\n      isExternal: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 33\n      }\n    }, \"View NFT\") : null);\n  }) : null, vaultDataValues.length ? vaultDataValues.map(function (data) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 29\n      }\n    }, \"Data: \", data.attribute_key);\n  }) : !vaultDataValues.length && !vaultValues.length ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 25\n    }\n  }, \"Nothing in here! Fill 'er up!\") : null)), !vaultPrivacy ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"ButtonGroup\"], {\n    justifyContent: \"space-between\",\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 23\n    }\n  }, vaultAddresses.map(function (addr) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n      key: addr.address,\n      onClick: function onClick() {\n        setCurrCoin(addr.coin);\n        setCurrAddr(addr.address);\n        onOpenAddrModal();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 29\n      }\n    }, \"Put \", addr.coin == 'ETH' ? addr.coin + '/ERC20' : addr.coin, \" In\");\n  }))) : null, !(status === 'claimed') && !mintPassword ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    width: \"100%\",\n    as: \"a\"\n  }, {\n    href: 'https://' + (vaultChainId == 4 ? 'rinkeby.' : '') + 'opensea.io/assets/' + _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[vaultChainId] + '/' + tokenId,\n    target: '_blank',\n    rel: 'noopener noreferrer'\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 23\n    }\n  }), mine ? 'Sell/Gift/Send (Opensea)' : 'Make an Offer (Opensea)')) : null, mine && !acceptable ? __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n    width: \"100%\",\n    onClick: function onClick() {\n      if (!approved) {\n        return handleApproveForall();\n      } else {\n        var key = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.lib.WordArray.random(128 / 8).toString();\n        var sha = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.SHA256(key).toString();\n        console.log('plain', key);\n        console.log('sha', sha);\n        setTransferPassword(key);\n        transferImage = sha;\n        setTimeout(function () {\n          addPreTransfer();\n        }, 500);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 23\n    }\n  }, \" \", approved ? \"Get Link (Send Vault Via Link)\" : \"Approve Gifting\", \" \")), showTransferPassword ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 48\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Link\"], {\n    href: location.protocol + '//' + location.host + '/nft?id=' + tokenId + '&key=' + transferPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 53\n    }\n  }, \"Copy Me\")) : null) : null, acceptable && claimedBy !== account ? __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n    mt: 2,\n    width: \"100%\",\n    onClick: function onClick() {\n      fireMetaMask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 23\n    }\n  }, \"Accept\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Input\"], {\n    mt: 2,\n    type: \"password\",\n    id: \"mintPassword\",\n    minLength: 3,\n    maxLength: 200,\n    value: mintPassword,\n    onChange: function onChange(e) {\n      return setMintPassword(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 23\n    }\n  })) : null, !(status === 'claimed') && account && vaultChainId === chainId && mine ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n    width: \"100%\",\n    onClick: function onClick() {\n      handleClaim();\n    },\n    isDisabled: claiming,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 23\n    }\n  }, claiming ? 'Claiming ...' : 'Claim (Crack Open Vault)')) : status === 'claimed' && claimedBy === account && vaultChainId === chainId ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n    width: \"100%\",\n    onClick: handleSign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 23\n    }\n  }, \"Get Keys\")) : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Stack\"], {\n    direction: \"column\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 17\n    }\n  }, status == 'claimed' ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    color: \"green.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 42\n    }\n  }, \"CLAIMED\") : null), hash ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Alert\"], {\n    status: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"AlertIcon\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 21\n    }\n  }), accepting ? \"Accepting your vault\" : \"Claiming your vault ...\") : null))) : __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Stack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 11\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Image\"], {\n    width: \"md\",\n    src: \"https://starwarsblog.starwars.com/wp-content/uploads/2017/06/25-star-wars-quotes-obi-wan-kenobi-identification-tall.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 13\n    }\n  }), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 13\n    }\n  }, \"THESE ARE NOT THE VAULTS YOU ARE LOOKING FOR\", ' ', __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Link\"], {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 15\n    }\n  }, \"CREATE ONE HERE!\"))), hash ? __jsx(_TransactionToast__WEBPACK_IMPORTED_MODULE_12__[\"TransactionToast\"], {\n    hash: hash,\n    onComplete: function onComplete() {\n      // location.href = location.origin + '/vault?id=' + tokenId\n      if (claiming && !accepting && !preTransfering) {\n        console.log(111111);\n        setHash(null);\n        setStatus('claimed');\n        setClaiming(false);\n        setClaimedBy(account);\n        handleSign();\n      } else if (preTransfering) {\n        setShowTransferPassword(true);\n        console.log(2222222);\n        setPreTransfering(false);\n        setHash(null);\n      } else if (accepting) {\n        console.log(3333333);\n        setAccepting(false);\n        setHash(null);\n        getVault();\n      } else if (approving) {\n        console.log(4444444);\n        setApproving(false);\n        setHash(null);\n        getVault();\n      } else {\n        console.log('claiming', claiming);\n        console.log('accepting', accepting);\n        console.log('preTransfering', preTransfering);\n        console.log('approving', approving);\n        console.log(\"Unknown state\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 11\n    }\n  }) : null));\n}\n\n_s(Nft, \"Xp0sT2dVY7z5wSFP5CI8D3siQZQ=\", false, function () {\n  return [_web3_react_core__WEBPACK_IMPORTED_MODULE_6__[\"useWeb3React\"], next_router__WEBPACK_IMPORTED_MODULE_7__[\"useRouter\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"useDisclosure\"]];\n});\n\n_c5 = Nft;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"AddrModal$dynamic\");\n$RefreshReg$(_c2, \"AddrModal\");\n$RefreshReg$(_c3, \"KeysModal$dynamic\");\n$RefreshReg$(_c4, \"KeysModal\");\n$RefreshReg$(_c5, \"Nft\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Nft.tsx\n");

/***/ })

})