webpackHotUpdate_N_E("pages/nft",{

/***/ "./components/Nft.tsx":
/*!****************************!*\
  !*** ./components/Nft.tsx ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Nft; });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/core */ \"./node_modules/@chakra-ui/core/dist/es/index.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _web3_react_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @web3-react/core */ \"./node_modules/@web3-react/core/dist/core.esm.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/router */ \"./node_modules/next/dist/client/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _Refreshing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Refreshing */ \"./components/Refreshing.tsx\");\n/* harmony import */ var react_loader__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-loader */ \"./node_modules/react-loader/lib/react-loader.js\");\n/* harmony import */ var react_loader__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react_loader__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dynamic */ \"./node_modules/next/dist/next-server/lib/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils */ \"./utils.ts\");\n/* harmony import */ var _TransactionToast__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./TransactionToast */ \"./components/TransactionToast.tsx\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../constants */ \"./constants.ts\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../hooks */ \"./hooks.ts\");\n/* harmony import */ var react_tilt__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! react-tilt */ \"./node_modules/react-tilt/dist/tilt.js\");\n/* harmony import */ var react_tilt__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(react_tilt__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! crypto-js */ \"./node_modules/crypto-js/index.js\");\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(crypto_js__WEBPACK_IMPORTED_MODULE_16__);\n\n\n\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Nft.tsx\",\n    _s = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar AddrModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c = function _c() {\n  return __webpack_require__.e(/*! import() */ 5).then(__webpack_require__.bind(null, /*! ./AddrModal */ \"./components/AddrModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./AddrModal */ \"./components/AddrModal.tsx\")];\n    },\n    modules: ['./AddrModal']\n  }\n});\n_c2 = AddrModal;\nvar KeysModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c3 = function _c3() {\n  return __webpack_require__.e(/*! import() */ 6).then(__webpack_require__.bind(null, /*! ./KeysModal */ \"./components/KeysModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./KeysModal */ \"./components/KeysModal.tsx\")];\n    },\n    modules: ['./KeysModal']\n  }\n});\n_c4 = KeysModal;\nfunction Nft() {\n  _s();\n\n  var _this = this;\n\n  var _useWeb3React = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_6__[\"useWeb3React\"])(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId,\n      library = _useWeb3React.library;\n\n  var _useRouter = Object(next_router__WEBPACK_IMPORTED_MODULE_7__[\"useRouter\"])(),\n      query = _useRouter.query;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      approved = _useState[0],\n      setApproved = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(query.key || ''),\n      mintPassword = _useState2[0],\n      setMintPassword = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(query.id),\n      tokenId = _useState3[0],\n      setTokenId = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(query.experimental),\n      experimental = _useState4[0],\n      setExperimental = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      vaultName = _useState5[0],\n      setVaultName = _useState5[1];\n\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      vaultDesc = _useState6[0],\n      setVaultDesc = _useState6[1];\n\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      vaultImage = _useState7[0],\n      setVaultImage = _useState7[1];\n\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      vaultValues = _useState8[0],\n      setVaultValues = _useState8[1];\n\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      vaultDataValues = _useState9[0],\n      setVaultDataValues = _useState9[1];\n\n  var _useState10 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      vaultAddresses = _useState10[0],\n      setVaultAddresses = _useState10[1];\n\n  var _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      vaultPrivacy = _useState11[0],\n      setVaultPrivacy = _useState11[1];\n\n  var _useState12 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(0),\n      vaultTotalValue = _useState12[0],\n      setVaultTotalValue = _useState12[1];\n\n  var _useState13 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      vaultChainId = _useState13[0],\n      setVaultChainId = _useState13[1];\n\n  var _useState14 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      hash = _useState14[0],\n      setHash = _useState14[1];\n\n  var _useState15 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      currCoin = _useState15[0],\n      setCurrCoin = _useState15[1];\n\n  var _useState16 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      currAddr = _useState16[0],\n      setCurrAddr = _useState16[1];\n\n  var _useState17 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])({\n    loaded: false\n  }),\n      state = _useState17[0],\n      setState = _useState17[1];\n\n  var _useState18 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      mine = _useState18[0],\n      setMine = _useState18[1];\n\n  var _useState19 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      claiming = _useState19[0],\n      setClaiming = _useState19[1];\n\n  var _useState20 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])('claimed'),\n      status = _useState20[0],\n      setStatus = _useState20[1];\n\n  var _useState21 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      claimedBy = _useState21[0],\n      setClaimedBy = _useState21[1];\n\n  var _useState22 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      mnemonic = _useState22[0],\n      setMnemonic = _useState22[1];\n\n  var _useState23 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      privKeyBTC = _useState23[0],\n      setPrivKeyBTC = _useState23[1];\n\n  var _useState24 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      privKeyETH = _useState24[0],\n      setPrivKeyETH = _useState24[1];\n\n  var _useState25 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      privValues = _useState25[0],\n      setKeyValues = _useState25[1];\n\n  var _useState26 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      loadingApi = _useState26[0],\n      setLoadingApi = _useState26[1];\n\n  var _useState27 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      decryptedEffect = _useState27[0],\n      setDecryptedEffect = _useState27[1];\n\n  var _useState28 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      decryptedEffectRunning = _useState28[0],\n      setDecryptedEffectRunning = _useState28[1];\n\n  var _useState29 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      decryptPassword = _useState29[0],\n      setDecryptPassword = _useState29[1];\n\n  var _useState30 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      invalidVault = _useState30[0],\n      setInvalidVault = _useState30[1];\n\n  var _useState31 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      hasCheckedNft = _useState31[0],\n      setHasCheckedNft = _useState31[1];\n\n  var _useState32 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      accepting = _useState32[0],\n      setAccepting = _useState32[1];\n\n  var _useState33 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      approving = _useState33[0],\n      setApproving = _useState33[1];\n\n  var _useState34 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      acceptable = _useState34[0],\n      setAcceptable = _useState34[1];\n\n  var _useState35 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      transferPassword = _useState35[0],\n      setTransferPassword = _useState35[1];\n\n  var _useState36 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      showTransferPassword = _useState36[0],\n      setShowTransferPassword = _useState36[1];\n\n  var _useState37 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      preTransfering = _useState37[0],\n      setPreTransfering = _useState37[1]; // const [transferImage, setTransferImage] = useState('')\n\n\n  var handlerContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerAbi, true);\n  var emblemContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemAbi, true);\n\n  var _useDisclosure = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"useDisclosure\"])(),\n      isOpenAddrModal = _useDisclosure.isOpen,\n      onOpenAddrModal = _useDisclosure.onOpen,\n      onCloseAddrModal = _useDisclosure.onClose;\n\n  var _useDisclosure2 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"useDisclosure\"])(),\n      isOpenKeysModal = _useDisclosure2.isOpen,\n      onOpenKeysModal = _useDisclosure2.onOpen,\n      onCloseKeysModal = _useDisclosure2.onClose;\n\n  var transferImage;\n\n  var fireMetaMask = function fireMetaMask() {\n    getWitness(function (witness) {\n      // console.log(tokenId, mintPassword, witness.nonce, witness.signature, account)\n      ;\n      handlerContract.transferWithCode(tokenId, mintPassword, account, witness.nonce, witness.signature).then(function (_ref) {\n        var hash = _ref.hash;\n        setTimeout(function () {\n          setHash(hash);\n          setAccepting(true); // setShowMakingVaultMsg(true)\n        }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n      })[\"catch\"](function (error) {\n        if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n          console.log(\"tx failed.\", error);\n        } else {\n          setAccepting(false); // setShowPreVaultMsg(false)\n        }\n      });\n    });\n  };\n\n  var addPreTransfer = function addPreTransfer() {\n    console.log('transferImage', \"0x\" + transferImage);\n    setPreTransfering(true);\n    handlerContract.addPreTransfer(tokenId, \"0x\" + transferImage).then(function (_ref2) {\n      var hash = _ref2.hash;\n      // setTimeout(() => {\n      setHash(hash);\n      console.log(\"Set Pre Transfering True\", preTransfering); // setShowMakingVaultMsg(true)\n      // }, 100) // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if (error === null || error === void 0 ? void 0 : error.code) {\n        console.log(\"Error?\");\n        setPreTransfering(false);\n        setShowTransferPassword(false);\n        setTransferPassword('');\n      } else {// setShowTransferPassword(!showTransferPassword? true : false)\n        // setPreTransfering(false)\n        // setShowPreVaultMsg(false)\n      }\n    });\n  };\n\n  var handleApproveForall = function handleApproveForall() {\n    ;\n    emblemContract.setApprovalForAll(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId], true).then(function (_ref3) {\n      var hash = _ref3.hash;\n      setTimeout(function () {\n        setHash(hash);\n        setApproving(true); // setShowMakingVaultMsg(true)\n      }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        console.log(\"tx failed.\", error);\n      } else {\n        setApproving(false); // setShowPreVaultMsg(false)\n      }\n    });\n  }; // \n\n\n  var getVault = /*#__PURE__*/function () {\n    var _ref4 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee() {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              loadCache();\n              _context.next = 3;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/meta/' + tokenId + '?experimental=true', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 3:\n              responce = _context.sent;\n              _context.next = 6;\n              return responce.json();\n\n            case 6:\n              jsonData = _context.sent;\n\n              // console.log('vault response was ', jsonData)\n              if (!jsonData.name) {\n                setState({\n                  loaded: true\n                });\n                setInvalidVault(true);\n              } else {\n                setStates(jsonData);\n                saveCache(jsonData);\n                setLoadingApi(false);\n                setInvalidVault(false);\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getVault() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var getWitness = /*#__PURE__*/function () {\n    var _ref5 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee2(cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/witness/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata',\n                  chainid: chainId.toString()\n                }\n              });\n\n            case 2:\n              responce = _context2.sent;\n              _context2.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context2.sent;\n\n              if (!jsonData.signature) {\n                _context2.next = 11;\n                break;\n              }\n\n              console.log('witness', jsonData);\n              return _context2.abrupt(\"return\", cb(jsonData));\n\n            case 11:\n              return _context2.abrupt(\"return\", cb(false));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getWitness(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var setStates = function setStates(jsonData) {\n    setVaultName(jsonData.name);\n    setVaultImage(jsonData.image);\n    setVaultDesc(jsonData.description);\n    setVaultTotalValue(jsonData.totalValue || 0);\n    setVaultValues(vaultValues.concat(jsonData.values));\n    setVaultDataValues(jsonData.attributes.filter(function (item) {\n      return item.trait_type === \"key\";\n    }));\n    setVaultDesc(jsonData.description);\n    setVaultAddresses(jsonData.addresses);\n    setVaultChainId(jsonData.network == 'mainnet' ? 1 : jsonData.network == \"rinkeby\" ? 4 : jsonData.network == \"mumbai\" ? 80001 : jsonData.network == \"matic\" ? 137 : 97);\n    setStatus(jsonData.status);\n\n    if (status === 'claimed') {\n      setClaimedBy(jsonData.claimedBy);\n    } // console.log('inside getstates. mine is ', mine)\n\n\n    setState({\n      loaded: true\n    });\n    var isPvt = jsonData.addresses.filter(function (item) {\n      return item.address.includes('private:');\n    }).length > 0;\n    setVaultPrivacy(isPvt);\n    setTimeout(function () {\n      !isPvt ? getNftBalance(jsonData.values, jsonData.addresses.filter(function (item) {\n        return item.coin === 'ETH';\n      })[0].address, function (_values) {\n        // console.log(\"Have new values\", _values)\n        setVaultValues(_values);\n      }) : null;\n    }, 5);\n  };\n\n  var getEthBalances = /*#__PURE__*/function () {\n    var _ref6 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee3(address, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/eth/balance/' + address, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context3.sent;\n              _context3.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context3.sent;\n              // console.log(Number(vaultTotalValue), Number(jsonData.totalValue))\n              setVaultTotalValue(Number(vaultTotalValue) + Number(jsonData.totalValue)); // console.log('get eth balances', jsonData.values)\n\n              return _context3.abrupt(\"return\", cb(jsonData.values));\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getEthBalances(_x2, _x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var getBtcBalance = /*#__PURE__*/function () {\n    var _ref7 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee4(values, address, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/btc/balance/' + address, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context4.sent;\n              _context4.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context4.sent;\n              return _context4.abrupt(\"return\", cb(values.concat(jsonData.values)));\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getBtcBalance(_x4, _x5, _x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var getNftBalance = /*#__PURE__*/function () {\n    var _ref8 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee5(values, address, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/eth/nft/' + address, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context5.sent;\n              _context5.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context5.sent;\n\n              if (!(jsonData.length > 0)) {\n                _context5.next = 10;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", cb(values.concat(jsonData)));\n\n            case 10:\n              return _context5.abrupt(\"return\", cb(values));\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getNftBalance(_x7, _x8, _x9) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var saveCache = function saveCache(vault) {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_vault', JSON.stringify(vault)); // Save new state for later\n  };\n\n  var loadCache = function loadCache() {\n    var vault = JSON.parse(localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_vault')); // Load vaults from storage before updating from server!\n\n    if (vault) {\n      setState({\n        loaded: true\n      });\n      setStates(vault);\n      setLoadingApi(true);\n    }\n  };\n\n  var savePasswordToLocalStorage = function savePasswordToLocalStorage() {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_mintPassword', transferPassword); // Save new state for later\n  };\n\n  var loadPasswordFromLocalStorage = function loadPasswordFromLocalStorage() {\n    setMintPassword(localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_mintPassword')); // Save new state for later\n  };\n\n  var getKeys = /*#__PURE__*/function () {\n    var _ref9 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee6(signature, tokenId, cb) {\n      var myHeaders, raw, responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainId', chainId.toString());\n              myHeaders.append('service', 'evmetadata');\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature\n              });\n              _context6.next = 7;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/verify/' + tokenId, {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 7:\n              responce = _context6.sent;\n              _context6.next = 10;\n              return responce.json();\n\n            case 10:\n              jsonData = _context6.sent;\n              return _context6.abrupt(\"return\", cb(jsonData));\n\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function getKeys(_x10, _x11, _x12) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var getContractStates = /*#__PURE__*/function () {\n    var _ref10 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee7() {\n      var owned, owner, _acceptable, isApproved;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              owned = false;\n              _context7.prev = 1;\n              _context7.next = 4;\n              return emblemContract.ownerOf(tokenId);\n\n            case 4:\n              owner = _context7.sent;\n              _context7.next = 7;\n              return handlerContract.getPreTransfer(tokenId);\n\n            case 7:\n              _acceptable = _context7.sent;\n              _context7.next = 10;\n              return emblemContract.isApprovedForAll(account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId]);\n\n            case 10:\n              isApproved = _context7.sent;\n              setApproved(isApproved);\n              setAcceptable(_acceptable._from !== \"0x0000000000000000000000000000000000000000\");\n              setMine(owner === account);\n              loadPasswordFromLocalStorage();\n              _context7.next = 19;\n              break;\n\n            case 17:\n              _context7.prev = 17;\n              _context7.t0 = _context7[\"catch\"](1);\n\n            case 19:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[1, 17]]);\n    }));\n\n    return function getContractStates() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    // console.log(\"mine?\", mine)\n    // console.log(\"claiming?\", claiming)\n    // console.log(\"accepting?\", accepting)\n    console.log(\"acceptable\", acceptable);\n  });\n\n  var handleSign = /*#__PURE__*/function () {\n    var _ref11 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee8() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              // library. .personal.sign(library.toHex(\"Claim:358746\"),library.eth.defaultAccount, (err,res) => console.log(err,res))\n              library.getSigner(account).signMessage('Claim: ' + tokenId).then(function (signature) {\n                getKeys(signature, tokenId, function (result) {\n                  // console.log('HandleSign response is ' + result)\n                  setMnemonic(result.decrypted.phrase);\n                  setPrivKeyBTC(result.decrypted.keys.filter(function (key) {\n                    return key.coin === 'btc';\n                  })[0].privkey);\n                  setPrivKeyETH(result.decrypted.keys.filter(function (key) {\n                    return key.coin === 'eth';\n                  })[0].privkey);\n                  setKeyValues(result.decrypted.values);\n                  onOpenKeysModal();\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function handleSign() {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var handleClaim = /*#__PURE__*/function () {\n    var _ref12 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee9() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              emblemContract.transferFrom(account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"BURN_ADDRESS\"], tokenId).then(function (_ref13) {\n                var hash = _ref13.hash;\n                setClaiming(true);\n                setTimeout(function () {\n                  setHash(hash);\n                }, 100); // Solving State race condition where transaction watcher wouldn't notice we were claiming\n              });\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function handleClaim() {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  var startDecryptEffect = /*#__PURE__*/function () {\n    var _ref14 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee10() {\n      var theLetters, ctnt, speed, increment, clen, si, stri, block, fixed, nextFrame;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              nextFrame = function _nextFrame(pos) {\n                for (var i = 0; i < clen - stri; i++) {\n                  //Random number\n                  var num = Math.floor(theLetters.length * Math.random()); //Get random letter\n\n                  var letter = theLetters.charAt(num);\n                  block = block + letter;\n                }\n\n                if (si == increment - 1) {\n                  stri++;\n                }\n\n                if (si == increment) {\n                  // Add a letter;\n                  // every speed*10 ms\n                  fixed = fixed + ctnt.charAt(stri - 1);\n                  si = 0;\n                } // $(\"#output\").html(fixed + block);\n\n\n                setDecryptedEffect(fixed + block);\n                block = '';\n              };\n\n              if (!decryptedEffectRunning) {\n                _context10.next = 3;\n                break;\n              }\n\n              return _context10.abrupt(\"return\");\n\n            case 3:\n              setDecryptedEffectRunning(true);\n              theLetters = 'abcdefghijklmnopqrstuvwxyz'; //You can customize what letters it will cycle through\n\n              ctnt = 'Decrypting'; // Your text goes here\n\n              speed = 5; // ms per frame\n\n              increment = 8; // frames per step. Must be >2\n\n              clen = ctnt.length;\n              si = 0;\n              stri = 0;\n              block = '';\n              fixed = '';\n\n              (function rustle(i) {\n                setTimeout(function () {\n                  if (--i) {\n                    rustle(i);\n                  } else {\n                    setDecryptedEffectRunning(false);\n                  }\n\n                  nextFrame(i);\n                  si = si + 1;\n                }, speed);\n              })(clen * increment + 1);\n\n            case 14:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function startDecryptEffect() {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    getVault();\n  }, []);\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    // console.log('Account chainid = ' + chainId + ' and vaultchainid = ' + vaultChainId)\n    account && chainId && vaultChainId && chainId == vaultChainId ? getContractStates() : null; // console.log('in the usefeect that clls getcontractstates')\n  });\n\n  function splitDescription(words) {\n    var desc = words.split('\\n\\n\\n\\n');\n    return desc[0].trim();\n  }\n\n  function tryDecrypt(key) {\n    if (decryptPassword) {\n      key = decryptPassword;\n    }\n\n    startDecryptEffect();\n    var ciphertext = vaultAddresses[0].address.replace('private:', '');\n\n    try {\n      var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(ciphertext, key);\n      JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n      setVaultPrivacy(false);\n      setDecryptPassword(key);\n      setVaultAddresses(decryptAddresses(key));\n      getEthBalances(vaultAddresses.filter(function (item) {\n        return item.coin === 'ETH';\n      })[0].address, function (values) {\n        getBtcBalance(values, vaultAddresses.filter(function (item) {\n          return item.coin === 'BTC';\n        })[0].address, function (_values) {\n          // console.log(\"Have fucking values\", values)\n          getNftBalance(_values, vaultAddresses.filter(function (item) {\n            return item.coin === 'ETH';\n          })[0].address, function (__values) {\n            setVaultValues(__values.concat(vaultValues));\n          });\n        });\n      });\n    } catch (err) {}\n  }\n\n  function decryptAddresses(key) {\n    vaultAddresses.forEach(function (item) {\n      var cipherText = item.address.replace('private:', '');\n      item.address = decrypt(cipherText, key);\n    });\n    return vaultAddresses;\n  }\n\n  function decrypt(cipherText, key) {\n    var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(cipherText, key);\n    var decryptedData = JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n    return decryptedData;\n  }\n\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(next_head__WEBPACK_IMPORTED_MODULE_5___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 8\n    }\n  }, __jsx(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:site\",\n    content: \"Emblem.Finance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:title\",\n    content: vaultName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:description\",\n    content: splitDescription(vaultDesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:image\",\n    content: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 9\n    }\n  })), __jsx(AddrModal, {\n    isOpen: isOpenAddrModal,\n    onClose: onCloseAddrModal,\n    addrCoin: currCoin,\n    addrAddr: currAddr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }\n  }), __jsx(KeysModal, {\n    isOpen: isOpenKeysModal,\n    onClose: onCloseKeysModal,\n    mnemonic: mnemonic,\n    privKeyBTC: privKeyBTC,\n    privKeyETH: privKeyETH,\n    privValues: privValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }\n  }), __jsx(react_loader__WEBPACK_IMPORTED_MODULE_9___default.a, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }\n  }, loadingApi ? __jsx(_Refreshing__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 23\n    }\n  }) : '', !invalidVault ? __jsx(react_tilt__WEBPACK_IMPORTED_MODULE_15___default.a, {\n    className: \"Tilt\",\n    options: {\n      max: experimental ? 0 : 0,\n      scale: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 11\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Flex\"], {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 13\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    borderColor: vaultChainId != chainId ? 'orange.500' : status == 'claimed' ? 'green.500' : null,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    minW: 390,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 15\n    }\n  }, vaultChainId != chainId ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    alignItems: \"center\",\n    color: \"orange.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 19\n    }\n  }, \"BEWARE: Vault is on a different network than you are.\") : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 17\n    }\n  }, vaultName, !vaultPrivacy ? ': ~$' + vaultTotalValue : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Stack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Image\"], {\n    src: Object(_utils__WEBPACK_IMPORTED_MODULE_11__[\"validImage\"])(vaultImage) ? vaultImage : 'https://circuitsofvalue.com/public/coval-logo.png',\n    width: \"250px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 19\n    }\n  })), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Stack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    mt: \"2\",\n    ml: \"4\",\n    lineHeight: \"tight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    mt: 2,\n    as: \"h4\",\n    ml: \"4\",\n    mr: \"4\",\n    fontSize: \"xs\",\n    fontStyle: \"italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 21\n    }\n  }, splitDescription(vaultDesc)))), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    p: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    color: \"gray.500\",\n    letterSpacing: \"wide\",\n    fontSize: \"sm\",\n    ml: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    as: \"h4\",\n    fontWeight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 23\n    }\n  }, \"Current Contents:\"), vaultPrivacy ? __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    pb: 2,\n    color: decryptedEffect ? 'green.500' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 27\n    }\n  }, decryptedEffect ? decryptedEffect : 'Contents hidden. Enter password to unlock.'), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Input\"], {\n    type: \"password\",\n    id: \"vault-password\",\n    onChange: function onChange(e) {\n      return tryDecrypt(e.target.value);\n    },\n    \"aria-describedby\": \"password-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 27\n    }\n  })) : vaultValues.length ? vaultValues.map(function (coin) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n      key: coin.name,\n      isTruncated: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 29\n      }\n    }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Image\"], {\n      width: 10,\n      src: coin.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 31\n      }\n    }), coin.name, \" :\", ' ', coin.balance ? coin.balance : coin.type == 'nft' ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Link\"], {\n      href: coin.external_url,\n      isExternal: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 33\n      }\n    }, \"View NFT\") : null);\n  }) : null, vaultDataValues.length ? vaultDataValues.map(function (data) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 29\n      }\n    }, \"Data: \", data.attribute_key);\n  }) : !vaultDataValues.length && !vaultValues.length ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 25\n    }\n  }, \"Nothing in here! Fill 'er up!\") : null)), !vaultPrivacy ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"ButtonGroup\"], {\n    justifyContent: \"space-between\",\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 23\n    }\n  }, vaultAddresses.map(function (addr) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n      key: addr.address,\n      onClick: function onClick() {\n        setCurrCoin(addr.coin);\n        setCurrAddr(addr.address);\n        onOpenAddrModal();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 29\n      }\n    }, \"Put \", addr.coin == 'ETH' ? addr.coin + '/ERC20' : addr.coin, \" In\");\n  }))) : null, !(status === 'claimed') && !mintPassword ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    width: \"100%\",\n    as: \"a\"\n  }, {\n    href: 'https://' + (vaultChainId == 4 ? 'rinkeby.' : '') + 'opensea.io/assets/' + _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[vaultChainId] + '/' + tokenId,\n    target: '_blank',\n    rel: 'noopener noreferrer'\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 23\n    }\n  }), mine ? 'Sell/Gift/Send (Opensea)' : 'Make an Offer (Opensea)')) : null, mine && !acceptable ? __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n    width: \"100%\",\n    onClick: function onClick() {\n      if (!approved) {\n        return handleApproveForall();\n      } else {\n        var key = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.lib.WordArray.random(128 / 8).toString();\n        var sha = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.SHA256(key).toString();\n        console.log('plain', key);\n        console.log('sha', sha);\n        setTransferPassword(key);\n        transferImage = sha;\n        setTimeout(function () {\n          addPreTransfer();\n        }, 500);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 23\n    }\n  }, \" \", approved ? \"Get Link (Send Vault Via Link)\" : \"Approve Gifting\", \" \"))) : null, showTransferPassword || mintPassword ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Link\"], {\n    href: location.protocol + '//' + location.host + '/nft?id=' + tokenId + '&key=' + transferPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 25\n    }\n  }, \"Copy Gift Link\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 25\n    }\n  }, \"Password: \", transferPassword)) : null, acceptable && claimedBy !== account ? __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n    mt: 2,\n    width: \"100%\",\n    onClick: function onClick() {\n      fireMetaMask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 23\n    }\n  }, \"Accept\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Input\"], {\n    mt: 2,\n    type: \"password\",\n    id: \"mintPassword\",\n    minLength: 3,\n    maxLength: 200,\n    value: mintPassword,\n    onChange: function onChange(e) {\n      return setMintPassword(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 23\n    }\n  })) : null, !(status === 'claimed') && account && vaultChainId === chainId && mine ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n    width: \"100%\",\n    onClick: function onClick() {\n      handleClaim();\n    },\n    isDisabled: claiming,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 23\n    }\n  }, claiming ? 'Claiming ...' : 'Claim (Crack Open Vault)')) : status === 'claimed' && claimedBy === account && vaultChainId === chainId ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n    width: \"100%\",\n    onClick: handleSign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 23\n    }\n  }, \"Get Keys\")) : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Stack\"], {\n    direction: \"column\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 17\n    }\n  }, status == 'claimed' ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    color: \"green.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 42\n    }\n  }, \"CLAIMED\") : null), hash ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Alert\"], {\n    status: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"AlertIcon\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 21\n    }\n  }), accepting ? \"Accepting your vault\" : claiming ? \"Claiming your vault ...\" : \"Something else ...\") : null))) : __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Stack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 11\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Image\"], {\n    width: \"md\",\n    src: \"https://starwarsblog.starwars.com/wp-content/uploads/2017/06/25-star-wars-quotes-obi-wan-kenobi-identification-tall.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 13\n    }\n  }), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 13\n    }\n  }, \"THESE ARE NOT THE VAULTS YOU ARE LOOKING FOR\", ' ', __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Link\"], {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 15\n    }\n  }, \"CREATE ONE HERE!\"))), hash ? __jsx(_TransactionToast__WEBPACK_IMPORTED_MODULE_12__[\"TransactionToast\"], {\n    hash: hash,\n    onComplete: function onComplete() {\n      // location.href = location.origin + '/vault?id=' + tokenId\n      if (claiming && !accepting && !preTransfering) {\n        console.log(111111);\n        setHash(null);\n        setStatus('claimed');\n        setClaiming(false);\n        setClaimedBy(account);\n        handleSign();\n      } else if (preTransfering) {\n        savePasswordToLocalStorage();\n        setShowTransferPassword(true);\n        setPreTransfering(false);\n        setHash(null);\n      } else if (accepting) {\n        console.log(3333333);\n        setAccepting(false);\n        setHash(null);\n        getVault();\n      } else if (approving) {\n        console.log(4444444);\n        setApproving(false);\n        setHash(null);\n        getVault();\n      } else {\n        console.log('claiming', claiming);\n        console.log('accepting', accepting);\n        console.log('preTransfering', preTransfering);\n        console.log('approving', approving);\n        console.log(\"Unknown state\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 11\n    }\n  }) : null));\n}\n\n_s(Nft, \"zeDsUF5wwEEaFv0k4ZFq+N4pZk0=\", false, function () {\n  return [_web3_react_core__WEBPACK_IMPORTED_MODULE_6__[\"useWeb3React\"], next_router__WEBPACK_IMPORTED_MODULE_7__[\"useRouter\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"useDisclosure\"]];\n});\n\n_c5 = Nft;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"AddrModal$dynamic\");\n$RefreshReg$(_c2, \"AddrModal\");\n$RefreshReg$(_c3, \"KeysModal$dynamic\");\n$RefreshReg$(_c4, \"KeysModal\");\n$RefreshReg$(_c5, \"Nft\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9OZnQudHN4Pzc4ZmIiXSwibmFtZXMiOlsiQWRkck1vZGFsIiwiZHluYW1pYyIsIktleXNNb2RhbCIsIk5mdCIsInVzZVdlYjNSZWFjdCIsImFjY291bnQiLCJjaGFpbklkIiwibGlicmFyeSIsInVzZVJvdXRlciIsInF1ZXJ5IiwidXNlU3RhdGUiLCJhcHByb3ZlZCIsInNldEFwcHJvdmVkIiwia2V5IiwibWludFBhc3N3b3JkIiwic2V0TWludFBhc3N3b3JkIiwiaWQiLCJ0b2tlbklkIiwic2V0VG9rZW5JZCIsImV4cGVyaW1lbnRhbCIsInNldEV4cGVyaW1lbnRhbCIsInZhdWx0TmFtZSIsInNldFZhdWx0TmFtZSIsInZhdWx0RGVzYyIsInNldFZhdWx0RGVzYyIsInZhdWx0SW1hZ2UiLCJzZXRWYXVsdEltYWdlIiwidmF1bHRWYWx1ZXMiLCJzZXRWYXVsdFZhbHVlcyIsInZhdWx0RGF0YVZhbHVlcyIsInNldFZhdWx0RGF0YVZhbHVlcyIsInZhdWx0QWRkcmVzc2VzIiwic2V0VmF1bHRBZGRyZXNzZXMiLCJ2YXVsdFByaXZhY3kiLCJzZXRWYXVsdFByaXZhY3kiLCJ2YXVsdFRvdGFsVmFsdWUiLCJzZXRWYXVsdFRvdGFsVmFsdWUiLCJ2YXVsdENoYWluSWQiLCJzZXRWYXVsdENoYWluSWQiLCJoYXNoIiwic2V0SGFzaCIsImN1cnJDb2luIiwic2V0Q3VyckNvaW4iLCJjdXJyQWRkciIsInNldEN1cnJBZGRyIiwibG9hZGVkIiwic3RhdGUiLCJzZXRTdGF0ZSIsIm1pbmUiLCJzZXRNaW5lIiwiY2xhaW1pbmciLCJzZXRDbGFpbWluZyIsInN0YXR1cyIsInNldFN0YXR1cyIsImNsYWltZWRCeSIsInNldENsYWltZWRCeSIsIm1uZW1vbmljIiwic2V0TW5lbW9uaWMiLCJwcml2S2V5QlRDIiwic2V0UHJpdktleUJUQyIsInByaXZLZXlFVEgiLCJzZXRQcml2S2V5RVRIIiwicHJpdlZhbHVlcyIsInNldEtleVZhbHVlcyIsImxvYWRpbmdBcGkiLCJzZXRMb2FkaW5nQXBpIiwiZGVjcnlwdGVkRWZmZWN0Iiwic2V0RGVjcnlwdGVkRWZmZWN0IiwiZGVjcnlwdGVkRWZmZWN0UnVubmluZyIsInNldERlY3J5cHRlZEVmZmVjdFJ1bm5pbmciLCJkZWNyeXB0UGFzc3dvcmQiLCJzZXREZWNyeXB0UGFzc3dvcmQiLCJpbnZhbGlkVmF1bHQiLCJzZXRJbnZhbGlkVmF1bHQiLCJoYXNDaGVja2VkTmZ0Iiwic2V0SGFzQ2hlY2tlZE5mdCIsImFjY2VwdGluZyIsInNldEFjY2VwdGluZyIsImFwcHJvdmluZyIsInNldEFwcHJvdmluZyIsImFjY2VwdGFibGUiLCJzZXRBY2NlcHRhYmxlIiwidHJhbnNmZXJQYXNzd29yZCIsInNldFRyYW5zZmVyUGFzc3dvcmQiLCJzaG93VHJhbnNmZXJQYXNzd29yZCIsInNldFNob3dUcmFuc2ZlclBhc3N3b3JkIiwicHJlVHJhbnNmZXJpbmciLCJzZXRQcmVUcmFuc2ZlcmluZyIsImhhbmRsZXJDb250cmFjdCIsInVzZUNvbnRyYWN0IiwiY29udHJhY3RBZGRyZXNzZXMiLCJ2YXVsdEhhbmRsZXIiLCJ2YXVsdEhhbmRsZXJBYmkiLCJlbWJsZW1Db250cmFjdCIsImVtYmxlbVZhdWx0IiwiZW1ibGVtQWJpIiwidXNlRGlzY2xvc3VyZSIsImlzT3BlbkFkZHJNb2RhbCIsImlzT3BlbiIsIm9uT3BlbkFkZHJNb2RhbCIsIm9uT3BlbiIsIm9uQ2xvc2VBZGRyTW9kYWwiLCJvbkNsb3NlIiwiaXNPcGVuS2V5c01vZGFsIiwib25PcGVuS2V5c01vZGFsIiwib25DbG9zZUtleXNNb2RhbCIsInRyYW5zZmVySW1hZ2UiLCJmaXJlTWV0YU1hc2siLCJnZXRXaXRuZXNzIiwid2l0bmVzcyIsInRyYW5zZmVyV2l0aENvZGUiLCJub25jZSIsInNpZ25hdHVyZSIsInRoZW4iLCJzZXRUaW1lb3V0IiwiZXJyb3IiLCJjb2RlIiwiY29uc29sZSIsImxvZyIsImFkZFByZVRyYW5zZmVyIiwiaGFuZGxlQXBwcm92ZUZvcmFsbCIsInNldEFwcHJvdmFsRm9yQWxsIiwiZ2V0VmF1bHQiLCJsb2FkQ2FjaGUiLCJmZXRjaCIsIkVNQkxFTV9BUEkiLCJtZXRob2QiLCJoZWFkZXJzIiwic2VydmljZSIsInJlc3BvbmNlIiwianNvbiIsImpzb25EYXRhIiwibmFtZSIsInNldFN0YXRlcyIsInNhdmVDYWNoZSIsImNiIiwiY2hhaW5pZCIsInRvU3RyaW5nIiwiaW1hZ2UiLCJkZXNjcmlwdGlvbiIsInRvdGFsVmFsdWUiLCJjb25jYXQiLCJ2YWx1ZXMiLCJhdHRyaWJ1dGVzIiwiZmlsdGVyIiwiaXRlbSIsInRyYWl0X3R5cGUiLCJhZGRyZXNzZXMiLCJuZXR3b3JrIiwiaXNQdnQiLCJhZGRyZXNzIiwiaW5jbHVkZXMiLCJsZW5ndGgiLCJnZXROZnRCYWxhbmNlIiwiY29pbiIsIl92YWx1ZXMiLCJnZXRFdGhCYWxhbmNlcyIsIk51bWJlciIsImdldEJ0Y0JhbGFuY2UiLCJ2YXVsdCIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJKU09OIiwic3RyaW5naWZ5IiwicGFyc2UiLCJnZXRJdGVtIiwic2F2ZVBhc3N3b3JkVG9Mb2NhbFN0b3JhZ2UiLCJsb2FkUGFzc3dvcmRGcm9tTG9jYWxTdG9yYWdlIiwiZ2V0S2V5cyIsIm15SGVhZGVycyIsIkhlYWRlcnMiLCJhcHBlbmQiLCJyYXciLCJib2R5IiwicmVkaXJlY3QiLCJnZXRDb250cmFjdFN0YXRlcyIsIm93bmVkIiwib3duZXJPZiIsIm93bmVyIiwiZ2V0UHJlVHJhbnNmZXIiLCJpc0FwcHJvdmVkRm9yQWxsIiwiaXNBcHByb3ZlZCIsIl9mcm9tIiwidXNlRWZmZWN0IiwiaGFuZGxlU2lnbiIsImdldFNpZ25lciIsInNpZ25NZXNzYWdlIiwicmVzdWx0IiwiZGVjcnlwdGVkIiwicGhyYXNlIiwia2V5cyIsInByaXZrZXkiLCJoYW5kbGVDbGFpbSIsInRyYW5zZmVyRnJvbSIsIkJVUk5fQUREUkVTUyIsInN0YXJ0RGVjcnlwdEVmZmVjdCIsIm5leHRGcmFtZSIsInBvcyIsImkiLCJjbGVuIiwic3RyaSIsIm51bSIsIk1hdGgiLCJmbG9vciIsInRoZUxldHRlcnMiLCJyYW5kb20iLCJsZXR0ZXIiLCJjaGFyQXQiLCJibG9jayIsInNpIiwiaW5jcmVtZW50IiwiZml4ZWQiLCJjdG50Iiwic3BlZWQiLCJydXN0bGUiLCJzcGxpdERlc2NyaXB0aW9uIiwid29yZHMiLCJkZXNjIiwic3BsaXQiLCJ0cmltIiwidHJ5RGVjcnlwdCIsImNpcGhlcnRleHQiLCJyZXBsYWNlIiwiYnl0ZXMiLCJDcnlwdG9KUyIsIkFFUyIsImRlY3J5cHQiLCJlbmMiLCJVdGY4IiwiZGVjcnlwdEFkZHJlc3NlcyIsIl9fdmFsdWVzIiwiZXJyIiwiZm9yRWFjaCIsImNpcGhlclRleHQiLCJkZWNyeXB0ZWREYXRhIiwibWF4Iiwic2NhbGUiLCJ2YWxpZEltYWdlIiwiZSIsInRhcmdldCIsInZhbHVlIiwibWFwIiwiYmFsYW5jZSIsInR5cGUiLCJleHRlcm5hbF91cmwiLCJkYXRhIiwiYXR0cmlidXRlX2tleSIsImFkZHIiLCJocmVmIiwicmVsIiwibGliIiwiV29yZEFycmF5Iiwic2hhIiwiU0hBMjU2IiwibG9jYXRpb24iLCJwcm90b2NvbCIsImhvc3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBZUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxJQUFNQSxTQUFTLEdBQUdDLG9EQUFPLE1BQUM7QUFBQSxTQUFNLDhIQUFOO0FBQUEsQ0FBRDtBQUFBO0FBQUE7QUFBQSxrQ0FBYywrQ0FBZDtBQUFBO0FBQUEsY0FBYyxhQUFkO0FBQUE7QUFBQSxFQUF6QjtNQUFNRCxTO0FBQ04sSUFBTUUsU0FBUyxHQUFHRCxvREFBTyxPQUFDO0FBQUEsU0FBTSw4SEFBTjtBQUFBLENBQUQ7QUFBQTtBQUFBO0FBQUEsa0NBQWMsK0NBQWQ7QUFBQTtBQUFBLGNBQWMsYUFBZDtBQUFBO0FBQUEs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SUFBRCxDQUFQO0FBQ0FrRixnQkFBUTtBQUNULE9BTE0sTUFLQTtBQUNMTCxlQUFPLENBQUNDLEdBQVIsQ0FBWSxVQUFaLEVBQXdCcEUsUUFBeEI7QUFDQW1FLGVBQU8sQ0FBQ0MsR0FBUixDQUFZLFdBQVosRUFBeUIxQyxTQUF6QjtBQUNBeUMsZUFBTyxDQUFDQyxHQUFSLENBQVksZ0JBQVosRUFBOEJoQyxjQUE5QjtBQUNBK0IsZUFBTyxDQUFDQyxHQUFSLENBQVksV0FBWixFQUF5QnhDLFNBQXpCO0FBQ0F1QyxlQUFPLENBQUNDLEdBQVIsQ0FBWSxlQUFaO0FBQ0Q7QUFDRixLQWpDSDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLElBREcsR0FvQ0QsSUEzUU4sQ0FuQkYsQ0FERjtBQW1TRDs7R0FudkJ1Qm5ILEc7VUFDZ0JDLDZELEVBQ3BCSSxxRCxFQXdDTWlGLG1ELEVBQ0RBLG1ELEVBRWlFTyw2RCxFQUNBQSw2RDs7O01BOUNsRTdGLEciLCJmaWxlIjoiLi9jb21wb25lbnRzL05mdC50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBCb3gsXG4gIEZsZXgsXG4gIEltYWdlLFxuICBUZXh0LFxuICBTdGFjayxcbiAgQnV0dG9uLFxuICBCdXR0b25Hcm91cCxcbiAgSW5wdXQsXG4gIExpbmssXG4gIEFsZXJ0LFxuICBBbGVydEljb24sXG4gIHVzZURpc2Nsb3N1cmUsXG59IGZyb20gJ0BjaGFrcmEtdWkvY29yZSdcblxuaW1wb3J0IEhlYWQgZnJvbSBcIm5leHQvaGVhZFwiXG5pbXBvcnQgeyB1c2VXZWIzUmVhY3QgfSBmcm9tICdAd2ViMy1yZWFjdC9jb3JlJ1xuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInXG5pbXBvcnQgUmVmcmVzaGluZyBmcm9tICcuL1JlZnJlc2hpbmcnXG5pbXBvcnQgTG9hZGVyIGZyb20gJ3JlYWN0LWxvYWRlcidcbmltcG9ydCBkeW5hbWljIGZyb20gJ25leHQvZHluYW1pYydcbmltcG9ydCB7IHZhbGlkSW1hZ2UgfSBmcm9tICcuLi91dGlscydcbmltcG9ydCB7IENvbnRyYWN0IH0gZnJvbSAnQGV0aGVyc3Byb2plY3QvY29udHJhY3RzJ1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25Ub2FzdCB9IGZyb20gJy4vVHJhbnNhY3Rpb25Ub2FzdCdcbmltcG9ydCB7IEVNQkxFTV9BUEksIEJVUk5fQUREUkVTUywgY29udHJhY3RBZGRyZXNzZXMgfSBmcm9tICcuLi9jb25zdGFudHMnXG5pbXBvcnQgeyB1c2VDb250cmFjdCB9IGZyb20gJy4uL2hvb2tzJ1xuaW1wb3J0IFRpbHQgZnJvbSAncmVhY3QtdGlsdCdcbmltcG9ydCBDcnlwdG9KUyBmcm9tICdjcnlwdG8tanMnXG5cbmNvbnN0IEFkZHJNb2RhbCA9IGR5bmFtaWMoKCkgPT4gaW1wb3J0KCcuL0FkZHJNb2RhbCcpKVxuY29uc3QgS2V5c01vZGFsID0gZHluYW1pYygoKSA9PiBpbXBvcnQoJy4vS2V5c01vZGFsJykpXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5mdCgpIHtcbiAgY29uc3QgeyBhY2NvdW50LCBjaGFpbklkLCBsaWJyYXJ5IH0gPSB1c2VXZWIzUmVhY3QoKVxuICBjb25zdCB7IHF1ZXJ5IH0gPSB1c2VSb3V0ZXIoKVxuICBjb25zdCBbYXBwcm92ZWQsIHNldEFwcHJvdmVkXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbbWludFBhc3N3b3JkLCBzZXRNaW50UGFzc3dvcmRdID0gdXNlU3RhdGUocXVlcnkua2V5IHx8ICcnKVxuICBjb25zdCBbdG9rZW5JZCwgc2V0VG9rZW5JZF0gPSB1c2VTdGF0ZShxdWVyeS5pZClcbiAgY29uc3QgW2V4cGVyaW1lbnRhbCwgc2V0RXhwZXJpbWVudGFsXSA9IHVzZVN0YXRlKHF1ZXJ5LmV4cGVyaW1lbnRhbClcbiAgY29uc3QgW3ZhdWx0TmFtZSwgc2V0VmF1bHROYW1lXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbdmF1bHREZXNjLCBzZXRWYXVsdERlc2NdID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IFt2YXVsdEltYWdlLCBzZXRWYXVsdEltYWdlXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbdmF1bHRWYWx1ZXMsIHNldFZhdWx0VmFsdWVzXSA9IHVzZVN0YXRlKFtdKVxuICBjb25zdCBbdmF1bHREYXRhVmFsdWVzLCBzZXRWYXVsdERhdGFWYWx1ZXNdID0gdXNlU3RhdGUoW10pXG4gIGNvbnN0IFt2YXVsdEFkZHJlc3Nlcywgc2V0VmF1bHRBZGRyZXNzZXNdID0gdXNlU3RhdGUoW10pXG4gIGNvbnN0IFt2YXVsdFByaXZhY3ksIHNldFZhdWx0UHJpdmFjeV0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW3ZhdWx0VG90YWxWYWx1ZSwgc2V0VmF1bHRUb3RhbFZhbHVlXSA9IHVzZVN0YXRlKDApXG4gIGNvbnN0IFt2YXVsdENoYWluSWQsIHNldFZhdWx0Q2hhaW5JZF0gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbaGFzaCwgc2V0SGFzaF0gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbY3VyckNvaW4sIHNldEN1cnJDb2luXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbY3VyckFkZHIsIHNldEN1cnJBZGRyXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9IHVzZVN0YXRlKHsgbG9hZGVkOiBmYWxzZSB9KVxuICBjb25zdCBbbWluZSwgc2V0TWluZV0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2NsYWltaW5nLCBzZXRDbGFpbWluZ10gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW3N0YXR1cywgc2V0U3RhdHVzXSA9IHVzZVN0YXRlKCdjbGFpbWVkJylcbiAgY29uc3QgW2NsYWltZWRCeSwgc2V0Q2xhaW1lZEJ5XSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFttbmVtb25pYywgc2V0TW5lbW9uaWNdID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IFtwcml2S2V5QlRDLCBzZXRQcml2S2V5QlRDXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbcHJpdktleUVUSCwgc2V0UHJpdktleUVUSF0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW3ByaXZWYWx1ZXMsIHNldEtleVZhbHVlc10gPSB1c2VTdGF0ZShbXSlcbiAgY29uc3QgW2xvYWRpbmdBcGksIHNldExvYWRpbmdBcGldID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtkZWNyeXB0ZWRFZmZlY3QsIHNldERlY3J5cHRlZEVmZmVjdF0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW2RlY3J5cHRlZEVmZmVjdFJ1bm5pbmcsIHNldERlY3J5cHRlZEVmZmVjdFJ1bm5pbmddID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtkZWNyeXB0UGFzc3dvcmQsIHNldERlY3J5cHRQYXNzd29yZF0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW2ludmFsaWRWYXVsdCwgc2V0SW52YWxpZFZhdWx0XSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbaGFzQ2hlY2tlZE5mdCwgc2V0SGFzQ2hlY2tlZE5mdF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2FjY2VwdGluZywgc2V0QWNjZXB0aW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbYXBwcm92aW5nLCBzZXRBcHByb3ZpbmddID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFthY2NlcHRhYmxlLCBzZXRBY2NlcHRhYmxlXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbdHJhbnNmZXJQYXNzd29yZCwgc2V0VHJhbnNmZXJQYXNzd29yZF0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW3Nob3dUcmFuc2ZlclBhc3N3b3JkLCBzZXRTaG93VHJhbnNmZXJQYXNzd29yZF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW3ByZVRyYW5zZmVyaW5nLCBzZXRQcmVUcmFuc2ZlcmluZ10gPSB1c2VTdGF0ZShmYWxzZSlcbiAgLy8gY29uc3QgW3RyYW5zZmVySW1hZ2UsIHNldFRyYW5zZmVySW1hZ2VdID0gdXNlU3RhdGUoJycpXG5cbiAgY29uc3QgaGFuZGxlckNvbnRyYWN0ID0gdXNlQ29udHJhY3QoY29udHJhY3RBZGRyZXNzZXMudmF1bHRIYW5kbGVyW2NoYWluSWRdLCBjb250cmFjdEFkZHJlc3Nlcy52YXVsdEhhbmRsZXJBYmksIHRydWUpXG4gIGNvbnN0IGVtYmxlbUNvbnRyYWN0ID0gdXNlQ29udHJhY3QoY29udHJhY3RBZGRyZXNzZXMuZW1ibGVtVmF1bHRbY2hhaW5JZF0sIGNvbnRyYWN0QWRkcmVzc2VzLmVtYmxlbUFiaSwgdHJ1ZSlcblxuICBjb25zdCB7IGlzT3BlbjogaXNPcGVuQWRkck1vZGFsLCBvbk9wZW46IG9uT3BlbkFkZHJNb2RhbCwgb25DbG9zZTogb25DbG9zZUFkZHJNb2RhbCB9ID0gdXNlRGlzY2xvc3VyZSgpXG4gIGNvbnN0IHsgaXNPcGVuOiBpc09wZW5LZXlzTW9kYWwsIG9uT3Blbjogb25PcGVuS2V5c01vZGFsLCBvbkNsb3NlOiBvbkNsb3NlS2V5c01vZGFsIH0gPSB1c2VEaXNjbG9zdXJlKClcblxuICBpbnRlcmZhY2UgRXJyb3JXaXRoQ29kZSBleHRlbmRzIEVycm9yIHtcbiAgICBjb2RlPzogbnVtYmVyXG4gIH1cblxuICBsZXQgdHJhbnNmZXJJbWFnZTtcblxuICBjb25zdCBmaXJlTWV0YU1hc2sgPSAoKSA9PiB7XG4gICAgZ2V0V2l0bmVzcyh3aXRuZXNzPT57XG4gICAgICAvLyBjb25zb2xlLmxvZyh0b2tlbklkLCBtaW50UGFzc3dvcmQsIHdpdG5lc3Mubm9uY2UsIHdpdG5lc3Muc2lnbmF0dXJlLCBhY2NvdW50KVxuICAgICAgOyhoYW5kbGVyQ29udHJhY3QgYXMgQ29udHJhY3QpXG4gICAgICAudHJhbnNmZXJXaXRoQ29kZSh0b2tlbklkLCBtaW50UGFzc3dvcmQsIGFjY291bnQsIHdpdG5lc3Mubm9uY2UsIHdpdG5lc3Muc2lnbmF0dXJlKVxuICAgICAgLnRoZW4oKHsgaGFzaCB9OiB7IGhhc2g6IHN0cmluZyB9KSA9PiB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHNldEhhc2goaGFzaClcbiAgICAgICAgICBzZXRBY2NlcHRpbmcodHJ1ZSlcbiAgICAgICAgICAvLyBzZXRTaG93TWFraW5nVmF1bHRNc2codHJ1ZSlcbiAgICAgICAgfSwgMTAwKSAvLyBTb2x2aW5nIFN0YXRlIHJhY2UgY29uZGl0aW9uIHdoZXJlIHRyYW5zYWN0aW9uIHdhdGNoZXIgd291bGRuJ3Qgbm90aWNlIHdlIHdlcmUgY3JlYXRpbmdcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycm9yOiBFcnJvcldpdGhDb2RlKSA9PiB7XG4gICAgICAgIGlmIChlcnJvcj8uY29kZSAhPT0gNDAwMSkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGB0eCBmYWlsZWQuYCwgZXJyb3IpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2V0QWNjZXB0aW5nKGZhbHNlKVxuICAgICAgICAgIC8vIHNldFNob3dQcmVWYXVsdE1zZyhmYWxzZSlcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9KVxuICAgIFxuICB9XG5cbiAgY29uc3QgYWRkUHJlVHJhbnNmZXIgPSAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ3RyYW5zZmVySW1hZ2UnLCBcIjB4XCIrdHJhbnNmZXJJbWFnZSlcbiAgICBzZXRQcmVUcmFuc2ZlcmluZyh0cnVlKVxuICAgIDsoaGFuZGxlckNvbnRyYWN0IGFzIENvbnRyYWN0KVxuICAgICAgLmFkZFByZVRyYW5zZmVyKHRva2VuSWQsIFwiMHhcIit0cmFuc2ZlckltYWdlKVxuICAgICAgLnRoZW4oKHsgaGFzaCB9OiB7IGhhc2g6IHN0cmluZyB9KSA9PiB7XG4gICAgICAgIC8vIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHNldEhhc2goaGFzaClcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIlNldCBQcmUgVHJhbnNmZXJpbmcgVHJ1ZVwiLCBwcmVUcmFuc2ZlcmluZylcbiAgICAgICAgICAvLyBzZXRTaG93TWFraW5nVmF1bHRNc2codHJ1ZSlcbiAgICAgICAgLy8gfSwgMTAwKSAvLyBTb2x2aW5nIFN0YXRlIHJhY2UgY29uZGl0aW9uIHdoZXJlIHRyYW5zYWN0aW9uIHdhdGNoZXIgd291bGRuJ3Qgbm90aWNlIHdlIHdlcmUgY3JlYXRpbmdcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycm9yOiBFcnJvcldpdGhDb2RlKSA9PiB7XG4gICAgICAgIGlmIChlcnJvcj8uY29kZSl7ICAgXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkVycm9yP1wiKSAgICAgICBcbiAgICAgICAgICAgIHNldFByZVRyYW5zZmVyaW5nKGZhbHNlKVxuICAgICAgICAgICAgc2V0U2hvd1RyYW5zZmVyUGFzc3dvcmQoZmFsc2UpXG4gICAgICAgICAgICBzZXRUcmFuc2ZlclBhc3N3b3JkKCcnKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIHNldFNob3dUcmFuc2ZlclBhc3N3b3JkKCFzaG93VHJhbnNmZXJQYXNzd29yZD8gdHJ1ZSA6IGZhbHNlKVxuICAgICAgICAgIC8vIHNldFByZVRyYW5zZmVyaW5nKGZhbHNlKVxuICAgICAgICAgIC8vIHNldFNob3dQcmVWYXVsdE1zZyhmYWxzZSlcbiAgICAgICAgfVxuICAgICAgfSlcbiAgfVxuXG4gIGNvbnN0IGhhbmRsZUFwcHJvdmVGb3JhbGwgPSAoKSA9PiB7XG4gICAgOyhlbWJsZW1Db250cmFjdCBhcyBDb250cmFjdClcbiAgICAgIC5zZXRBcHByb3ZhbEZvckFsbChjb250cmFjdEFkZHJlc3Nlcy52YXVsdEhhbmRsZXJbY2hhaW5JZF0sIHRydWUpXG4gICAgICAudGhlbigoeyBoYXNoIH06IHsgaGFzaDogc3RyaW5nIH0pID0+IHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgc2V0SGFzaChoYXNoKVxuICAgICAgICAgIHNldEFwcHJvdmluZyh0cnVlKVxuICAgICAgICAgIC8vIHNldFNob3dNYWtpbmdWYXVsdE1zZyh0cnVlKVxuICAgICAgICB9LCAxMDApIC8vIFNvbHZpbmcgU3RhdGUgcmFjZSBjb25kaXRpb24gd2hlcmUgdHJhbnNhY3Rpb24gd2F0Y2hlciB3b3VsZG4ndCBub3RpY2Ugd2Ugd2VyZSBjcmVhdGluZ1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyb3I6IEVycm9yV2l0aENvZGUpID0+IHtcbiAgICAgICAgaWYgKGVycm9yPy5jb2RlICE9PSA0MDAxKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coYHR4IGZhaWxlZC5gLCBlcnJvcilcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzZXRBcHByb3ZpbmcoZmFsc2UpXG4gICAgICAgICAgLy8gc2V0U2hvd1ByZVZhdWx0TXNnKGZhbHNlKVxuICAgICAgICB9XG4gICAgICB9KVxuICB9XG5cbiAgLy8gXG5cbiAgY29uc3QgZ2V0VmF1bHQgPSBhc3luYyAoKSA9PiB7XG4gICAgbG9hZENhY2hlKClcbiAgICBjb25zdCByZXNwb25jZSA9IGF3YWl0IGZldGNoKEVNQkxFTV9BUEkgKyAnL21ldGEvJyArIHRva2VuSWQgKyAnP2V4cGVyaW1lbnRhbD10cnVlJywge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnLFxuICAgICAgfSxcbiAgICB9KVxuICAgIGNvbnN0IGpzb25EYXRhID0gYXdhaXQgcmVzcG9uY2UuanNvbigpXG4gICAgLy8gY29uc29sZS5sb2coJ3ZhdWx0IHJlc3BvbnNlIHdhcyAnLCBqc29uRGF0YSlcbiAgICBpZiAoIWpzb25EYXRhLm5hbWUpIHtcbiAgICAgIHNldFN0YXRlKHsgbG9hZGVkOiB0cnVlIH0pXG4gICAgICBzZXRJbnZhbGlkVmF1bHQodHJ1ZSlcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0U3RhdGVzKGpzb25EYXRhKVxuICAgICAgc2F2ZUNhY2hlKGpzb25EYXRhKVxuICAgICAgc2V0TG9hZGluZ0FwaShmYWxzZSlcbiAgICAgIHNldEludmFsaWRWYXVsdChmYWxzZSlcbiAgICB9XG4gIH1cblxuICBjb25zdCBnZXRXaXRuZXNzID0gYXN5bmMgKGNiKSA9PiB7XG4gICAgXG4gICAgY29uc3QgcmVzcG9uY2UgPSBhd2FpdCBmZXRjaChFTUJMRU1fQVBJICsgJy93aXRuZXNzLycgKyB0b2tlbklkLCB7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICBzZXJ2aWNlOiAnZXZtZXRhZGF0YScsXG4gICAgICAgIGNoYWluaWQ6IGNoYWluSWQudG9TdHJpbmcoKVxuICAgICAgfSxcbiAgICB9KVxuICAgIGNvbnN0IGpzb25EYXRhID0gYXdhaXQgcmVzcG9uY2UuanNvbigpXG4gICAgLy8gY29uc29sZS5sb2coJ3ZhdWx0IHJlc3BvbnNlIHdhcyAnLCBqc29uRGF0YSlcbiAgICBpZiAoanNvbkRhdGEuc2lnbmF0dXJlKSB7XG4gICAgICBjb25zb2xlLmxvZygnd2l0bmVzcycsIGpzb25EYXRhKVxuICAgICAgcmV0dXJuIGNiKGpzb25EYXRhKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gY2IoZmFsc2UpXG4gICAgfVxuICB9XG5cbiAgY29uc3Qgc2V0U3RhdGVzID0gKGpzb25EYXRhKSA9PiB7XG4gICAgc2V0VmF1bHROYW1lKGpzb25EYXRhLm5hbWUpXG4gICAgc2V0VmF1bHRJbWFnZShqc29uRGF0YS5pbWFnZSlcbiAgICBzZXRWYXVsdERlc2MoanNvbkRhdGEuZGVzY3JpcHRpb24pXG4gICAgc2V0VmF1bHRUb3RhbFZhbHVlKGpzb25EYXRhLnRvdGFsVmFsdWUgfHwgMClcbiAgICBzZXRWYXVsdFZhbHVlcyh2YXVsdFZhbHVlcy5jb25jYXQoanNvbkRhdGEudmFsdWVzKSlcbiAgICBzZXRWYXVsdERhdGFWYWx1ZXMoanNvbkRhdGEuYXR0cmlidXRlcy5maWx0ZXIoaXRlbT0+e3JldHVybiBpdGVtLnRyYWl0X3R5cGUgPT09IFwia2V5XCJ9KSlcbiAgICBzZXRWYXVsdERlc2MoanNvbkRhdGEuZGVzY3JpcHRpb24pXG4gICAgc2V0VmF1bHRBZGRyZXNzZXMoanNvbkRhdGEuYWRkcmVzc2VzKVxuICAgIHNldFZhdWx0Q2hhaW5JZChqc29uRGF0YS5uZXR3b3JrID09ICdtYWlubmV0JyA/IDEgOiBqc29uRGF0YS5uZXR3b3JrID09IFwicmlua2VieVwiID8gNCA6IGpzb25EYXRhLm5ldHdvcmsgPT0gXCJtdW1iYWlcIiA/IDgwMDAxIDoganNvbkRhdGEubmV0d29yayA9PSBcIm1hdGljXCIgPyAxMzc6IDk3KVxuICAgIHNldFN0YXR1cyhqc29uRGF0YS5zdGF0dXMpXG4gICAgaWYgKHN0YXR1cyA9PT0gJ2NsYWltZWQnKSB7XG4gICAgICBzZXRDbGFpbWVkQnkoanNvbkRhdGEuY2xhaW1lZEJ5KVxuICAgIH1cbiAgICAvLyBjb25zb2xlLmxvZygnaW5zaWRlIGdldHN0YXRlcy4gbWluZSBpcyAnLCBtaW5lKVxuICAgIHNldFN0YXRlKHsgbG9hZGVkOiB0cnVlIH0pXG4gICAgbGV0IGlzUHZ0ID1cbiAgICAgIGpzb25EYXRhLmFkZHJlc3Nlcy5maWx0ZXIoKGl0ZW0pID0+IHtcbiAgICAgICAgcmV0dXJuIGl0ZW0uYWRkcmVzcy5pbmNsdWRlcygncHJpdmF0ZTonKVxuICAgICAgfSkubGVuZ3RoID4gMFxuICAgIHNldFZhdWx0UHJpdmFjeShpc1B2dClcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICFpc1B2dCA/XG4gICAgICBnZXROZnRCYWxhbmNlKFxuICAgICAgICBqc29uRGF0YS52YWx1ZXMsXG4gICAgICAgIGpzb25EYXRhLmFkZHJlc3Nlcy5maWx0ZXIoKGl0ZW0pID0+IHtcbiAgICAgICAgICByZXR1cm4gaXRlbS5jb2luID09PSAnRVRIJ1xuICAgICAgICB9KVswXS5hZGRyZXNzLFxuICAgICAgICAoX3ZhbHVlcykgPT4ge1xuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiSGF2ZSBuZXcgdmFsdWVzXCIsIF92YWx1ZXMpXG4gICAgICAgICAgc2V0VmF1bHRWYWx1ZXMoX3ZhbHVlcylcbiAgICAgICAgfVxuICAgICAgKSA6IG51bGxcbiAgICB9LCA1KVxuICB9XG5cbiAgXG5cbiAgY29uc3QgZ2V0RXRoQmFsYW5jZXMgPSBhc3luYyAoYWRkcmVzcywgY2IpID0+IHtcbiAgICBjb25zdCByZXNwb25jZSA9IGF3YWl0IGZldGNoKEVNQkxFTV9BUEkgKyAnL2V0aC9iYWxhbmNlLycgKyBhZGRyZXNzLCB7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICBzZXJ2aWNlOiAnZXZtZXRhZGF0YScsXG4gICAgICB9LFxuICAgIH0pXG4gICAgY29uc3QganNvbkRhdGEgPSBhd2FpdCByZXNwb25jZS5qc29uKClcbiAgICAvLyBjb25zb2xlLmxvZyhOdW1iZXIodmF1bHRUb3RhbFZhbHVlKSwgTnVtYmVyKGpzb25EYXRhLnRvdGFsVmFsdWUpKVxuICAgIHNldFZhdWx0VG90YWxWYWx1ZShOdW1iZXIodmF1bHRUb3RhbFZhbHVlKSArIE51bWJlcihqc29uRGF0YS50b3RhbFZhbHVlKSlcbiAgICAvLyBjb25zb2xlLmxvZygnZ2V0IGV0aCBiYWxhbmNlcycsIGpzb25EYXRhLnZhbHVlcylcbiAgICByZXR1cm4gY2IoanNvbkRhdGEudmFsdWVzKVxuICB9XG5cbiAgY29uc3QgZ2V0QnRjQmFsYW5jZSA9IGFzeW5jICh2YWx1ZXMsIGFkZHJlc3MsIGNiKSA9PiB7XG4gICAgY29uc3QgcmVzcG9uY2UgPSBhd2FpdCBmZXRjaChFTUJMRU1fQVBJICsgJy9idGMvYmFsYW5jZS8nICsgYWRkcmVzcywge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnLFxuICAgICAgfSxcbiAgICB9KVxuICAgIGNvbnN0IGpzb25EYXRhID0gYXdhaXQgcmVzcG9uY2UuanNvbigpXG4gICAgLy8gc2V0VmF1bHRWYWx1ZXModmFsdWVzLmNvbmNhdChqc29uRGF0YS52YWx1ZXMpKVxuICAgIHJldHVybiBjYih2YWx1ZXMuY29uY2F0KGpzb25EYXRhLnZhbHVlcykpXG4gIH1cblxuICBjb25zdCBnZXROZnRCYWxhbmNlID0gYXN5bmMgKHZhbHVlcywgYWRkcmVzcywgY2IpID0+IHtcbiAgICAvLyBjb25zb2xlLmxvZyhhZGRyZXNzKVxuICAgIGNvbnN0IHJlc3BvbmNlID0gYXdhaXQgZmV0Y2goRU1CTEVNX0FQSSArICcvZXRoL25mdC8nICsgYWRkcmVzcywge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnLFxuICAgICAgfSxcbiAgICB9KVxuICAgIGNvbnN0IGpzb25EYXRhID0gYXdhaXQgcmVzcG9uY2UuanNvbigpXG4gICAgaWYgKGpzb25EYXRhLmxlbmd0aCA+IDApIHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKFwiRnVja2xpbmcgTkZUXCIsIGpzb25EYXRhLCB2YWx1ZXMuY29uY2F0KGpzb25EYXRhKSlcbiAgICAgIHJldHVybiBjYih2YWx1ZXMuY29uY2F0KGpzb25EYXRhKSlcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGNiKHZhbHVlcylcbiAgICB9XG4gIH1cblxuICBjb25zdCBzYXZlQ2FjaGUgPSAodmF1bHQpID0+IHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShhY2NvdW50ICsgJ18nICsgY2hhaW5JZCArICdfJyArIHRva2VuSWQgKyAnX3ZhdWx0JywgSlNPTi5zdHJpbmdpZnkodmF1bHQpKSAvLyBTYXZlIG5ldyBzdGF0ZSBmb3IgbGF0ZXJcbiAgfVxuXG4gIGNvbnN0IGxvYWRDYWNoZSA9ICgpID0+IHtcbiAgICBsZXQgdmF1bHQgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGFjY291bnQgKyAnXycgKyBjaGFpbklkICsgJ18nICsgdG9rZW5JZCArICdfdmF1bHQnKSkgLy8gTG9hZCB2YXVsdHMgZnJvbSBzdG9yYWdlIGJlZm9yZSB1cGRhdGluZyBmcm9tIHNlcnZlciFcbiAgICBpZiAodmF1bHQpIHtcbiAgICAgIHNldFN0YXRlKHsgbG9hZGVkOiB0cnVlIH0pXG4gICAgICBzZXRTdGF0ZXModmF1bHQpXG4gICAgICBzZXRMb2FkaW5nQXBpKHRydWUpXG4gICAgfVxuICB9XG5cbiAgY29uc3Qgc2F2ZVBhc3N3b3JkVG9Mb2NhbFN0b3JhZ2UgPSAoKSA9PiB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oYWNjb3VudCArICdfJyArIGNoYWluSWQgKyAnXycgKyB0b2tlbklkICsgJ19taW50UGFzc3dvcmQnLCB0cmFuc2ZlclBhc3N3b3JkKSAvLyBTYXZlIG5ldyBzdGF0ZSBmb3IgbGF0ZXJcbiAgfVxuXG4gIGNvbnN0IGxvYWRQYXNzd29yZEZyb21Mb2NhbFN0b3JhZ2UgPSAoKSA9PiB7XG4gICAgc2V0TWludFBhc3N3b3JkKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGFjY291bnQgKyAnXycgKyBjaGFpbklkICsgJ18nICsgdG9rZW5JZCArICdfbWludFBhc3N3b3JkJykpIC8vIFNhdmUgbmV3IHN0YXRlIGZvciBsYXRlclxuICB9XG5cbiAgY29uc3QgZ2V0S2V5cyA9IGFzeW5jIChzaWduYXR1cmUsIHRva2VuSWQsIGNiKSA9PiB7XG4gICAgdmFyIG15SGVhZGVycyA9IG5ldyBIZWFkZXJzKClcbiAgICBteUhlYWRlcnMuYXBwZW5kKCdjaGFpbklkJywgY2hhaW5JZC50b1N0cmluZygpKVxuICAgIG15SGVhZGVycy5hcHBlbmQoJ3NlcnZpY2UnLCAnZXZtZXRhZGF0YScpXG4gICAgbXlIZWFkZXJzLmFwcGVuZCgnQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb24nKVxuXG4gICAgdmFyIHJhdyA9IEpTT04uc3RyaW5naWZ5KHsgc2lnbmF0dXJlOiBzaWduYXR1cmUgfSlcbiAgICBjb25zdCByZXNwb25jZSA9IGF3YWl0IGZldGNoKEVNQkxFTV9BUEkgKyAnL3ZlcmlmeS8nICsgdG9rZW5JZCwge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiBteUhlYWRlcnMsXG4gICAgICBib2R5OiByYXcsXG4gICAgICByZWRpcmVjdDogJ2ZvbGxvdycsXG4gICAgfSlcbiAgICBjb25zdCBqc29uRGF0YSA9IGF3YWl0IHJlc3BvbmNlLmpzb24oKVxuICAgIC8vIGNvbnNvbGUubG9nKCdnZXRLZXlzIHJlc3BvbnNlIGlzICcsIGpzb25EYXRhKVxuICAgIHJldHVybiBjYihqc29uRGF0YSlcbiAgfVxuXG4gIGNvbnN0IGdldENvbnRyYWN0U3RhdGVzID0gYXN5bmMgKCkgPT4ge1xuICAgIGxldCBvd25lZCA9IGZhbHNlXG4gICAgdHJ5IHtcbiAgICAgIGxldCBvd25lciAgPSBhd2FpdCBlbWJsZW1Db250cmFjdC5vd25lck9mKHRva2VuSWQpXG4gICAgICBsZXQgYWNjZXB0YWJsZSA9IGF3YWl0IGhhbmRsZXJDb250cmFjdC5nZXRQcmVUcmFuc2Zlcih0b2tlbklkKVxuICAgICAgbGV0IGlzQXBwcm92ZWQgPSBhd2FpdCBlbWJsZW1Db250cmFjdC5pc0FwcHJvdmVkRm9yQWxsKGFjY291bnQsIGNvbnRyYWN0QWRkcmVzc2VzLnZhdWx0SGFuZGxlcltjaGFpbklkXSlcbiAgICAgIHNldEFwcHJvdmVkKGlzQXBwcm92ZWQpXG4gICAgICBzZXRBY2NlcHRhYmxlKGFjY2VwdGFibGUuX2Zyb20gIT09IFwiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCIpXG4gICAgICBzZXRNaW5lKG93bmVyID09PSBhY2NvdW50KVxuICAgICAgbG9hZFBhc3N3b3JkRnJvbUxvY2FsU3RvcmFnZSgpXG4gICAgfSBjYXRjaChlcnIpe31cbiAgICBcbiAgfVxuXG4gIHVzZUVmZmVjdCgoKT0+e1xuICAgIC8vIGNvbnNvbGUubG9nKFwibWluZT9cIiwgbWluZSlcbiAgICAvLyBjb25zb2xlLmxvZyhcImNsYWltaW5nP1wiLCBjbGFpbWluZylcbiAgICAvLyBjb25zb2xlLmxvZyhcImFjY2VwdGluZz9cIiwgYWNjZXB0aW5nKVxuICAgIGNvbnNvbGUubG9nKFwiYWNjZXB0YWJsZVwiLCBhY2NlcHRhYmxlKVxuICB9KVxuXG4gIGNvbnN0IGhhbmRsZVNpZ24gPSBhc3luYyAoKSA9PiB7XG4gICAgLy8gbGlicmFyeS4gLnBlcnNvbmFsLnNpZ24obGlicmFyeS50b0hleChcIkNsYWltOjM1ODc0NlwiKSxsaWJyYXJ5LmV0aC5kZWZhdWx0QWNjb3VudCwgKGVycixyZXMpID0+IGNvbnNvbGUubG9nKGVycixyZXMpKVxuICAgIGxpYnJhcnlcbiAgICAgIC5nZXRTaWduZXIoYWNjb3VudClcbiAgICAgIC5zaWduTWVzc2FnZSgnQ2xhaW06ICcgKyB0b2tlbklkKVxuICAgICAgLnRoZW4oKHNpZ25hdHVyZSkgPT4ge1xuICAgICAgICBnZXRLZXlzKHNpZ25hdHVyZSwgdG9rZW5JZCwgKHJlc3VsdCkgPT4ge1xuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdIYW5kbGVTaWduIHJlc3BvbnNlIGlzICcgKyByZXN1bHQpXG4gICAgICAgICAgc2V0TW5lbW9uaWMocmVzdWx0LmRlY3J5cHRlZC5waHJhc2UpXG4gICAgICAgICAgc2V0UHJpdktleUJUQyhcbiAgICAgICAgICAgIHJlc3VsdC5kZWNyeXB0ZWQua2V5cy5maWx0ZXIoKGtleSkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4ga2V5LmNvaW4gPT09ICdidGMnXG4gICAgICAgICAgICB9KVswXS5wcml2a2V5XG4gICAgICAgICAgKVxuICAgICAgICAgIHNldFByaXZLZXlFVEgoXG4gICAgICAgICAgICByZXN1bHQuZGVjcnlwdGVkLmtleXMuZmlsdGVyKChrZXkpID0+IHtcbiAgICAgICAgICAgICAgcmV0dXJuIGtleS5jb2luID09PSAnZXRoJ1xuICAgICAgICAgICAgfSlbMF0ucHJpdmtleVxuICAgICAgICAgIClcbiAgICAgICAgICBzZXRLZXlWYWx1ZXMocmVzdWx0LmRlY3J5cHRlZC52YWx1ZXMpXG4gICAgICAgICAgb25PcGVuS2V5c01vZGFsKClcbiAgICAgICAgfSlcbiAgICAgIH0pXG4gIH1cblxuICBjb25zdCBoYW5kbGVDbGFpbSA9IGFzeW5jICgpID0+IHtcbiAgICBlbWJsZW1Db250cmFjdC50cmFuc2ZlckZyb20oYWNjb3VudCwgQlVSTl9BRERSRVNTLCB0b2tlbklkKS50aGVuKCh7IGhhc2ggfTogeyBoYXNoOiBzdHJpbmcgfSkgPT4ge1xuICAgICAgc2V0Q2xhaW1pbmcodHJ1ZSlcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBzZXRIYXNoKGhhc2gpXG4gICAgICB9LCAxMDApIC8vIFNvbHZpbmcgU3RhdGUgcmFjZSBjb25kaXRpb24gd2hlcmUgdHJhbnNhY3Rpb24gd2F0Y2hlciB3b3VsZG4ndCBub3RpY2Ugd2Ugd2VyZSBjbGFpbWluZ1xuICAgIH0pXG4gIH1cblxuICBjb25zdCBzdGFydERlY3J5cHRFZmZlY3QgPSBhc3luYyAoKSA9PiB7XG4gICAgaWYgKGRlY3J5cHRlZEVmZmVjdFJ1bm5pbmcpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICBzZXREZWNyeXB0ZWRFZmZlY3RSdW5uaW5nKHRydWUpXG4gICAgdmFyIHRoZUxldHRlcnMgPSAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonIC8vWW91IGNhbiBjdXN0b21pemUgd2hhdCBsZXR0ZXJzIGl0IHdpbGwgY3ljbGUgdGhyb3VnaFxuICAgIHZhciBjdG50ID0gJ0RlY3J5cHRpbmcnIC8vIFlvdXIgdGV4dCBnb2VzIGhlcmVcbiAgICB2YXIgc3BlZWQgPSA1IC8vIG1zIHBlciBmcmFtZVxuICAgIHZhciBpbmNyZW1lbnQgPSA4IC8vIGZyYW1lcyBwZXIgc3RlcC4gTXVzdCBiZSA+MlxuXG4gICAgdmFyIGNsZW4gPSBjdG50Lmxlbmd0aFxuICAgIHZhciBzaSA9IDBcbiAgICB2YXIgc3RyaSA9IDBcbiAgICB2YXIgYmxvY2sgPSAnJ1xuICAgIHZhciBmaXhlZCA9ICcnXG4gICAgOyhmdW5jdGlvbiBydXN0bGUoaSkge1xuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICgtLWkpIHtcbiAgICAgICAgICBydXN0bGUoaSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzZXREZWNyeXB0ZWRFZmZlY3RSdW5uaW5nKGZhbHNlKVxuICAgICAgICB9XG4gICAgICAgIG5leHRGcmFtZShpKVxuICAgICAgICBzaSA9IHNpICsgMVxuICAgICAgfSwgc3BlZWQpXG4gICAgfSkoY2xlbiAqIGluY3JlbWVudCArIDEpXG4gICAgZnVuY3Rpb24gbmV4dEZyYW1lKHBvcykge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjbGVuIC0gc3RyaTsgaSsrKSB7XG4gICAgICAgIC8vUmFuZG9tIG51bWJlclxuICAgICAgICB2YXIgbnVtID0gTWF0aC5mbG9vcih0aGVMZXR0ZXJzLmxlbmd0aCAqIE1hdGgucmFuZG9tKCkpXG4gICAgICAgIC8vR2V0IHJhbmRvbSBsZXR0ZXJcbiAgICAgICAgdmFyIGxldHRlciA9IHRoZUxldHRlcnMuY2hhckF0KG51bSlcbiAgICAgICAgYmxvY2sgPSBibG9jayArIGxldHRlclxuICAgICAgfVxuICAgICAgaWYgKHNpID09IGluY3JlbWVudCAtIDEpIHtcbiAgICAgICAgc3RyaSsrXG4gICAgICB9XG4gICAgICBpZiAoc2kgPT0gaW5jcmVtZW50KSB7XG4gICAgICAgIC8vIEFkZCBhIGxldHRlcjtcbiAgICAgICAgLy8gZXZlcnkgc3BlZWQqMTAgbXNcbiAgICAgICAgZml4ZWQgPSBmaXhlZCArIGN0bnQuY2hhckF0KHN0cmkgLSAxKVxuICAgICAgICBzaSA9IDBcbiAgICAgIH1cbiAgICAgIC8vICQoXCIjb3V0cHV0XCIpLmh0bWwoZml4ZWQgKyBibG9jayk7XG4gICAgICBzZXREZWNyeXB0ZWRFZmZlY3QoZml4ZWQgKyBibG9jaylcbiAgICAgIGJsb2NrID0gJydcbiAgICB9XG4gIH1cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGdldFZhdWx0KClcbiAgfSwgW10pXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBjb25zb2xlLmxvZygnQWNjb3VudCBjaGFpbmlkID0gJyArIGNoYWluSWQgKyAnIGFuZCB2YXVsdGNoYWluaWQgPSAnICsgdmF1bHRDaGFpbklkKVxuICAgIGFjY291bnQgJiYgY2hhaW5JZCAmJiB2YXVsdENoYWluSWQgJiYgY2hhaW5JZCA9PSB2YXVsdENoYWluSWQgPyBnZXRDb250cmFjdFN0YXRlcygpIDogbnVsbFxuICAgIC8vIGNvbnNvbGUubG9nKCdpbiB0aGUgdXNlZmVlY3QgdGhhdCBjbGxzIGdldGNvbnRyYWN0c3RhdGVzJylcbiAgfSlcblxuICBmdW5jdGlvbiBzcGxpdERlc2NyaXB0aW9uKHdvcmRzKSB7XG4gICAgdmFyIGRlc2MgPSB3b3Jkcy5zcGxpdCgnXFxuXFxuXFxuXFxuJylcbiAgICByZXR1cm4gZGVzY1swXS50cmltKClcbiAgfVxuXG4gIGZ1bmN0aW9uIHRyeURlY3J5cHQoa2V5KSB7XG4gICAgaWYgKGRlY3J5cHRQYXNzd29yZCkge1xuICAgICAga2V5ID0gZGVjcnlwdFBhc3N3b3JkXG4gICAgfVxuICAgIHN0YXJ0RGVjcnlwdEVmZmVjdCgpXG4gICAgbGV0IGNpcGhlcnRleHQgPSB2YXVsdEFkZHJlc3Nlc1swXS5hZGRyZXNzLnJlcGxhY2UoJ3ByaXZhdGU6JywgJycpXG4gICAgdHJ5IHtcbiAgICAgIHZhciBieXRlcyA9IENyeXB0b0pTLkFFUy5kZWNyeXB0KGNpcGhlcnRleHQsIGtleSlcbiAgICAgIEpTT04ucGFyc2UoYnl0ZXMudG9TdHJpbmcoQ3J5cHRvSlMuZW5jLlV0ZjgpKVxuICAgICAgc2V0VmF1bHRQcml2YWN5KGZhbHNlKVxuICAgICAgc2V0RGVjcnlwdFBhc3N3b3JkKGtleSlcbiAgICAgIHNldFZhdWx0QWRkcmVzc2VzKGRlY3J5cHRBZGRyZXNzZXMoa2V5KSlcbiAgICAgIGdldEV0aEJhbGFuY2VzKFxuICAgICAgICB2YXVsdEFkZHJlc3Nlcy5maWx0ZXIoKGl0ZW0pID0+IHtcbiAgICAgICAgICByZXR1cm4gaXRlbS5jb2luID09PSAnRVRIJ1xuICAgICAgICB9KVswXS5hZGRyZXNzLFxuICAgICAgICAodmFsdWVzKSA9PiB7XG4gICAgICAgICAgZ2V0QnRjQmFsYW5jZShcbiAgICAgICAgICAgIHZhbHVlcyxcbiAgICAgICAgICAgIHZhdWx0QWRkcmVzc2VzLmZpbHRlcigoaXRlbSkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gaXRlbS5jb2luID09PSAnQlRDJ1xuICAgICAgICAgICAgfSlbMF0uYWRkcmVzcyxcbiAgICAgICAgICAgIChfdmFsdWVzKSA9PiB7XG4gICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiSGF2ZSBmdWNraW5nIHZhbHVlc1wiLCB2YWx1ZXMpXG4gICAgICAgICAgICAgIGdldE5mdEJhbGFuY2UoXG4gICAgICAgICAgICAgICAgX3ZhbHVlcyxcbiAgICAgICAgICAgICAgICB2YXVsdEFkZHJlc3Nlcy5maWx0ZXIoKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBpdGVtLmNvaW4gPT09ICdFVEgnXG4gICAgICAgICAgICAgICAgfSlbMF0uYWRkcmVzcyxcbiAgICAgICAgICAgICAgICAoX192YWx1ZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgIHNldFZhdWx0VmFsdWVzKF9fdmFsdWVzLmNvbmNhdCh2YXVsdFZhbHVlcykpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICB9XG4gICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICApXG4gICAgfSBjYXRjaCAoZXJyKSB7fVxuICB9XG5cbiAgZnVuY3Rpb24gZGVjcnlwdEFkZHJlc3NlcyhrZXkpIHtcbiAgICB2YXVsdEFkZHJlc3Nlcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICBsZXQgY2lwaGVyVGV4dCA9IGl0ZW0uYWRkcmVzcy5yZXBsYWNlKCdwcml2YXRlOicsICcnKVxuICAgICAgaXRlbS5hZGRyZXNzID0gZGVjcnlwdChjaXBoZXJUZXh0LCBrZXkpXG4gICAgfSlcbiAgICByZXR1cm4gdmF1bHRBZGRyZXNzZXNcbiAgfVxuXG4gIGZ1bmN0aW9uIGRlY3J5cHQoY2lwaGVyVGV4dCwga2V5KSB7XG4gICAgdmFyIGJ5dGVzID0gQ3J5cHRvSlMuQUVTLmRlY3J5cHQoY2lwaGVyVGV4dCwga2V5KVxuICAgIHZhciBkZWNyeXB0ZWREYXRhID0gSlNPTi5wYXJzZShieXRlcy50b1N0cmluZyhDcnlwdG9KUy5lbmMuVXRmOCkpXG4gICAgcmV0dXJuIGRlY3J5cHRlZERhdGFcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgICA8SGVhZD5cbiAgICAgICAgPG1ldGEgbmFtZT1cInR3aXR0ZXI6Y2FyZFwiIGNvbnRlbnQ9XCJzdW1tYXJ5X2xhcmdlX2ltYWdlXCIgLz5cbiAgICAgICAgPG1ldGEgbmFtZT1cInR3aXR0ZXI6c2l0ZVwiIGNvbnRlbnQ9XCJFbWJsZW0uRmluYW5jZVwiIC8+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJ0d2l0dGVyOnRpdGxlXCIgY29udGVudD17dmF1bHROYW1lfSAvPlxuICAgICAgICA8bWV0YSBuYW1lPVwidHdpdHRlcjpkZXNjcmlwdGlvblwiIGNvbnRlbnQ9e3NwbGl0RGVzY3JpcHRpb24odmF1bHREZXNjKX0gLz5cbiAgICAgICAgPG1ldGEgbmFtZT1cInR3aXR0ZXI6aW1hZ2VcIiBjb250ZW50PXt2YXVsdEltYWdlfSAvPlxuICAgICAgPC9IZWFkPlxuICAgICAgPEFkZHJNb2RhbCBpc09wZW49e2lzT3BlbkFkZHJNb2RhbH0gb25DbG9zZT17b25DbG9zZUFkZHJNb2RhbH0gYWRkckNvaW49e2N1cnJDb2lufSBhZGRyQWRkcj17Y3VyckFkZHJ9IC8+XG5cbiAgICAgIDxLZXlzTW9kYWxcbiAgICAgICAgaXNPcGVuPXtpc09wZW5LZXlzTW9kYWx9XG4gICAgICAgIG9uQ2xvc2U9e29uQ2xvc2VLZXlzTW9kYWx9XG4gICAgICAgIG1uZW1vbmljPXttbmVtb25pY31cbiAgICAgICAgcHJpdktleUJUQz17cHJpdktleUJUQ31cbiAgICAgICAgcHJpdktleUVUSD17cHJpdktleUVUSH1cbiAgICAgICAgcHJpdlZhbHVlcz17cHJpdlZhbHVlc31cbiAgICAgIC8+XG5cbiAgICAgIDxMb2FkZXIgbG9hZGVkPXtzdGF0ZS5sb2FkZWR9PlxuICAgICAgICB7bG9hZGluZ0FwaSA/IDxSZWZyZXNoaW5nIC8+IDogJyd9XG4gICAgICAgIHshaW52YWxpZFZhdWx0ID8gKFxuICAgICAgICAgIDxUaWx0IGNsYXNzTmFtZT1cIlRpbHRcIiBvcHRpb25zPXt7IG1heDogZXhwZXJpbWVudGFsID8gMCA6IDAsIHNjYWxlOiAxIH19PlxuICAgICAgICAgICAgPEZsZXggd2lkdGg9XCJmdWxsXCIgYWxpZ249XCJjZW50ZXJcIiBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiPlxuICAgICAgICAgICAgICA8Qm94XG4gICAgICAgICAgICAgICAgbWF4Vz1cInNtXCJcbiAgICAgICAgICAgICAgICBib3JkZXJXaWR0aD1cIjFweFwiXG4gICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I9e3ZhdWx0Q2hhaW5JZCAhPSBjaGFpbklkID8gJ29yYW5nZS41MDAnIDogc3RhdHVzID09ICdjbGFpbWVkJyA/ICdncmVlbi41MDAnIDogbnVsbH1cbiAgICAgICAgICAgICAgICByb3VuZGVkPVwibGdcIlxuICAgICAgICAgICAgICAgIG92ZXJmbG93PVwiaGlkZGVuXCJcbiAgICAgICAgICAgICAgICBhbGlnbkl0ZW1zPVwiY2VudGVyXCJcbiAgICAgICAgICAgICAgICBtaW5XPXszOTB9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7dmF1bHRDaGFpbklkICE9IGNoYWluSWQgPyAoXG4gICAgICAgICAgICAgICAgICA8Qm94XG4gICAgICAgICAgICAgICAgICAgIG10PVwiMVwiXG4gICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ9XCJzZW1pYm9sZFwiXG4gICAgICAgICAgICAgICAgICAgIGFzPVwiaDNcIlxuICAgICAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0PVwidGlnaHRcIlxuICAgICAgICAgICAgICAgICAgICBwPXsyfVxuICAgICAgICAgICAgICAgICAgICB0ZXh0QWxpZ249XCJjZW50ZXJcIlxuICAgICAgICAgICAgICAgICAgICB0ZXh0VHJhbnNmb3JtPVwidXBwZXJjYXNlXCJcbiAgICAgICAgICAgICAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yPVwib3JhbmdlLjUwMFwiXG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIEJFV0FSRTogVmF1bHQgaXMgb24gYSBkaWZmZXJlbnQgbmV0d29yayB0aGFuIHlvdSBhcmUuXG4gICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICApIDogbnVsbH1cbiAgICAgICAgICAgICAgICA8Qm94XG4gICAgICAgICAgICAgICAgICBtdD1cIjFcIlxuICAgICAgICAgICAgICAgICAgZm9udFdlaWdodD1cInNlbWlib2xkXCJcbiAgICAgICAgICAgICAgICAgIGFzPVwiaDNcIlxuICAgICAgICAgICAgICAgICAgbGluZUhlaWdodD1cInRpZ2h0XCJcbiAgICAgICAgICAgICAgICAgIHA9ezJ9XG4gICAgICAgICAgICAgICAgICB0ZXh0QWxpZ249XCJjZW50ZXJcIlxuICAgICAgICAgICAgICAgICAgdGV4dFRyYW5zZm9ybT1cInVwcGVyY2FzZVwiXG4gICAgICAgICAgICAgICAgICBhbGlnbkl0ZW1zPVwiY2VudGVyXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICB7dmF1bHROYW1lfVxuICAgICAgICAgICAgICAgICAgeyF2YXVsdFByaXZhY3kgPyAnOiB+JCcgKyB2YXVsdFRvdGFsVmFsdWUgOiBudWxsfVxuICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgIDxTdGFjayBhbGlnbj1cImNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgPEltYWdlXG4gICAgICAgICAgICAgICAgICAgIHNyYz17dmFsaWRJbWFnZSh2YXVsdEltYWdlKSA/IHZhdWx0SW1hZ2UgOiAnaHR0cHM6Ly9jaXJjdWl0c29mdmFsdWUuY29tL3B1YmxpYy9jb3ZhbC1sb2dvLnBuZyd9XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoPVwiMjUwcHhcIlxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L1N0YWNrPlxuICAgICAgICAgICAgICAgIDxTdGFjayBhbGlnbj1cImNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgPEJveCBtdD1cIjJcIiBtbD1cIjRcIiBsaW5lSGVpZ2h0PVwidGlnaHRcIj5cbiAgICAgICAgICAgICAgICAgICAgPFRleHQgbXQ9ezJ9IGFzPVwiaDRcIiBtbD1cIjRcIiBtcj1cIjRcIiBmb250U2l6ZT1cInhzXCIgZm9udFN0eWxlPVwiaXRhbGljXCIgPlxuICAgICAgICAgICAgICAgICAgICAgIHtzcGxpdERlc2NyaXB0aW9uKHZhdWx0RGVzYyl9XG4gICAgICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgICAgICAgICAgPEJveCBwPVwiNlwiPlxuICAgICAgICAgICAgICAgICAgPEJveCBkPVwiZmxleFwiIGFsaWduSXRlbXM9XCJiYXNlbGluZVwiPlxuICAgICAgICAgICAgICAgICAgICA8Qm94IGNvbG9yPVwiZ3JheS41MDBcIiBsZXR0ZXJTcGFjaW5nPVwid2lkZVwiIGZvbnRTaXplPVwic21cIiBtbD1cIjJcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBhcz1cImg0XCIgZm9udFdlaWdodD1cInNlbWlib2xkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBDdXJyZW50IENvbnRlbnRzOlxuICAgICAgICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgICB7dmF1bHRQcml2YWN5ID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQgcGI9ezJ9IGNvbG9yPXtkZWNyeXB0ZWRFZmZlY3QgPyAnZ3JlZW4uNTAwJyA6IG51bGx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtkZWNyeXB0ZWRFZmZlY3QgPyBkZWNyeXB0ZWRFZmZlY3QgOiAnQ29udGVudHMgaGlkZGVuLiBFbnRlciBwYXNzd29yZCB0byB1bmxvY2suJ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwicGFzc3dvcmRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPVwidmF1bHQtcGFzc3dvcmRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gdHJ5RGVjcnlwdChlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJpYS1kZXNjcmliZWRieT1cInBhc3N3b3JkLWhlbHBlci10ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgICAgICAgICAgICkgOiB2YXVsdFZhbHVlcy5sZW5ndGggPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXVsdFZhbHVlcy5tYXAoKGNvaW4pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICggICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQga2V5PXtjb2luLm5hbWV9IGlzVHJ1bmNhdGVkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEltYWdlIHdpZHRoPXsxMH0gc3JjPXtjb2luLmltYWdlfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y29pbi5uYW1lfSA6eycgJ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjb2luLmJhbGFuY2UgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvaW4uYmFsYW5jZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IGNvaW4udHlwZSA9PSAnbmZ0JyA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj17Y29pbi5leHRlcm5hbF91cmx9IGlzRXh0ZXJuYWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVmlldyBORlRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsIH0gXG4gICAgICAgICAgICAgICAgICAgICAgeyB2YXVsdERhdGFWYWx1ZXMubGVuZ3RoID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgdmF1bHREYXRhVmFsdWVzLm1hcCgoZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUZXh0PkRhdGE6IHtkYXRhLmF0dHJpYnV0ZV9rZXl9PC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICApICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICkgOiAhdmF1bHREYXRhVmFsdWVzLmxlbmd0aCAmJiAhdmF1bHRWYWx1ZXMubGVuZ3RoID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQ+Tm90aGluZyBpbiBoZXJlISBGaWxsICdlciB1cCE8L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICB7IXZhdWx0UHJpdmFjeSA/IChcbiAgICAgICAgICAgICAgICAgICAgPEJveCBkPVwiZmxleFwiIGFsaWduSXRlbXM9XCJiYXNlbGluZVwiIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIG10PVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25Hcm91cCBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIiBzcGFjaW5nPXs2fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt2YXVsdEFkZHJlc3Nlcy5tYXAoKGFkZHIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2FkZHIuYWRkcmVzc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0Q3VyckNvaW4oYWRkci5jb2luKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRDdXJyQWRkcihhZGRyLmFkZHJlc3MpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uT3BlbkFkZHJNb2RhbCgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFB1dCB7YWRkci5jb2luID09ICdFVEgnID8gYWRkci5jb2luICsgJy9FUkMyMCcgOiBhZGRyLmNvaW59IEluXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uR3JvdXA+XG4gICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgICAgIHshKHN0YXR1cyA9PT0gJ2NsYWltZWQnKSAmJiAhbWludFBhc3N3b3JkID8gKFxuICAgICAgICAgICAgICAgICAgICA8Qm94IGQ9XCJmbGV4XCIgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCIganVzdGlmeUNvbnRlbnQ9XCJzcGFjZS1iZXR3ZWVuXCIgbXQ9XCI0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9XCIxMDAlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFzPVwiYVwiXG4gICAgICAgICAgICAgICAgICAgICAgICB7Li4ue1xuICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdodHRwczovLycgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICh2YXVsdENoYWluSWQgPT0gNCA/ICdyaW5rZWJ5LicgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdvcGVuc2VhLmlvL2Fzc2V0cy8nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250cmFjdEFkZHJlc3Nlcy5lbWJsZW1WYXVsdFt2YXVsdENoYWluSWRdICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnLycgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuSWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldDogJ19ibGFuaycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJlbDogJ25vb3BlbmVyIG5vcmVmZXJyZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICB7bWluZSA/ICdTZWxsL0dpZnQvU2VuZCAoT3BlbnNlYSknIDogJ01ha2UgYW4gT2ZmZXIgKE9wZW5zZWEpJ31cbiAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICApIDogbnVsbH1cbiAgICAgICAgICAgICAgICAgIHttaW5lICYmICFhY2NlcHRhYmxlID8gKDw+XG4gICAgICAgICAgICAgICAgICAgIDxCb3ggZD1cImZsZXhcIiBhbGlnbkl0ZW1zPVwiYmFzZWxpbmVcIiBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIiBtdD1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIHdpZHRoPVwiMTAwJVwiIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghYXBwcm92ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZUFwcHJvdmVGb3JhbGwoKVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGtleSA9IENyeXB0b0pTLmxpYi5Xb3JkQXJyYXkucmFuZG9tKDEyOC84KS50b1N0cmluZygpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBzaGEgPSBDcnlwdG9KUy5TSEEyNTYoa2V5KS50b1N0cmluZygpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdwbGFpbicsIGtleSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3NoYScsIHNoYSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VHJhbnNmZXJQYXNzd29yZChrZXkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZmVySW1hZ2UgPSBzaGEgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkUHJlVHJhbnNmZXIoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LCA1MDApXG4gICAgICAgICAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9PiB7YXBwcm92ZWQgPyBcIkdldCBMaW5rIChTZW5kIFZhdWx0IFZpYSBMaW5rKVwiIDogXCJBcHByb3ZlIEdpZnRpbmdcIiB9IDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgIDwvPikgOiBudWxsIH1cbiAgICAgICAgICAgICAgICAgIHtzaG93VHJhbnNmZXJQYXNzd29yZCB8fCBtaW50UGFzc3dvcmQgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgPEJveD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9e2xvY2F0aW9uLnByb3RvY29sICsnLy8nKyBsb2NhdGlvbi5ob3N0ICsgJy9uZnQ/aWQ9JyArIHRva2VuSWQgKyAnJmtleT0nICsgdHJhbnNmZXJQYXNzd29yZH0+Q29weSBHaWZ0IExpbms8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VGV4dD5QYXNzd29yZDoge3RyYW5zZmVyUGFzc3dvcmR9PC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgICAgICAge2FjY2VwdGFibGUgJiYgY2xhaW1lZEJ5ICE9PSBhY2NvdW50ID8gKFxuICAgICAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIG10PXsyfSB3aWR0aD1cIjEwMCVcIiBvbkNsaWNrPXsoKT0+e2ZpcmVNZXRhTWFzaygpfX0+QWNjZXB0PC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgPElucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICBtdD17Mn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBpZD1cIm1pbnRQYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBtaW5MZW5ndGg9ezN9XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXhMZW5ndGg9ezIwMH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXttaW50UGFzc3dvcmR9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldE1pbnRQYXNzd29yZChlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICAgICAgICAgICAgICBhdXRvQ29tcGxldGU9XCJvZmZcIlxuICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgICAgIHshKHN0YXR1cyA9PT0gJ2NsYWltZWQnKSAmJiBhY2NvdW50ICYmIHZhdWx0Q2hhaW5JZCA9PT0gY2hhaW5JZCAmJiBtaW5lID8gKFxuICAgICAgICAgICAgICAgICAgICA8Qm94IGQ9XCJmbGV4XCIgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCIganVzdGlmeUNvbnRlbnQ9XCJzcGFjZS1iZXR3ZWVuXCIgbXQ9XCI0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9XCIxMDAlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlQ2xhaW0oKVxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlzRGlzYWJsZWQ9e2NsYWltaW5nfVxuICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtjbGFpbWluZyA/ICdDbGFpbWluZyAuLi4nIDogJ0NsYWltIChDcmFjayBPcGVuIFZhdWx0KSd9XG4gICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgKSA6IHN0YXR1cyA9PT0gJ2NsYWltZWQnICYmIGNsYWltZWRCeSA9PT0gYWNjb3VudCAmJiB2YXVsdENoYWluSWQgPT09IGNoYWluSWQgPyAoXG4gICAgICAgICAgICAgICAgICAgIDxCb3ggZD1cImZsZXhcIiBhbGlnbkl0ZW1zPVwiYmFzZWxpbmVcIiBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIiBtdD1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIHdpZHRoPVwiMTAwJVwiIG9uQ2xpY2s9e2hhbmRsZVNpZ259PlxuICAgICAgICAgICAgICAgICAgICAgICAgR2V0IEtleXNcbiAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICApIDogbnVsbH1cbiAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICA8U3RhY2sgZGlyZWN0aW9uPVwiY29sdW1uXCIgYWxpZ249XCJjZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgIHtzdGF0dXMgPT0gJ2NsYWltZWQnID8gPFRleHQgY29sb3I9XCJncmVlbi41MDBcIj5DTEFJTUVEPC9UZXh0PiA6IG51bGx9XG4gICAgICAgICAgICAgICAgPC9TdGFjaz5cbiAgICAgICAgICAgICAgICB7aGFzaCA/IChcbiAgICAgICAgICAgICAgICAgIDxBbGVydCBzdGF0dXM9XCJpbmZvXCI+XG4gICAgICAgICAgICAgICAgICAgIDxBbGVydEljb24gLz5cbiAgICAgICAgICAgICAgICAgICAgeyBhY2NlcHRpbmcgPyBcIkFjY2VwdGluZyB5b3VyIHZhdWx0XCIgOiBjbGFpbWluZyA/IFwiQ2xhaW1pbmcgeW91ciB2YXVsdCAuLi5cIiA6IFwiU29tZXRoaW5nIGVsc2UgLi4uXCJ9XG4gICAgICAgICAgICAgICAgICA8L0FsZXJ0PlxuICAgICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgICA8L1RpbHQ+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgPFN0YWNrIGFsaWduPVwiY2VudGVyXCI+XG4gICAgICAgICAgICA8SW1hZ2VcbiAgICAgICAgICAgICAgd2lkdGg9XCJtZFwiXG4gICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vc3RhcndhcnNibG9nLnN0YXJ3YXJzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxNy8wNi8yNS1zdGFyLXdhcnMtcXVvdGVzLW9iaS13YW4ta2Vub2JpLWlkZW50aWZpY2F0aW9uLXRhbGwuanBnXCJcbiAgICAgICAgICAgID48L0ltYWdlPlxuICAgICAgICAgICAgPFRleHQ+XG4gICAgICAgICAgICAgIFRIRVNFIEFSRSBOT1QgVEhFIFZBVUxUUyBZT1UgQVJFIExPT0tJTkcgRk9SeycgJ31cbiAgICAgICAgICAgICAgPExpbmsgY29sb3I9XCIjNjM4Y2Q4XCIgaHJlZj1cIi4uL2NyZWF0ZVwiPlxuICAgICAgICAgICAgICAgIENSRUFURSBPTkUgSEVSRSFcbiAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgICl9XG4gICAgICAgIHtoYXNoID8gKFxuICAgICAgICAgIDxUcmFuc2FjdGlvblRvYXN0XG4gICAgICAgICAgICBoYXNoPXtoYXNofVxuICAgICAgICAgICAgb25Db21wbGV0ZT17KCkgPT4ge1xuICAgICAgICAgICAgICAvLyBsb2NhdGlvbi5ocmVmID0gbG9jYXRpb24ub3JpZ2luICsgJy92YXVsdD9pZD0nICsgdG9rZW5JZFxuICAgICAgICAgICAgICBpZiAoY2xhaW1pbmcgJiYgIWFjY2VwdGluZyAmJiAhcHJlVHJhbnNmZXJpbmcpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygxMTExMTEpXG4gICAgICAgICAgICAgICAgc2V0SGFzaChudWxsKVxuICAgICAgICAgICAgICAgIHNldFN0YXR1cygnY2xhaW1lZCcpXG4gICAgICAgICAgICAgICAgc2V0Q2xhaW1pbmcoZmFsc2UpXG4gICAgICAgICAgICAgICAgc2V0Q2xhaW1lZEJ5KGFjY291bnQpXG4gICAgICAgICAgICAgICAgaGFuZGxlU2lnbigpXG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAocHJlVHJhbnNmZXJpbmcpIHtcbiAgICAgICAgICAgICAgICBzYXZlUGFzc3dvcmRUb0xvY2FsU3RvcmFnZSgpXG4gICAgICAgICAgICAgICAgc2V0U2hvd1RyYW5zZmVyUGFzc3dvcmQodHJ1ZSlcbiAgICAgICAgICAgICAgICBzZXRQcmVUcmFuc2ZlcmluZyhmYWxzZSlcbiAgICAgICAgICAgICAgICBzZXRIYXNoKG51bGwpICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICB9IGVsc2UgaWYoYWNjZXB0aW5nKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coMzMzMzMzMylcbiAgICAgICAgICAgICAgICBzZXRBY2NlcHRpbmcoZmFsc2UpXG4gICAgICAgICAgICAgICAgc2V0SGFzaChudWxsKVxuICAgICAgICAgICAgICAgIGdldFZhdWx0KClcbiAgICAgICAgICAgICAgfSBlbHNlIGlmKGFwcHJvdmluZykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKDQ0NDQ0NDQpXG4gICAgICAgICAgICAgICAgc2V0QXBwcm92aW5nKGZhbHNlKVxuICAgICAgICAgICAgICAgIHNldEhhc2gobnVsbClcbiAgICAgICAgICAgICAgICBnZXRWYXVsdCgpXG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2NsYWltaW5nJywgY2xhaW1pbmcpIFxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdhY2NlcHRpbmcnLCBhY2NlcHRpbmcpIFxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdwcmVUcmFuc2ZlcmluZycsIHByZVRyYW5zZmVyaW5nKVxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdhcHByb3ZpbmcnLCBhcHByb3ZpbmcpXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJVbmtub3duIHN0YXRlXCIpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICA8L0xvYWRlcj5cbiAgICA8Lz5cbiAgKVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Nft.tsx\n");

/***/ })

})