webpackHotUpdate_N_E("pages/nft",{

/***/ "./components/Nft.tsx":
/*!****************************!*\
  !*** ./components/Nft.tsx ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Nft; });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/core */ \"./node_modules/@chakra-ui/core/dist/es/index.js\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/esm/index.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _web3_react_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @web3-react/core */ \"./node_modules/@web3-react/core/dist/core.esm.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/router */ \"./node_modules/next/dist/client/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _Refreshing__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Refreshing */ \"./components/Refreshing.tsx\");\n/* harmony import */ var react_loader__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react-loader */ \"./node_modules/react-loader/lib/react-loader.js\");\n/* harmony import */ var react_loader__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_loader__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dynamic */ \"./node_modules/next/dist/next-server/lib/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils */ \"./utils.ts\");\n/* harmony import */ var _TransactionToast__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./TransactionToast */ \"./components/TransactionToast.tsx\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../constants */ \"./constants.ts\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../hooks */ \"./hooks.ts\");\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! crypto-js */ \"./node_modules/crypto-js/index.js\");\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(crypto_js__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! react-markdown */ \"./node_modules/react-markdown/lib/react-markdown.js\");\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(react_markdown__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var remark_gfm__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! remark-gfm */ \"./node_modules/remark-gfm/index.js\");\n/* harmony import */ var remark_gfm__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(remark_gfm__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var _Embed__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./Embed */ \"./components/Embed.tsx\");\n/* harmony import */ var _embed_NFTSlideshow__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./embed/NFTSlideshow */ \"./components/embed/NFTSlideshow.tsx\");\n/* harmony import */ var _partials_CoinBalance__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./partials/CoinBalance */ \"./components/partials/CoinBalance.tsx\");\n\n\n\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Nft.tsx\",\n    _s = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar AddrModal = next_dynamic__WEBPACK_IMPORTED_MODULE_11___default()(_c = function _c() {\n  return __webpack_require__.e(/*! import() */ 5).then(__webpack_require__.bind(null, /*! ./AddrModal */ \"./components/AddrModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./AddrModal */ \"./components/AddrModal.tsx\")];\n    },\n    modules: ['./AddrModal']\n  }\n});\n_c2 = AddrModal;\nvar KeysModal = next_dynamic__WEBPACK_IMPORTED_MODULE_11___default()(_c3 = function _c3() {\n  return __webpack_require__.e(/*! import() */ 6).then(__webpack_require__.bind(null, /*! ./KeysModal */ \"./components/KeysModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./KeysModal */ \"./components/KeysModal.tsx\")];\n    },\n    modules: ['./KeysModal']\n  }\n});\n_c4 = KeysModal;\nfunction Nft() {\n  _s();\n\n  var _this = this;\n\n  var _useWeb3React = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_7__[\"useWeb3React\"])(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId,\n      library = _useWeb3React.library;\n\n  var _useRouter = Object(next_router__WEBPACK_IMPORTED_MODULE_8__[\"useRouter\"])(),\n      query = _useRouter.query;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      approved = _useState[0],\n      setApproved = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(query.key),\n      mintPassword = _useState2[0],\n      setMintPassword = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(query.framed || true),\n      framed = _useState3[0],\n      setFramed = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(query.id),\n      tokenId = _useState4[0],\n      setTokenId = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(query.experimental),\n      experimental = _useState5[0],\n      setExperimental = _useState5[1];\n\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      vaultName = _useState6[0],\n      setVaultName = _useState6[1];\n\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      vaultDesc = _useState7[0],\n      setVaultDesc = _useState7[1];\n\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      vaultImage = _useState8[0],\n      setVaultImage = _useState8[1];\n\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      vaultValues = _useState9[0],\n      setVaultValues = _useState9[1];\n\n  var _useState10 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      vaultDataValues = _useState10[0],\n      setVaultDataValues = _useState10[1];\n\n  var _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      vaultAddresses = _useState11[0],\n      setVaultAddresses = _useState11[1];\n\n  var _useState12 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      vaultPrivacy = _useState12[0],\n      setVaultPrivacy = _useState12[1];\n\n  var _useState13 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(0),\n      vaultTotalValue = _useState13[0],\n      setVaultTotalValue = _useState13[1];\n\n  var _useState14 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      vaultChainId = _useState14[0],\n      setVaultChainId = _useState14[1];\n\n  var _useState15 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      hash = _useState15[0],\n      setHash = _useState15[1];\n\n  var _useState16 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      currCoin = _useState16[0],\n      setCurrCoin = _useState16[1];\n\n  var _useState17 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      currAddr = _useState17[0],\n      setCurrAddr = _useState17[1];\n\n  var _useState18 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])({\n    loaded: false\n  }),\n      state = _useState18[0],\n      setState = _useState18[1];\n\n  var _useState19 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      mine = _useState19[0],\n      setMine = _useState19[1];\n\n  var _useState20 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      claiming = _useState20[0],\n      setClaiming = _useState20[1];\n\n  var _useState21 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])('claimed'),\n      status = _useState21[0],\n      setStatus = _useState21[1];\n\n  var _useState22 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      claimedBy = _useState22[0],\n      setClaimedBy = _useState22[1];\n\n  var _useState23 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      mnemonic = _useState23[0],\n      setMnemonic = _useState23[1];\n\n  var _useState24 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      privKeyBTC = _useState24[0],\n      setPrivKeyBTC = _useState24[1];\n\n  var _useState25 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      privKeyETH = _useState25[0],\n      setPrivKeyETH = _useState25[1];\n\n  var _useState26 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      privValues = _useState26[0],\n      setKeyValues = _useState26[1];\n\n  var _useState27 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      loadingApi = _useState27[0],\n      setLoadingApi = _useState27[1];\n\n  var _useState28 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      decryptedEffect = _useState28[0],\n      setDecryptedEffect = _useState28[1];\n\n  var _useState29 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      decryptedEffectRunning = _useState29[0],\n      setDecryptedEffectRunning = _useState29[1];\n\n  var _useState30 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      decryptPassword = _useState30[0],\n      setDecryptPassword = _useState30[1];\n\n  var _useState31 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      invalidVault = _useState31[0],\n      setInvalidVault = _useState31[1];\n\n  var _useState32 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      hasCheckedNft = _useState32[0],\n      setHasCheckedNft = _useState32[1];\n\n  var _useState33 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      accepting = _useState33[0],\n      setAccepting = _useState33[1];\n\n  var _useState34 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      approving = _useState34[0],\n      setApproving = _useState34[1];\n\n  var _useState35 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      acceptable = _useState35[0],\n      setAcceptable = _useState35[1];\n\n  var _useState36 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(''),\n      transferPassword = _useState36[0],\n      setTransferPassword = _useState36[1];\n\n  var _useState37 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      showTransferPassword = _useState37[0],\n      setShowTransferPassword = _useState37[1];\n\n  var _useState38 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      preTransfering = _useState38[0],\n      setPreTransfering = _useState38[1];\n\n  var _useState39 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      transferToAddress = _useState39[0],\n      setTransferToAddress = _useState39[1];\n\n  var _useState40 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      transfering = _useState40[0],\n      setTransfering = _useState40[1];\n\n  var _useState41 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      owner = _useState41[0],\n      setOwner = _useState41[1]; // const [transferImage, setTransferImage] = useState('')\n\n\n  var handlerContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_15__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].vaultHandler[chainId], _constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].vaultHandlerAbi, true);\n  var emblemContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_15__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].emblemVault[chainId], _constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].emblemAbi, true);\n\n  var _useDisclosure = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"useDisclosure\"])(),\n      isOpenAddrModal = _useDisclosure.isOpen,\n      onOpenAddrModal = _useDisclosure.onOpen,\n      onCloseAddrModal = _useDisclosure.onClose;\n\n  var _useDisclosure2 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"useDisclosure\"])(),\n      isOpenKeysModal = _useDisclosure2.isOpen,\n      onOpenKeysModal = _useDisclosure2.onOpen,\n      onCloseKeysModal = _useDisclosure2.onClose;\n\n  var _useDisclosure3 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"useDisclosure\"])(),\n      isOpen = _useDisclosure3.isOpen,\n      onToggle = _useDisclosure3.onToggle;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var transferImage;\n\n  var transferVault = function transferVault() {\n    setTransfering(true);\n    emblemContract.transferFrom(account, transferToAddress, tokenId).then(function (_ref) {\n      var hash = _ref.hash;\n      setHash(hash);\n    })[\"catch\"](function (error) {});\n  };\n\n  var fireMetaMask = function fireMetaMask() {\n    console.log(mintPassword);\n    setAccepting(true);\n    getWitness(function (witness) {\n      // console.log(tokenId, mintPassword, witness.nonce, witness.signature, account)\n      ;\n      handlerContract.transferWithCode(tokenId, mintPassword, account, witness.nonce, witness.signature).then(function (_ref2) {\n        var hash = _ref2.hash;\n        setTimeout(function () {\n          setHash(hash); // setShowMakingVaultMsg(true)\n        }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n      })[\"catch\"](function (error) {\n        setAccepting(false);\n\n        if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n          console.log(\"tx failed.\", error);\n        } else {// setAccepting(false)\n          // setShowPreVaultMsg(false)\n        }\n      });\n    });\n  };\n\n  var addPreTransfer = function addPreTransfer() {\n    console.log('transferImage', \"0x\" + transferImage);\n    setPreTransfering(true);\n    handlerContract.addPreTransfer(tokenId, \"0x\" + transferImage).then(function (_ref3) {\n      var hash = _ref3.hash;\n      // setTimeout(() => {\n      setHash(hash);\n      console.log(\"Set Pre Transfering True\", preTransfering); // setShowMakingVaultMsg(true)\n      // }, 100) // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if (error === null || error === void 0 ? void 0 : error.code) {\n        console.log(\"Error?\");\n        setPreTransfering(false);\n        setShowTransferPassword(false);\n        setTransferPassword('');\n      } else {// setShowTransferPassword(!showTransferPassword? true : false)\n        // setPreTransfering(false)\n        // setShowPreVaultMsg(false)\n      }\n    });\n  };\n\n  var handleApproveForall = function handleApproveForall() {\n    setApproving(true);\n    emblemContract.setApprovalForAll(_constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].vaultHandler[chainId], true).then(function (_ref4) {\n      var hash = _ref4.hash;\n      setTimeout(function () {\n        setHash(hash); // setShowMakingVaultMsg(true)\n      }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        console.log(\"tx failed.\", error);\n      } else {\n        setApproving(false); // setShowPreVaultMsg(false)\n      }\n    });\n  }; // \n\n\n  var getVault = /*#__PURE__*/function () {\n    var _ref5 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee() {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              loadCache();\n              _context.next = 3;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/meta/' + tokenId + '?experimental=true', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 3:\n              responce = _context.sent;\n              _context.next = 6;\n              return responce.json();\n\n            case 6:\n              jsonData = _context.sent;\n\n              // console.log('vault response was ', jsonData)\n              if (!jsonData.name) {\n                setState({\n                  loaded: true\n                });\n                setInvalidVault(true);\n              } else {\n                setStates(jsonData);\n                saveCache(jsonData);\n                setLoadingApi(false);\n                setInvalidVault(false);\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getVault() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var getWitness = /*#__PURE__*/function () {\n    var _ref6 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee2(cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/witness/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata',\n                  chainid: chainId.toString()\n                }\n              });\n\n            case 2:\n              responce = _context2.sent;\n              _context2.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context2.sent;\n\n              if (!jsonData.signature) {\n                _context2.next = 11;\n                break;\n              }\n\n              console.log('witness', jsonData);\n              return _context2.abrupt(\"return\", cb(jsonData));\n\n            case 11:\n              return _context2.abrupt(\"return\", cb(false));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getWitness(_x) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var setStates = function setStates(jsonData) {\n    framed && !jsonData.image.includes('framed=') && !jsonData.image.includes('http') ? jsonData.image = jsonData.image + \"&framed=\" + framed : null;\n    setVaultName(jsonData.name);\n    setVaultImage(jsonData.image);\n    setVaultDesc(jsonData.description);\n    setVaultTotalValue(jsonData.totalValue || 0);\n    setVaultValues(vaultValues.concat(jsonData.values));\n    setVaultDataValues(jsonData.attributes.filter(function (item) {\n      return item.trait_type === \"key\";\n    }));\n    setVaultDesc(jsonData.description);\n    setVaultAddresses(jsonData.addresses);\n    setVaultChainId(jsonData.network == 'mainnet' ? 1 : jsonData.network == \"rinkeby\" ? 4 : jsonData.network == \"mumbai\" ? 80001 : jsonData.network == \"matic\" ? 137 : jsonData.network == \"xdai\" ? 100 : jsonData.network == \"bsc\" ? 56 : jsonData.network == \"fantom\" ? 250 : 97);\n    setStatus(jsonData.status);\n\n    if (status === 'claimed') {\n      setClaimedBy(jsonData.claimedBy);\n    } // console.log('inside getstates. mine is ', mine)\n\n\n    setState({\n      loaded: true\n    });\n    var isPvt = jsonData.addresses.filter(function (item) {\n      return item.address.includes('private:');\n    }).length > 0;\n    setVaultPrivacy(isPvt);\n    setTimeout(function () {\n      !isPvt ? // getNftBalance(\n      //   jsonData.values,\n      //   jsonData.addresses.filter((item) => {\n      //     return item.coin === 'ETH'\n      //   })[0].address,\n      //   (_values) => {\n      //     // console.log(\"Have new values\", _values)\n      //     setVaultValues(_values)\n      getAllBalances([], tokenId, function (v) {\n        setVaultValues(v);\n      }) : null; // }\n      // ) : null\n    }, 5);\n  };\n\n  var getEthBalances = /*#__PURE__*/function () {\n    var _ref7 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee3(address, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/eth/balance/' + address, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context3.sent;\n              _context3.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context3.sent;\n              // console.log(Number(vaultTotalValue), Number(jsonData.totalValue))\n              setVaultTotalValue(Number(vaultTotalValue) + Number(jsonData.totalValue)); // console.log('get eth balances', jsonData.values)\n\n              return _context3.abrupt(\"return\", cb(jsonData.values));\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getEthBalances(_x2, _x3) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var getBtcBalance = /*#__PURE__*/function () {\n    var _ref8 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee4(values, address, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/btc/balance/' + address, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context4.sent;\n              _context4.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context4.sent;\n              return _context4.abrupt(\"return\", cb(values.concat(jsonData.values)));\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getBtcBalance(_x4, _x5, _x6) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var getNftBalance = /*#__PURE__*/function () {\n    var _ref9 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee5(values, address, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/eth/nft/' + address, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context5.sent;\n              _context5.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context5.sent;\n\n              if (!(jsonData.length > 0)) {\n                _context5.next = 10;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", cb(values.concat(jsonData)));\n\n            case 10:\n              return _context5.abrupt(\"return\", cb(values));\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getNftBalance(_x7, _x8, _x9) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var getAllBalances = /*#__PURE__*/function () {\n    var _ref10 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee6(values, tokenId, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/vault/balance/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context6.sent;\n              _context6.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context6.sent;\n              console.log('responce', responce, jsonData);\n\n              if (!(jsonData.balances.length > 0)) {\n                _context6.next = 11;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", cb(values.concat(jsonData.balances)));\n\n            case 11:\n              return _context6.abrupt(\"return\", cb(values));\n\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function getAllBalances(_x10, _x11, _x12) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  var saveCache = function saveCache(vault) {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_vault', JSON.stringify(vault)); // Save new state for later\n  };\n\n  var loadCache = function loadCache() {\n    var vault = JSON.parse(localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_vault')); // Load vaults from storage before updating from server!\n\n    if (vault) {\n      setState({\n        loaded: true\n      });\n      setStates(vault);\n      setLoadingApi(true);\n    }\n  };\n\n  var savePasswordToLocalStorage = function savePasswordToLocalStorage() {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_mintPassword', transferPassword); // Save new state for later\n  };\n\n  var loadPasswordFromLocalStorage = function loadPasswordFromLocalStorage() {\n    var storedPw = localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_mintPassword');\n    storedPw && acceptable ? setMintPassword(storedPw) : null; //setMintPassword(null)\n  };\n\n  var getKeys = /*#__PURE__*/function () {\n    var _ref11 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee7(signature, tokenId, cb) {\n      var myHeaders, raw, responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainId', chainId.toString());\n              myHeaders.append('service', 'evmetadata');\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature\n              });\n              _context7.next = 7;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/claim/' + tokenId, {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 7:\n              responce = _context7.sent;\n              _context7.next = 10;\n              return responce.json();\n\n            case 10:\n              jsonData = _context7.sent;\n              return _context7.abrupt(\"return\", cb(jsonData));\n\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function getKeys(_x13, _x14, _x15) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var getContractStates = /*#__PURE__*/function () {\n    var _ref12 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee8() {\n      var owned, _owner, _acceptable, isApproved;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              owned = false;\n              _context8.prev = 1;\n              _context8.next = 4;\n              return emblemContract.ownerOf(tokenId);\n\n            case 4:\n              _owner = _context8.sent;\n              _context8.next = 7;\n              return handlerContract.getPreTransfer(tokenId);\n\n            case 7:\n              _acceptable = _context8.sent;\n              _context8.next = 10;\n              return emblemContract.isApprovedForAll(account, _constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].vaultHandler[chainId]);\n\n            case 10:\n              isApproved = _context8.sent;\n              setApproved(isApproved);\n              setAcceptable(_acceptable._from !== \"0x0000000000000000000000000000000000000000\");\n              setOwner(_owner);\n              setMine(_owner === account);\n              loadPasswordFromLocalStorage();\n              _context8.next = 20;\n              break;\n\n            case 18:\n              _context8.prev = 18;\n              _context8.t0 = _context8[\"catch\"](1);\n\n            case 20:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[1, 18]]);\n    }));\n\n    return function getContractStates() {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {// console.log(\"mine?\", mine)\n    // console.log(\"claiming?\", claiming)\n    // console.log(\"accepting?\", accepting)\n    // console.log(\"acceptable\", acceptable)\n  });\n\n  var handleSign = /*#__PURE__*/function () {\n    var _ref13 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee9() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              // library. .personal.sign(library.toHex(\"Claim:358746\"),library.eth.defaultAccount, (err,res) => console.log(err,res))\n              library.getSigner(account).signMessage('Claim: ' + tokenId).then(function (signature) {\n                getKeys(signature, tokenId, function (result) {\n                  // console.log('HandleSign response is ' + result)\n                  setMnemonic(result.decrypted.phrase);\n                  setPrivKeyBTC(result.decrypted.keys.filter(function (key) {\n                    return key.coin === 'btc';\n                  })[0].privkey);\n                  setPrivKeyETH(result.decrypted.keys.filter(function (key) {\n                    return key.coin === 'eth';\n                  })[0].privkey);\n                  setKeyValues(result.decrypted.values);\n                  onOpenKeysModal();\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function handleSign() {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  var handleClaim = /*#__PURE__*/function () {\n    var _ref14 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee10() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              emblemContract.transferFrom(account, _constants__WEBPACK_IMPORTED_MODULE_14__[\"BURN_ADDRESS\"], tokenId).then(function (_ref15) {\n                var hash = _ref15.hash;\n                setClaiming(true);\n                setTimeout(function () {\n                  setHash(hash);\n                }, 100); // Solving State race condition where transaction watcher wouldn't notice we were claiming\n              });\n\n            case 1:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function handleClaim() {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n\n  var startDecryptEffect = /*#__PURE__*/function () {\n    var _ref16 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee11() {\n      var theLetters, ctnt, speed, increment, clen, si, stri, block, fixed, nextFrame;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              nextFrame = function _nextFrame(pos) {\n                for (var i = 0; i < clen - stri; i++) {\n                  //Random number\n                  var num = Math.floor(theLetters.length * Math.random()); //Get random letter\n\n                  var letter = theLetters.charAt(num);\n                  block = block + letter;\n                }\n\n                if (si == increment - 1) {\n                  stri++;\n                }\n\n                if (si == increment) {\n                  // Add a letter;\n                  // every speed*10 ms\n                  fixed = fixed + ctnt.charAt(stri - 1);\n                  si = 0;\n                } // $(\"#output\").html(fixed + block);\n\n\n                setDecryptedEffect(fixed + block);\n                block = '';\n              };\n\n              if (!decryptedEffectRunning) {\n                _context11.next = 3;\n                break;\n              }\n\n              return _context11.abrupt(\"return\");\n\n            case 3:\n              setDecryptedEffectRunning(true);\n              theLetters = 'abcdefghijklmnopqrstuvwxyz'; //You can customize what letters it will cycle through\n\n              ctnt = 'Decrypting'; // Your text goes here\n\n              speed = 5; // ms per frame\n\n              increment = 8; // frames per step. Must be >2\n\n              clen = ctnt.length;\n              si = 0;\n              stri = 0;\n              block = '';\n              fixed = '';\n\n              (function rustle(i) {\n                setTimeout(function () {\n                  if (--i) {\n                    rustle(i);\n                  } else {\n                    setDecryptedEffectRunning(false);\n                  }\n\n                  nextFrame(i);\n                  si = si + 1;\n                }, speed);\n              })(clen * increment + 1);\n\n            case 14:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function startDecryptEffect() {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    getVault();\n  }, []);\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    // console.log('Account chainid = ' + chainId + ' and vaultchainid = ' + vaultChainId)\n    account && chainId && vaultChainId && chainId == vaultChainId ? getContractStates() : null; // console.log('in the usefeect that clls getcontractstates')\n  });\n\n  function splitDescription(words) {\n    var desc = words.split('\\n\\n\\n\\n');\n    return desc[0].trim();\n  }\n\n  function tryDecrypt(key) {\n    if (decryptPassword) {\n      key = decryptPassword;\n    }\n\n    startDecryptEffect();\n    var ciphertext = vaultAddresses[0].address.replace('private:', '');\n\n    try {\n      var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(ciphertext, key);\n      JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n      setVaultPrivacy(false);\n      setDecryptPassword(key);\n      setVaultAddresses(decryptAddresses(key));\n      getAllBalances([], tokenId, function (values) {\n        setVaultValues(values);\n      }); // getEthBalances(\n      //   vaultAddresses.filter((item) => {\n      //     return item.coin === 'ETH'\n      //   })[0].address,\n      //   (values) => {\n      //     getBtcBalance(\n      //       values,\n      //       vaultAddresses.filter((item) => {\n      //         return item.coin === 'BTC'\n      //       })[0].address,\n      //       (_values) => {\n      //         // console.log(\"Have fucking values\", values)\n      //         getNftBalance(\n      //           _values,\n      //           vaultAddresses.filter((item) => {\n      //             return item.coin === 'ETH'\n      //           })[0].address,\n      //           (__values) => {\n      //             setVaultValues(__values.concat(vaultValues))\n      //           }\n      //         )\n      //       }\n      //     )\n      //   }\n      // )\n    } catch (err) {}\n  }\n\n  function decryptAddresses(key) {\n    vaultAddresses.forEach(function (item) {\n      var cipherText = item.address.replace('private:', '');\n      item.address = decrypt(cipherText, key);\n    });\n    return vaultAddresses;\n  }\n\n  function decrypt(cipherText, key) {\n    var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(cipherText, key);\n    var decryptedData = JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n    return decryptedData;\n  }\n\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(next_head__WEBPACK_IMPORTED_MODULE_6___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 8\n    }\n  }, __jsx(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:site\",\n    content: \"Emblem.Finance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:title\",\n    content: vaultName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:description\",\n    content: splitDescription(vaultDesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:image\",\n    content: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 9\n    }\n  }), __jsx(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: \"\\n              // $(\\\".NFT\\\").tilt({    \\n              //     maxTilt: 3\\n              // });\\n              $(\\\".NFT\\\").trigger('mouseenter');\\n              $(\\\".NFT\\\").trigger('mouseclick'), '.NFT';\\n              \"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 9\n    }\n  })), __jsx(AddrModal, {\n    isOpen: isOpenAddrModal,\n    onClose: onCloseAddrModal,\n    addrCoin: currCoin,\n    addrAddr: currAddr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }\n  }), __jsx(KeysModal, {\n    isOpen: isOpenKeysModal,\n    onClose: onCloseKeysModal,\n    mnemonic: mnemonic,\n    privKeyBTC: privKeyBTC,\n    privKeyETH: privKeyETH,\n    privValues: privValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }\n  }), __jsx(react_loader__WEBPACK_IMPORTED_MODULE_10___default.a, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 7\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 9\n    }\n  }), loadingApi ? __jsx(_Refreshing__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 23\n    }\n  }) : '', !invalidVault ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Flex\"], {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 13\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    className: \"NFT\",\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    borderColor: vaultChainId != chainId ? 'orange.500' : status == 'claimed' ? 'green.500' : null,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    minW: 390,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 15\n    }\n  }, vaultChainId != chainId ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    alignItems: \"center\",\n    color: \"orange.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 19\n    }\n  }, \"BEWARE: Vault is on a different network than you are.\") : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 17\n    }\n  }, vaultName, !vaultPrivacy ? ': ~$' + vaultTotalValue : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Stack\"], {\n    className: \"NFT-content\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 17\n    }\n  }, vaultValues.length && vaultValues.filter(function (item) {\n    return item.type == \"nft\";\n  }).length > 0 ? __jsx(_embed_NFTSlideshow__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n    name: vaultName,\n    image: vaultImage,\n    items: vaultValues.map(function (value) {\n      return {\n        image: value.image,\n        description: value.description,\n        name: value.name,\n        type: value.type\n      };\n    }),\n    properties: {\n      'duration': 3000,\n      canSwipe: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 23\n    }\n  }) : __jsx(_Embed__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n    url: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 23\n    }\n  })), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Stack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    mt: \"2\",\n    ml: \"4\",\n    lineHeight: \"tight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Stack\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    fontSize: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 23\n    }\n  }, vaultChainId == chainId ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Link\"], {\n    href: \"./vaultlist?address=\" + owner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 25\n    }\n  }, \"Owner: \", owner) : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    mt: 2,\n    as: \"h4\",\n    ml: \"4\",\n    mr: \"4\",\n    fontSize: \"xs\",\n    fontStyle: \"italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 23\n    }\n  }, __jsx(react_markdown__WEBPACK_IMPORTED_MODULE_17___default.a, {\n    plugins: [remark_gfm__WEBPACK_IMPORTED_MODULE_18___default.a],\n    children: splitDescription(vaultDesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 25\n    }\n  }))))), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    p: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    className: \"coin-balance-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    color: \"gray.500\",\n    letterSpacing: \"wide\",\n    fontSize: \"sm\",\n    ml: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    as: \"h4\",\n    fontWeight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 23\n    }\n  }, \"Current Contents:\"), vaultPrivacy ? __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    pb: 2,\n    color: decryptedEffect ? 'green.500' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 27\n    }\n  }, decryptedEffect ? decryptedEffect : 'Contents hidden. Enter password to unlock.'), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Input\"], {\n    type: \"password\",\n    id: \"vault-password\",\n    onChange: function onChange(e) {\n      return tryDecrypt(e.target.value);\n    },\n    \"aria-describedby\": \"password-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 27\n    }\n  })) : vaultValues.length ? vaultValues.map(function (coin) {\n    // let coinName = '(' + coin.coin.toLowerCase() + ')' + coin.name +': '\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Stack\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 29\n      }\n    }, __jsx(_partials_CoinBalance__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n      colorMode: colorMode,\n      coin: coin,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 31\n      }\n    }));\n  }) : null, vaultDataValues.length ? vaultDataValues.map(function (data) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 29\n      }\n    }, \"Data: \", data.attribute_key);\n  }) : !vaultDataValues.length && !vaultValues.length ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 25\n    }\n  }, \"Nothing in here! Fill 'er up!\") : null)), !vaultPrivacy ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"ButtonGroup\"], {\n    justifyContent: \"space-between\",\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__[\"HStack\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 25\n    }\n  }, vaultAddresses.map(function (addr) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n      width: \"165px\",\n      key: addr.address,\n      onClick: function onClick() {\n        setCurrCoin(addr.coin);\n        setCurrAddr(addr.address);\n        onOpenAddrModal();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 31\n      }\n    }, \"Put \", addr.coin == 'ETH' ? addr.coin + '/ERC20' : addr.coin, \" In\");\n  })))) : null, !(status === 'claimed') && (vaultChainId === 1 || vaultChainId === 4) ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    width: \"100%\",\n    as: \"a\"\n  }, {\n    href: 'https://' + (vaultChainId == 4 ? 'rinkeby.' : '') + 'opensea.io/assets/' + _constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].emblemVault[vaultChainId] + '/' + tokenId,\n    target: '_blank',\n    rel: 'noopener noreferrer'\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 23\n    }\n  }), mine ? 'Sell (Opensea)' : 'Make an Offer (Opensea)')) : null, !(status === 'claimed') && mine && !acceptable ? __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 22\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Stack\"], {\n    direction: \"column\",\n    align: \"center\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 25\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n    width: \"100%\",\n    onClick: onToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 27\n    }\n  }, \"Transfer Vault\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Collapse\"], {\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 27\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"2\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 29\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"FormLabel\"], {\n    htmlFor: \"owner-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 29\n    }\n  }, \"Address\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Input\"], {\n    mt: 1,\n    type: \"text\",\n    id: \"transferAddress\",\n    value: transferToAddress || '',\n    onChange: function onChange(e) {\n      console.log(\"Transfer to\", e.target.value);\n      setTransferToAddress(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 31\n    }\n  })), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"2\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 29\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n    isDisabled: !Object(_utils__WEBPACK_IMPORTED_MODULE_12__[\"isETHAddress\"])(transferToAddress),\n    onClick: function onClick() {\n      onToggle();\n      transferVault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 31\n    }\n  }, \"Transfer Now\")))))) : null, mine && !acceptable ? __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n    width: \"100%\",\n    onClick: function onClick() {\n      if (!approved) {\n        return handleApproveForall();\n      } else {\n        var key = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.lib.WordArray.random(128 / 8).toString();\n        var sha = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.SHA256(key).toString();\n        console.log('plain', key);\n        console.log('sha', sha);\n        setTransferPassword(key);\n        transferImage = sha;\n        setTimeout(function () {\n          addPreTransfer();\n        }, 500);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 23\n    }\n  }, \" \", approved ? \"Get Link (Send Vault Via Link)\" : \"Approve Gifting\", \" \"))) : null, (showTransferPassword || mintPassword) && acceptable ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Link\"], {\n    href: location.protocol + '//' + location.host + '/nft?id=' + tokenId + '&key=' + (transferPassword || mintPassword),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 25\n    }\n  }, \"Copy Gift Link\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 25\n    }\n  }, \"Password: \", transferPassword || mintPassword)) : null, acceptable && claimedBy !== account ? __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n    mt: 2,\n    width: \"100%\",\n    onClick: function onClick() {\n      fireMetaMask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 23\n    }\n  }, \"Accept\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Input\"], {\n    mt: 2,\n    type: \"password\",\n    id: \"mintPassword\",\n    minLength: 3,\n    maxLength: 200,\n    value: mintPassword || '',\n    onChange: function onChange(e) {\n      console.log('grrr', e.target.value, mintPassword);\n      setMintPassword(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 23\n    }\n  })) : null, !(status === 'claimed') && account && vaultChainId === chainId && mine ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n    width: \"100%\",\n    onClick: function onClick() {\n      handleClaim();\n    },\n    isDisabled: claiming,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 23\n    }\n  }, claiming ? 'Claiming ...' : 'Claim (Crack Open Vault)')) : status === 'claimed' && claimedBy === account && vaultChainId === chainId ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Button\"], {\n    width: \"100%\",\n    onClick: handleSign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 23\n    }\n  }, \"Get Keys\")) : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Stack\"], {\n    direction: \"column\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 894,\n      columnNumber: 17\n    }\n  }, status == 'claimed' ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    color: \"green.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 895,\n      columnNumber: 42\n    }\n  }, \"CLAIMED\") : null), hash ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Alert\"], {\n    status: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"AlertIcon\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 21\n    }\n  }), accepting ? \"Accepting Your Gift Vault\" : claiming ? \"Claiming your Vault ...\" : approving ? \"Handling Approval Flow ...\" : transfering ? \"Transfering Vault ...\" : \"Generating Gift Link ...\") : null)) : __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Stack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 11\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Image\"], {\n    width: \"md\",\n    src: \"https://starwarsblog.starwars.com/wp-content/uploads/2017/06/25-star-wars-quotes-obi-wan-kenobi-identification-tall.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 13\n    }\n  }), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 13\n    }\n  }, \"THESE ARE NOT THE VAULTS YOU ARE LOOKING FOR\", ' ', __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Link\"], {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 15\n    }\n  }, \"CREATE ONE HERE!\"))), hash ? __jsx(_TransactionToast__WEBPACK_IMPORTED_MODULE_13__[\"TransactionToast\"], {\n    hash: hash,\n    onComplete: function onComplete() {\n      // location.href = location.origin + '/vault?id=' + tokenId\n      if (claiming && !accepting && !preTransfering) {\n        console.log(111111);\n        setHash(null);\n        setStatus('claimed');\n        setClaiming(false);\n        setClaimedBy(account);\n        handleSign();\n      } else if (preTransfering) {\n        savePasswordToLocalStorage();\n        setShowTransferPassword(true);\n        setPreTransfering(false);\n        setHash(null);\n      } else if (accepting) {\n        setAccepting(false);\n        getVault();\n        setHash(null);\n      } else if (approving) {\n        setApproving(false);\n        getVault();\n        setHash(null);\n      } else if (transfering) {\n        setTransfering(false);\n        getVault();\n        setHash(null);\n      } else {\n        console.log('claiming', claiming);\n        console.log('accepting', accepting);\n        console.log('preTransfering', preTransfering);\n        console.log('approving', approving);\n        console.log(\"Unknown state\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 11\n    }\n  }) : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Box\"], {\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Nft, \"YxO00XNrb6THc9tm4YIEDFTbAOQ=\", true, function () {\n  return [_web3_react_core__WEBPACK_IMPORTED_MODULE_7__[\"useWeb3React\"], next_router__WEBPACK_IMPORTED_MODULE_8__[\"useRouter\"], _hooks__WEBPACK_IMPORTED_MODULE_15__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_15__[\"useContract\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"useDisclosure\"]];\n});\n\n_c5 = Nft;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"AddrModal$dynamic\");\n$RefreshReg$(_c2, \"AddrModal\");\n$RefreshReg$(_c3, \"KeysModal$dynamic\");\n$RefreshReg$(_c4, \"KeysModal\");\n$RefreshReg$(_c5, \"Nft\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Nft.tsx\n");

/***/ })

})