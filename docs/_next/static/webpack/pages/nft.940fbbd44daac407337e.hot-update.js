webpackHotUpdate_N_E("pages/nft",{

/***/ "./components/Nft.tsx":
/*!****************************!*\
  !*** ./components/Nft.tsx ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Nft; });\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/core */ \"./node_modules/@chakra-ui/core/dist/es/index.js\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/esm/index.js\");\n/* harmony import */ var _toruslabs_torus_direct_web_sdk__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @toruslabs/torus-direct-web-sdk */ \"./node_modules/@toruslabs/torus-direct-web-sdk/dist/directWebSdk.cjs.js\");\n/* harmony import */ var _toruslabs_torus_direct_web_sdk__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_toruslabs_torus_direct_web_sdk__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _web3_react_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @web3-react/core */ \"./node_modules/@web3-react/core/dist/core.esm.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/router */ \"./node_modules/next/dist/client/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _Refreshing__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Refreshing */ \"./components/Refreshing.tsx\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dynamic */ \"./node_modules/next/dist/next-server/lib/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils */ \"./utils.ts\");\n/* harmony import */ var _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ethersproject/contracts */ \"./node_modules/@ethersproject/contracts/lib.esm/index.js\");\n/* harmony import */ var _TransactionToast__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./TransactionToast */ \"./components/TransactionToast.tsx\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../constants */ \"./constants.ts\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../hooks */ \"./hooks.ts\");\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! crypto-js */ \"./node_modules/crypto-js/index.js\");\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(crypto_js__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! react-markdown */ \"./node_modules/react-markdown/lib/react-markdown.js\");\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(react_markdown__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var remark_gfm__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! remark-gfm */ \"./node_modules/remark-gfm/index.js\");\n/* harmony import */ var remark_gfm__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(remark_gfm__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var _Embed__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./Embed */ \"./components/Embed.tsx\");\n/* harmony import */ var _embed_NFTSlideshow__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./embed/NFTSlideshow */ \"./components/embed/NFTSlideshow.tsx\");\n/* harmony import */ var _partials_CoinBalance__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./partials/CoinBalance */ \"./components/partials/CoinBalance.tsx\");\n/* harmony import */ var _transak_transak_sdk__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @transak/transak-sdk */ \"./node_modules/@transak/transak-sdk/dist/sdk.js\");\n/* harmony import */ var _transak_transak_sdk__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_transak_transak_sdk__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var _partials_Attributes__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./partials/Attributes */ \"./components/partials/Attributes.tsx\");\n\n\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Nft.tsx\",\n    _s = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar AddrModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c = function _c() {\n  return __webpack_require__.e(/*! import() */ 5).then(__webpack_require__.bind(null, /*! ./AddrModal */ \"./components/AddrModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./AddrModal */ \"./components/AddrModal.tsx\")];\n    },\n    modules: ['./AddrModal']\n  }\n});\n_c2 = AddrModal;\nvar KeysModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c3 = function _c3() {\n  return __webpack_require__.e(/*! import() */ 6).then(__webpack_require__.bind(null, /*! ./KeysModal */ \"./components/KeysModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./KeysModal */ \"./components/KeysModal.tsx\")];\n    },\n    modules: ['./KeysModal']\n  }\n});\n_c4 = KeysModal;\nvar OfferModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c5 = function _c5() {\n  return __webpack_require__.e(/*! import() */ 7).then(__webpack_require__.bind(null, /*! ./OfferModal */ \"./components/OfferModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./OfferModal */ \"./components/OfferModal.tsx\")];\n    },\n    modules: ['./OfferModal']\n  }\n});\n_c6 = OfferModal;\nfunction Nft() {\n  _s();\n\n  var _this = this;\n\n  var _useWeb3React = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_7__[\"useWeb3React\"])(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId,\n      library = _useWeb3React.library;\n\n  var _useRouter = Object(next_router__WEBPACK_IMPORTED_MODULE_8__[\"useRouter\"])(),\n      query = _useRouter.query;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      approved = _useState[0],\n      setApproved = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.useOldMint),\n      useOldMint = _useState2[0],\n      setUseOldMint = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.key),\n      mintPassword = _useState3[0],\n      setMintPassword = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.offer || false),\n      showOffer = _useState4[0],\n      setShowOffer = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.framed || true),\n      framed = _useState5[0],\n      setFramed = _useState5[1];\n\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.id),\n      tokenId = _useState6[0],\n      setTokenId = _useState6[1];\n\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.experimental),\n      experimental = _useState7[0],\n      setExperimental = _useState7[1];\n\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.noLayout),\n      noLayout = _useState8[0],\n      setNoLayout = _useState8[1];\n\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.slideshowOnly || false),\n      slideshowOnly = _useState9[0],\n      setSlideshowOnly = _useState9[1];\n\n  var _useState10 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultName = _useState10[0],\n      setVaultName = _useState10[1];\n\n  var _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultIPFS = _useState11[0],\n      setVaultIPFS = _useState11[1];\n\n  var _useState12 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultImageIPFS = _useState12[0],\n      setVaultImageIPFS = _useState12[1];\n\n  var _useState13 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultCiphertextV2 = _useState13[0],\n      setVaultCiphertextV2 = _useState13[1];\n\n  var _useState14 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultDesc = _useState14[0],\n      setVaultDesc = _useState14[1];\n\n  var _useState15 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultImage = _useState15[0],\n      setVaultImage = _useState15[1];\n\n  var _useState16 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      ownedImage = _useState16[0],\n      setOwnedImage = _useState16[1];\n\n  var _useState17 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      vaultValues = _useState17[0],\n      setVaultValues = _useState17[1];\n\n  var _useState18 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      loadedValues = _useState18[0],\n      setLoadedValues = _useState18[1];\n\n  var _useState19 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      vaultDataValues = _useState19[0],\n      setVaultDataValues = _useState19[1];\n\n  var _useState20 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      attributes = _useState20[0],\n      setAttributes = _useState20[1];\n\n  var _useState21 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      vaultAddresses = _useState21[0],\n      setVaultAddresses = _useState21[1];\n\n  var _useState22 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      vaultPrivacy = _useState22[0],\n      setVaultPrivacy = _useState22[1];\n\n  var _useState23 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(0),\n      vaultTotalValue = _useState23[0],\n      setVaultTotalValue = _useState23[1];\n\n  var _useState24 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      vaultChainId = _useState24[0],\n      setVaultChainId = _useState24[1];\n\n  var _useState25 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      vaultChain = _useState25[0],\n      setVaultChain = _useState25[1];\n\n  var _useState26 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      hash = _useState26[0],\n      setHash = _useState26[1];\n\n  var _useState27 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      currCoin = _useState27[0],\n      setCurrCoin = _useState27[1];\n\n  var _useState28 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      currAddr = _useState28[0],\n      setCurrAddr = _useState28[1];\n\n  var _useState29 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    loaded: false\n  }),\n      state = _useState29[0],\n      setState = _useState29[1];\n\n  var _useState30 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      mine = _useState30[0],\n      setMine = _useState30[1];\n\n  var _useState31 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      claiming = _useState31[0],\n      setClaiming = _useState31[1];\n\n  var _useState32 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])('claimed'),\n      status = _useState32[0],\n      setStatus = _useState32[1];\n\n  var _useState33 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      sealed = _useState33[0],\n      setSealed = _useState33[1];\n\n  var _useState34 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      claimedBy = _useState34[0],\n      setClaimedBy = _useState34[1];\n\n  var _useState35 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      mnemonic = _useState35[0],\n      setMnemonic = _useState35[1];\n\n  var _useState36 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      privKeyBTC = _useState36[0],\n      setPrivKeyBTC = _useState36[1];\n\n  var _useState37 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      privKeyETH = _useState37[0],\n      setPrivKeyETH = _useState37[1];\n\n  var _useState38 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      privValues = _useState38[0],\n      setKeyValues = _useState38[1];\n\n  var _useState39 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      loadingApi = _useState39[0],\n      setLoadingApi = _useState39[1];\n\n  var _useState40 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      decryptedEffect = _useState40[0],\n      setDecryptedEffect = _useState40[1];\n\n  var _useState41 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      decryptedEffectRunning = _useState41[0],\n      setDecryptedEffectRunning = _useState41[1];\n\n  var _useState42 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      decryptPassword = _useState42[0],\n      setDecryptPassword = _useState42[1];\n\n  var _useState43 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      invalidVault = _useState43[0],\n      setInvalidVault = _useState43[1];\n\n  var _useState44 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      hasCheckedNft = _useState44[0],\n      setHasCheckedNft = _useState44[1];\n\n  var _useState45 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      accepting = _useState45[0],\n      setAccepting = _useState45[1];\n\n  var _useState46 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      approving = _useState46[0],\n      setApproving = _useState46[1];\n\n  var _useState47 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      acceptable = _useState47[0],\n      setAcceptable = _useState47[1];\n\n  var _useState48 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      transferPassword = _useState48[0],\n      setTransferPassword = _useState48[1];\n\n  var _useState49 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      showTransferPassword = _useState49[0],\n      setShowTransferPassword = _useState49[1];\n\n  var _useState50 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      preTransfering = _useState50[0],\n      setPreTransfering = _useState50[1];\n\n  var _useState51 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      transferToAddress = _useState51[0],\n      setTransferToAddress = _useState51[1];\n\n  var _useState52 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      transfering = _useState52[0],\n      setTransfering = _useState52[1];\n\n  var _useState53 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      owner = _useState53[0],\n      setOwner = _useState53[1];\n\n  var _useState54 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(initTorus()),\n      torus = _useState54[0],\n      setTorus = _useState54[1];\n\n  var _useState55 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      live = _useState55[0],\n      setLive = _useState55[1];\n\n  var _useState56 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      nonce = _useState56[0],\n      setNonce = _useState56[1];\n\n  var _useState57 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      mintSignature = _useState57[0],\n      setMintSignature = _useState57[1];\n\n  var _useState58 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      to = _useState58[0],\n      setTo = _useState58[1];\n\n  var _useState59 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      showVerifyingSignature = _useState59[0],\n      setShowVerifyingSignature = _useState59[1];\n\n  var _useState60 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      showMakingVaultMsg = _useState60[0],\n      setShowMakingVaultMsg = _useState60[1];\n\n  var _useState61 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      minting = _useState61[0],\n      setMinting = _useState61[1];\n\n  var _useState62 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      isCrowdSale = _useState62[0],\n      setIsCrowdSale = _useState62[1];\n\n  var _useState63 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      alternateContractAddress = _useState63[0],\n      setAlternateContractAddress = _useState63[1];\n\n  var _useState64 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    name: '',\n    image: '',\n    metadata: ''\n  }),\n      targetAsset = _useState64[0],\n      setTargetAsset = _useState64[1];\n\n  var _useState65 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    name: '',\n    chain: '',\n    4: '',\n    1: '',\n    tokenId: {},\n    serialNumber: {\n      'hex': ''\n    }\n  }),\n      targetContract = _useState65[0],\n      setTargetContract = _useState65[1]; // const [transferImage, setTransferImage] = useState('')\n\n\n  var handlerContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_15__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].vaultHandler[chainId], _constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].vaultHandlerAbi, true);\n  var vaultHandlerContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_15__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].vaultHandlerV8[chainId], _constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].vaultHandlerV8Abi, true);\n  var emblemContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_15__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].emblemVault[chainId], _constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].emblemAbi, true);\n\n  var _useDisclosure = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpenAddrModal = _useDisclosure.isOpen,\n      onOpenAddrModal = _useDisclosure.onOpen,\n      onCloseAddrModal = _useDisclosure.onClose;\n\n  var _useDisclosure2 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpenKeysModal = _useDisclosure2.isOpen,\n      onOpenKeysModal = _useDisclosure2.onOpen,\n      onCloseKeysModal = _useDisclosure2.onClose;\n\n  var _useDisclosure3 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpenOfferModal = _useDisclosure3.isOpen,\n      onOpenOfferModal = _useDisclosure3.onOpen,\n      onCloseOfferModal = _useDisclosure3.onClose;\n\n  var _useDisclosure4 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpen = _useDisclosure4.isOpen,\n      onToggle = _useDisclosure4.onToggle;\n\n  var _useDisclosure5 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isManageAddressOpen = _useDisclosure5.isOpen,\n      onManageAddressToggle = _useDisclosure5.onToggle;\n\n  var _useColorMode = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useColorMode\"])(),\n      colorMode = _useColorMode.colorMode;\n\n  var transak;\n  var transferImage;\n\n  function initTorus() {\n    return _initTorus.apply(this, arguments);\n  }\n\n  function _initTorus() {\n    _initTorus = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee25() {\n      var _torus;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee25$(_context25) {\n        while (1) {\n          switch (_context25.prev = _context25.next) {\n            case 0:\n              _torus = new _toruslabs_torus_direct_web_sdk__WEBPACK_IMPORTED_MODULE_5___default.a({\n                baseUrl: \"\".concat(window.location.origin, \"/serviceworker\"),\n                enableLogging: true,\n                network: \"testnet\" // details for test net\n\n              });\n              _context25.next = 3;\n              return _torus.init({\n                skipSw: true,\n                skipInit: true,\n                skipPrefetch: true\n              });\n\n            case 3:\n              console.log(\"Initialized Torus\");\n              return _context25.abrupt(\"return\", _torus);\n\n            case 5:\n            case \"end\":\n              return _context25.stop();\n          }\n        }\n      }, _callee25);\n    }));\n    return _initTorus.apply(this, arguments);\n  }\n\n  var getVaultContract = function getVaultContract() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    //return useContract(address || contractAddresses.emblemVault[chainId], contractAddresses.emblemAbi, true)\n    return new _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_12__[\"Contract\"](address || _constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].emblemVault[chainId], _constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].emblemAbi, library.getSigner(account).connectUnchecked());\n  };\n\n  var getCuratedContract = function getCuratedContract() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return new _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_12__[\"Contract\"](address, _constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].erc1155Abi, library.getSigner(account).connectUnchecked());\n  };\n\n  var initializeTransak = function initializeTransak(address, coin) {\n    transak = new _transak_transak_sdk__WEBPACK_IMPORTED_MODULE_22___default.a({\n      apiKey: 'e8bed1bd-6844-4eb1-973a-7a11a48fafab',\n      // Your API Key\n      environment: 'PRODUCTION',\n      // STAGING/PRODUCTION\n      defaultCryptoCurrency: coin || 'ETH',\n      walletAddress: address || '',\n      // Your customer's wallet address\n      themeColor: '000000',\n      // App theme color\n      fiatCurrency: 'USD',\n      // INR/GBP\n      // fiatAmount: 350,\n      email: '',\n      // Your customer's email address\n      redirectURL: '',\n      // paymentMethod: 'neft_bank_transfer',\n      hostURL: window.location.origin,\n      widgetHeight: '550px',\n      widgetWidth: '450px'\n    }); // To get all the events\n\n    transak.on(transak.ALL_EVENTS, function (data) {\n      console.log(data);\n    }); // This will trigger when the user marks payment is made.\n\n    transak.on(transak.EVENTS.TRANSAK_ORDER_SUCCESSFUL, function (orderData) {\n      console.log(orderData);\n      transak.close();\n    });\n    transak.init();\n  };\n\n  var checkLiveliness = function checkLiveliness(tokenId, cb) {\n    fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/liveliness', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n        chainid: chainId.toString()\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({\n        tokenId: tokenId\n      })\n    }).then( /*#__PURE__*/function () {\n      var _ref = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(response) {\n        var data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return response.json();\n\n              case 2:\n                data = _context.sent;\n                setLive(data.live);\n                console.log(\"Liveliness check\", data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    return cb();\n  };\n\n  var transferVault = function transferVault() {\n    setTransfering(true);\n    emblemContract.transferFrom(account, transferToAddress, tokenId).then(function (_ref2) {\n      var hash = _ref2.hash;\n      setHash(hash);\n    })[\"catch\"](function (error) {});\n  };\n\n  var lazyMint = function lazyMint() {\n    library.getSigner(account).signMessage('Delayed Minting: ' + tokenId).then(function (signature) {\n      console.log(\"sig\", signature);\n      fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/lazyMint', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata',\n          chainid: chainId.toString()\n        },\n        body: JSON.stringify({\n          tokenId: tokenId,\n          signature: signature\n        })\n      }).then( /*#__PURE__*/function () {\n        var _ref3 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(response) {\n          var data;\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return response.json();\n\n                case 2:\n                  data = _context2.sent;\n                  console.log(\"data\", data.data);\n                  setMintSignature(data.data.signature);\n                  setNonce(data.data.nonce);\n                  setShowVerifyingSignature(true); // setCreating(true)\n\n                  setTimeout(function () {\n                    delayedMint();\n                  }, 500);\n\n                case 8:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    });\n  };\n\n  var delayedMint = function delayedMint() {\n    // setCreating(true)\n    console.log(\"Delayed Minting\");\n    setShowVerifyingSignature(false);\n    setShowMakingVaultMsg(true);\n    setMinting(true);\n    var cipherTextHash = vaultAddresses.filter(function (address) {\n      return address.coin == \"ETH\";\n    })[0].address;\n    console.log(\"--------------------------------------------------------Delayed Minting\", account, tokenId, cipherTextHash, nonce, mintSignature);\n    handlerContract.buyWithSignature(account, tokenId, cipherTextHash, nonce, mintSignature).then(function (_ref4) {\n      var hash = _ref4.hash;\n      setTimeout(function () {\n        setHash(hash);\n        setShowMakingVaultMsg(false);\n      }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      console.log(\"AAAAAHHHHHH\", error.code);\n      setShowMakingVaultMsg(false); // setMinting(false)\n    });\n  };\n\n  var fireMetaMask = function fireMetaMask() {\n    console.log(mintPassword);\n    setAccepting(true);\n    getWitness(function (witness) {\n      // console.log(tokenId, mintPassword, witness.nonce, witness.signature, account)\n      ;\n      handlerContract.transferWithCode(tokenId, mintPassword, account, witness.nonce, witness.signature).then(function (_ref5) {\n        var hash = _ref5.hash;\n        setTimeout(function () {\n          setHash(hash); // setShowMakingVaultMsg(true)\n        }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n      })[\"catch\"](function (error) {\n        setAccepting(false);\n\n        if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n          console.log(\"tx failed.\", error);\n        } else {// setAccepting(false)\n          // setShowPreVaultMsg(false)\n        }\n      });\n    });\n  };\n\n  var addPreTransfer = function addPreTransfer() {\n    console.log('transferImage', \"0x\" + transferImage);\n    setPreTransfering(true);\n    handlerContract.addPreTransfer(tokenId, \"0x\" + transferImage).then(function (_ref6) {\n      var hash = _ref6.hash;\n      // setTimeout(() => {\n      setHash(hash);\n      console.log(\"Set Pre Transfering True\", preTransfering); // setShowMakingVaultMsg(true)\n      // }, 100) // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if (error !== null && error !== void 0 && error.code) {\n        console.log(\"Error?\");\n        setPreTransfering(false);\n        setShowTransferPassword(false);\n        setTransferPassword('');\n      } else {// setShowTransferPassword(!showTransferPassword? true : false)\n        // setPreTransfering(false)\n        // setShowPreVaultMsg(false)\n      }\n    });\n  };\n\n  var handleApproveForall = function handleApproveForall() {\n    setApproving(true);\n    emblemContract.setApprovalForAll(_constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].vaultHandler[chainId], true).then(function (_ref7) {\n      var hash = _ref7.hash;\n      setTimeout(function () {\n        setHash(hash); // setShowMakingVaultMsg(true)\n      }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        console.log(\"tx failed.\", error);\n      } else {\n        setApproving(false); // setShowPreVaultMsg(false)\n      }\n    });\n  };\n\n  var deleteVault = function deleteVault() {\n    library.getSigner(account).signMessage('Delete: ' + tokenId).then(function (signature) {\n      console.log(\"sig\", signature);\n      fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/v2/delete', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        },\n        body: JSON.stringify({\n          tokenId: tokenId,\n          signature: signature,\n          chainId: chainId.toString()\n        })\n      }).then( /*#__PURE__*/function () {\n        var _ref8 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(response) {\n          var data;\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return response.json();\n\n                case 2:\n                  data = _context3.sent;\n                  location.href = location.href.split(\"/\")[0] + \"/vaults\";\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n    });\n  };\n\n  var getVault = /*#__PURE__*/function () {\n    var _ref9 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4() {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              console.log('getvault');\n              !slideshowOnly ? loadCache() : null; // console.log(\"---------\",EMBLEM_API + '/meta/' + tokenId + '?experimental=true')\n\n              _context4.next = 4;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/meta/' + tokenId + '?experimental=true', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 4:\n              responce = _context4.sent;\n              _context4.next = 7;\n              return responce.json();\n\n            case 7:\n              jsonData = _context4.sent;\n\n              // console.log('vault response was ', jsonData)\n              if (jsonData.image_ipfs) {// getIPFSImage(jsonData.image_ipfs)\n              }\n\n              if (jsonData.collectionAddress) {\n                setIsCrowdSale(true);\n                setAlternateContractAddress(jsonData.collectionAddress);\n              }\n\n              if (!jsonData.name) {\n                setState({\n                  loaded: true\n                });\n                setInvalidVault(true);\n              } else {\n                setStates(jsonData);\n                !slideshowOnly ? saveCache(jsonData) : null;\n                setLoadingApi(false);\n                setInvalidVault(false);\n              }\n\n              !vaultPrivacy && !loadedValues ? getAllBalancesLive([], tokenId, function (v) {\n                if (v) {\n                  setVaultValues(v);\n                }\n              }) : null;\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getVault() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var getWitness = /*#__PURE__*/function () {\n    var _ref10 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5(cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/witness/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata',\n                  chainid: chainId.toString()\n                }\n              });\n\n            case 2:\n              responce = _context5.sent;\n              _context5.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context5.sent;\n\n              if (!jsonData.signature) {\n                _context5.next = 11;\n                break;\n              }\n\n              console.log('witness', jsonData);\n              return _context5.abrupt(\"return\", cb(jsonData));\n\n            case 11:\n              return _context5.abrupt(\"return\", cb(false));\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getWitness(_x4) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  var setStates = function setStates(jsonData) {\n    framed && jsonData.image && !jsonData.image.includes('framed=') && !jsonData.image.includes('http') ? jsonData.image = jsonData.image + \"&framed=\" + framed : null;\n\n    if (jsonData.ciphertextV2) {\n      setVaultCiphertextV2(jsonData.ciphertextV2);\n      console.log(\"ciphertextV2\", jsonData.ciphertextV2);\n    }\n\n    setVaultName(jsonData.name);\n    setVaultImage(jsonData.image);\n    setOwnedImage(jsonData.ownedImage || null);\n    setVaultDesc(jsonData.description);\n    setVaultTotalValue(jsonData.totalValue || 0);\n    jsonData.values ? setVaultValues(vaultValues.concat(jsonData.values)) : null;\n    jsonData.attributes ? setVaultDataValues(jsonData.attributes.filter(function (item) {\n      return item.trait_type === \"key\";\n    })) : null;\n    jsonData.attributes ? setAttributes(jsonData.attributes) : null;\n    setVaultAddresses(jsonData.addresses);\n    setVaultIPFS(jsonData.ipfs || null);\n    setVaultImageIPFS(jsonData.image_ipfs || null);\n    jsonData.targetAsset ? setTargetAsset(jsonData.targetAsset) : null;\n    jsonData.targetContract ? setTargetContract(jsonData.targetContract) : null;\n\n    if (jsonData.live == false) {\n      checkLiveliness(jsonData.tokenId, function () {});\n    }\n\n    setLive(jsonData.live == false ? false : true);\n    setNonce(jsonData.nonce);\n    setMintSignature(jsonData.signature);\n    setTo(jsonData.to);\n    setVaultChain(jsonData.network);\n    setVaultChainId(jsonData.network == 'mainnet' ? 1 : jsonData.network == \"rinkeby\" ? 4 : jsonData.network == \"mumbai\" ? 80001 : jsonData.network == \"matic\" ? 137 : jsonData.network == \"xdai\" ? 100 : jsonData.network == \"bsc\" ? 56 : jsonData.network == \"fantom\" ? 250 : jsonData.network == \"bitcoin\" ? 0 : 97);\n    setStatus(jsonData.status);\n\n    if (status === 'claimed') {\n      setClaimedBy(jsonData.claimedBy);\n    } // console.log('inside getstates. mine is ', mine)\n\n\n    setState({\n      loaded: true\n    });\n    var isPvt = jsonData.addresses.filter(function (item) {\n      return item.address.includes('private:');\n    }).length > 0;\n    setVaultPrivacy(isPvt);\n\n    if (jsonData.sealed) {\n      setSealed(true);\n    } else {\n      setSealed(false);\n    }\n  }; // const getEthBalances = async (address, cb) => {\n  //   const responce = await fetch(EMBLEM_API + '/eth/balance/' + address, {\n  //     method: 'GET',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       service: 'evmetadata',\n  //     },\n  //   })\n  //   const jsonData = await responce.json()\n  //   // console.log(Number(vaultTotalValue), Number(jsonData.totalValue))\n  //   setVaultTotalValue(Number(vaultTotalValue) + Number(jsonData.totalValue))\n  //   // console.log('get eth balances', jsonData.values)\n  //   return cb(jsonData.values)\n  // }\n  // const getBtcBalance = async (values, address, cb) => {\n  //   const responce = await fetch(EMBLEM_API + '/btc/balance/' + address, {\n  //     method: 'GET',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       service: 'evmetadata',\n  //     },\n  //   })\n  //   const jsonData = await responce.json()\n  //   // setVaultValues(values.concat(jsonData.values))\n  //   return cb(values.concat(jsonData.values))\n  // }\n  // const getNftBalance = async (values, address, cb) => {\n  //   // console.log(address)\n  //   const responce = await fetch(EMBLEM_API + '/eth/nft/' + address, {\n  //     method: 'GET',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       service: 'evmetadata',\n  //     },\n  //   })\n  //   const jsonData = await responce.json()\n  //   if (jsonData.length > 0) {\n  //     // console.log(\"Fuckling NFT\", jsonData, values.concat(jsonData))\n  //     return cb(values.concat(jsonData))\n  //   } else {\n  //     return cb(values)\n  //   }\n  // }\n\n\n  var getAllBalances = /*#__PURE__*/function () {\n    var _ref11 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee6(values, tokenId, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/vault/balance/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context6.sent;\n              _context6.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context6.sent;\n              console.log('responce', responce, jsonData);\n\n              if (!(jsonData.balances.length > 0)) {\n                _context6.next = 11;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", cb(values.concat(jsonData.balances)));\n\n            case 11:\n              return _context6.abrupt(\"return\", cb(values));\n\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function getAllBalances(_x5, _x6, _x7) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var getAllBalancesLive = /*#__PURE__*/function () {\n    var _ref12 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee7(values, tokenId, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!loadedValues) {\n                _context7.next = 2;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", cb(false));\n\n            case 2:\n              setLoadedValues(true);\n              _context7.next = 5;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/vault/balance/' + tokenId + '?live=true', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 5:\n              responce = _context7.sent;\n              _context7.next = 8;\n              return responce.json();\n\n            case 8:\n              jsonData = _context7.sent;\n              console.log('responce', responce, jsonData);\n\n              if (!(jsonData.balances.length > 0)) {\n                _context7.next = 14;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", cb(values.concat(jsonData.balances)));\n\n            case 14:\n              return _context7.abrupt(\"return\", cb(values));\n\n            case 15:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function getAllBalancesLive(_x8, _x9, _x10) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  var getAllBalancesByAddress = /*#__PURE__*/function () {\n    var _ref13 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee8(values, ethAddress, btcAddress, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/vault/balance/' + ethAddress + '/' + btcAddress, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context8.sent;\n              _context8.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context8.sent;\n              console.log('responce', responce, jsonData);\n\n              if (!(jsonData.balances.length > 0)) {\n                _context8.next = 11;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", cb(values.concat(jsonData.balances)));\n\n            case 11:\n              return _context8.abrupt(\"return\", cb(values));\n\n            case 12:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function getAllBalancesByAddress(_x11, _x12, _x13, _x14) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  var saveCache = function saveCache(vault) {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_vault', JSON.stringify(vault)); // Save new state for later\n  };\n\n  var loadCache = function loadCache() {\n    console.log('cache');\n    var vault = JSON.parse(localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_vault')); // Load vaults from storage before updating from server!\n\n    if (vault) {\n      setState({\n        loaded: true\n      });\n      setStates(vault);\n      setLoadingApi(true);\n    }\n  };\n\n  var savePasswordToLocalStorage = function savePasswordToLocalStorage() {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_mintPassword', transferPassword); // Save new state for later\n  };\n\n  var loadPasswordFromLocalStorage = function loadPasswordFromLocalStorage() {\n    var storedPw = localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_mintPassword');\n    storedPw && acceptable ? setMintPassword(storedPw) : null; //setMintPassword(null)\n  }; // const getKeys = async (signature, tokenId, cb) => {\n  //   var myHeaders = new Headers()\n  //   myHeaders.append('chainId', chainId.toString())\n  //   myHeaders.append('service', 'evmetadata')\n  //   myHeaders.append('Content-Type', 'application/json')\n  //   var raw = JSON.stringify({ signature: signature })\n  //   const responce = await fetch(EMBLEM_API + '/claim/' + tokenId, {\n  //     method: 'POST',\n  //     headers: myHeaders,\n  //     body: raw,\n  //     redirect: 'follow',\n  //   })\n  //   const jsonData = await responce.json()\n  //   // console.log('getKeys response is ', jsonData)\n  //   return cb(jsonData)\n  // }\n\n\n  var getSignedJWT = /*#__PURE__*/function () {\n    var _ref14 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee9(signature, tokenId, cb) {\n      var myHeaders, raw, responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainid', chainId.toString());\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature,\n                tokenId: tokenId\n              });\n              _context9.next = 6;\n              return fetch('https://tor-us-signer.vercel.app/sign', {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 6:\n              responce = _context9.sent;\n              _context9.next = 9;\n              return responce.json();\n\n            case 9:\n              jsonData = _context9.sent;\n              return _context9.abrupt(\"return\", cb(jsonData));\n\n            case 11:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function getSignedJWT(_x15, _x16, _x17) {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n\n  var getRemoteKey = /*#__PURE__*/function () {\n    var _ref15 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee10(tokenId, token, cb) {\n      var error, keys;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              error = false;\n              _context10.next = 3;\n              return torus;\n\n            case 3:\n              _context10.next = 5;\n              return _context10.sent.getTorusKey(\"tor-us-signer-vercel\", tokenId, {\n                verifier_id: tokenId\n              }, token)[\"catch\"](function (err) {\n                error = err.message;\n              });\n\n            case 5:\n              keys = _context10.sent;\n\n              if (!error) {\n                _context10.next = 11;\n                break;\n              }\n\n              console.log(\"error\", error);\n              return _context10.abrupt(\"return\", cb(false));\n\n            case 11:\n              return _context10.abrupt(\"return\", cb(keys));\n\n            case 12:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function getRemoteKey(_x18, _x19, _x20) {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n\n  var addAddress = /*#__PURE__*/function () {\n    var _ref16 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee11(signature, tokenId, coin, cb) {\n      var myHeaders, raw, responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainId', chainId.toString());\n              myHeaders.append('service', 'evmetadata');\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature,\n                coin: coin\n              });\n              _context11.next = 7;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/address/' + tokenId, {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 7:\n              responce = _context11.sent;\n              _context11.next = 10;\n              return responce.json();\n\n            case 10:\n              jsonData = _context11.sent;\n              return _context11.abrupt(\"return\", cb(jsonData));\n\n            case 12:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function addAddress(_x21, _x22, _x23, _x24) {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n\n  var decryptEmbed = /*#__PURE__*/function () {\n    var _ref17 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee12(signature, tokenId, cb) {\n      var myHeaders, raw, responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainId', chainId.toString());\n              myHeaders.append('service', 'evmetadata');\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature\n              });\n              _context12.next = 7;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/embed/' + tokenId, {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 7:\n              responce = _context12.sent;\n              _context12.next = 10;\n              return responce.json();\n\n            case 10:\n              jsonData = _context12.sent;\n              return _context12.abrupt(\"return\", cb(jsonData));\n\n            case 12:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    return function decryptEmbed(_x25, _x26, _x27) {\n      return _ref17.apply(this, arguments);\n    };\n  }();\n\n  var getContractStates = /*#__PURE__*/function () {\n    var _ref18 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee14() {\n      var owned, _owner, finish, _finish;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _finish = function _finish3() {\n                _finish = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee13() {\n                  var acceptable, isApproved;\n                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee13$(_context13) {\n                    while (1) {\n                      switch (_context13.prev = _context13.next) {\n                        case 0:\n                          _context13.next = 2;\n                          return handlerContract.getPreTransfer(tokenId);\n\n                        case 2:\n                          acceptable = _context13.sent;\n\n                          if (!targetContract[chainId]) {\n                            _context13.next = 9;\n                            break;\n                          }\n\n                          _context13.next = 6;\n                          return emblemContract.isApprovedForAll(account, _constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].vaultHandlerV8[chainId]);\n\n                        case 6:\n                          isApproved = _context13.sent;\n                          _context13.next = 12;\n                          break;\n\n                        case 9:\n                          _context13.next = 11;\n                          return emblemContract.isApprovedForAll(account, _constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].vaultHandler[chainId]);\n\n                        case 11:\n                          isApproved = _context13.sent;\n\n                        case 12:\n                          setApproved(isApproved);\n                          setAcceptable(acceptable._from !== \"0x0000000000000000000000000000000000000000\");\n                          setOwner(_owner);\n                          setMine(_owner === account);\n                          loadPasswordFromLocalStorage();\n\n                        case 17:\n                        case \"end\":\n                          return _context13.stop();\n                      }\n                    }\n                  }, _callee13);\n                }));\n                return _finish.apply(this, arguments);\n              };\n\n              finish = function _finish2() {\n                return _finish.apply(this, arguments);\n              };\n\n              console.log(\"Contract states\");\n              owned = false;\n              _context14.prev = 4;\n\n              if (!targetContract[chainId]) {\n                _context14.next = 14;\n                break;\n              }\n\n              console.log(\"Checking owner wth targetContract\");\n              emblemContract = getCuratedContract(targetContract[chainId]);\n              _context14.next = 10;\n              return emblemContract.getOwnerOfSerial(targetContract.serialNumber);\n\n            case 10:\n              _owner = _context14.sent;\n              console.log(\"--------------------------- owner\", _owner, approved, account, _constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].vaultHandlerV8[chainId]);\n              _context14.next = 17;\n              break;\n\n            case 14:\n              _context14.next = 16;\n              return emblemContract.ownerOf(tokenId);\n\n            case 16:\n              _owner = _context14.sent;\n\n            case 17:\n              finish();\n              _context14.next = 24;\n              break;\n\n            case 20:\n              _context14.prev = 20;\n              _context14.t0 = _context14[\"catch\"](4);\n              _owner = \"0x0000000000000000000000000000000000000000\";\n              finish();\n\n            case 24:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[4, 20]]);\n    }));\n\n    return function getContractStates() {\n      return _ref18.apply(this, arguments);\n    };\n  }();\n\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    console.log(\"mine?\", mine);\n    console.log(\"claiming?\", claiming);\n    console.log(\"accepting?\", accepting);\n    console.log(\"acceptable\", acceptable);\n  });\n\n  var hasAddress = function hasAddress(coin) {\n    console.log(coin, vaultAddresses.filter(function (address) {\n      return address.coin == coin;\n    }).length > 0);\n    return vaultAddresses.filter(function (address) {\n      return address.coin == coin;\n    }).length > 0;\n  };\n\n  var onRenew = /*#__PURE__*/function () {\n    var _ref19 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee16(name) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              library.getSigner(account).signMessage('Renew: ' + tokenId).then(function (signature) {\n                var address = vaultAddresses.filter(function (address) {\n                  return address.coin == 'NMC';\n                })[0].address;\n                console.log('signature', signature, name);\n                fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/nmc/renew/' + address, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                    service: 'evmetadata',\n                    chainid: chainId.toString()\n                  },\n                  body: JSON.stringify({\n                    \"tokenId\": tokenId,\n                    \"signature\": signature,\n                    \"name\": name\n                  })\n                }).then( /*#__PURE__*/function () {\n                  var _ref20 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee15(response) {\n                    var data;\n                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee15$(_context15) {\n                      while (1) {\n                        switch (_context15.prev = _context15.next) {\n                          case 0:\n                            _context15.next = 2;\n                            return response.json();\n\n                          case 2:\n                            data = _context15.sent;\n                            console.log(\"Requested Renew\", data);\n\n                          case 4:\n                          case \"end\":\n                            return _context15.stop();\n                        }\n                      }\n                    }, _callee15);\n                  }));\n\n                  return function (_x29) {\n                    return _ref20.apply(this, arguments);\n                  };\n                }());\n              });\n\n            case 1:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16);\n    }));\n\n    return function onRenew(_x28) {\n      return _ref19.apply(this, arguments);\n    };\n  }();\n\n  var handleSign = /*#__PURE__*/function () {\n    var _ref21 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee17() {\n      var serialNumber;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              if (!targetContract[chainId]) {\n                _context17.next = 5;\n                break;\n              }\n\n              emblemContract = getCuratedContract(targetContract[chainId]);\n              _context17.next = 4;\n              return emblemContract.getSerial(targetContract.tokenId, 0);\n\n            case 4:\n              serialNumber = _context17.sent;\n\n            case 5:\n              library.getSigner(account).signMessage('Claim: ' + (targetContract[chainId] ? serialNumber : tokenId)).then(function (signature) {\n                getSignedJWT(signature, tokenId, function (token) {\n                  getRemoteKey(tokenId, token.token, function (keys) {\n                    var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(vaultCiphertextV2, keys.privateKey);\n                    var payload = JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n                    setKeyValues(payload.values);\n                    setMnemonic(payload.phrase);\n                    vaultAddresses.forEach(function (address) {\n                      address.key = window.phrasePathToKey(payload.phrase, address.path);\n                      if (address.coin == 'BTC') setPrivKeyBTC(address.key);\n                      if (address.coin == 'ETH') setPrivKeyETH(address.key);\n                    }); // setKeyValues(vaultAddresses)\n\n                    onOpenKeysModal();\n                  });\n                }); // }\n              });\n\n            case 6:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17);\n    }));\n\n    return function handleSign() {\n      return _ref21.apply(this, arguments);\n    };\n  }();\n\n  var handleHideAsset = /*#__PURE__*/function () {\n    var _ref22 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee18(coin) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              library.getSigner(account).signMessage('HideAsset: ' + tokenId).then(function (signature) {\n                console.log(\"----------------------------------------------------------------\", signature);\n                console.log(coin.name, coin.coin, coin.address);\n                hideAsset(tokenId, coin.coin, coin.address, coin.name, signature, function () {\n                  console.log(\"Done hiding coin and getting new balances\");\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18);\n    }));\n\n    return function handleHideAsset(_x30) {\n      return _ref22.apply(this, arguments);\n    };\n  }();\n\n  function hideAsset(tokenId, coin, address, name, signature, cb) {\n    fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/hide/' + tokenId, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n        chainid: chainId.toString()\n      },\n      body: JSON.stringify({\n        \"coin\": coin ? coin : null,\n        \"address\": address ? address : null,\n        \"name\": name ? name : null,\n        \"signature\": signature ? signature : null\n      })\n    }).then( /*#__PURE__*/function () {\n      var _ref23 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee19(response) {\n        var data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.next = 2;\n                return response.json();\n\n              case 2:\n                data = _context19.sent;\n                console.log(\"-------\", data);\n                getAllBalances([], tokenId, function (values) {\n                  setVaultValues(values);\n                  return cb();\n                });\n\n              case 5:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19);\n      }));\n\n      return function (_x31) {\n        return _ref23.apply(this, arguments);\n      };\n    }());\n  }\n\n  var handleAddressSign = /*#__PURE__*/function () {\n    var _ref24 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee20(coin) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              library.getSigner(account).signMessage('Address: ' + tokenId).then(function (signature) {\n                addAddress(signature, tokenId, coin, function (result) {\n                  getVault();\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20);\n    }));\n\n    return function handleAddressSign(_x32) {\n      return _ref24.apply(this, arguments);\n    };\n  }();\n\n  var handleOwnedEmbed = /*#__PURE__*/function () {\n    var _ref25 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee21() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              library.getSigner(account).signMessage('Embed: ' + tokenId).then(function (signature) {\n                decryptEmbed(signature, tokenId, function (result) {\n                  setVaultImage(result.ownedImage);\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21);\n    }));\n\n    return function handleOwnedEmbed() {\n      return _ref25.apply(this, arguments);\n    };\n  }();\n\n  var handleClaim = /*#__PURE__*/function () {\n    var _ref26 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee22() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              if (targetContract[chainId]) {\n                // emblemContract = getCuratedContract(targetContract[chainId])\n                // let tokenId = await emblemContract.getTokenIdForSerialNumber(targetContract.serialNumber)\n                vaultHandlerContract.claim(targetContract[chainId], targetContract.tokenId).then(function (_ref27) {\n                  var hash = _ref27.hash;\n                  setClaiming(true);\n                  setTimeout(function () {\n                    setHash(hash);\n                  }, 100); // Solving State race condition where transaction watcher wouldn't notice we were claiming\n                });\n              } else {\n                emblemContract.burn(tokenId).then(function (_ref28) {\n                  var hash = _ref28.hash;\n                  setClaiming(true);\n                  setTimeout(function () {\n                    setHash(hash);\n                  }, 100); // Solving State race condition where transaction watcher wouldn't notice we were claiming\n                });\n              }\n\n            case 1:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22);\n    }));\n\n    return function handleClaim() {\n      return _ref26.apply(this, arguments);\n    };\n  }();\n\n  var pingClaimLogs = function pingClaimLogs(cb) {\n    fetch(_constants__WEBPACK_IMPORTED_MODULE_14__[\"EMBLEM_API\"] + '/web3/selfClaimLogs?chainId=' + chainId.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata'\n      }\n    }).then( /*#__PURE__*/function () {\n      var _ref29 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee23(response) {\n        var data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.next = 2;\n                return response.json();\n\n              case 2:\n                data = _context23.sent;\n                console.log(\"Log check\", data);\n                return _context23.abrupt(\"return\", cb());\n\n              case 5:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23);\n      }));\n\n      return function (_x33) {\n        return _ref29.apply(this, arguments);\n      };\n    }());\n  };\n\n  var startDecryptEffect = /*#__PURE__*/function () {\n    var _ref30 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee24() {\n      var theLetters, ctnt, speed, increment, clen, si, stri, block, fixed, nextFrame;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              nextFrame = function _nextFrame(pos) {\n                for (var i = 0; i < clen - stri; i++) {\n                  //Random number\n                  var num = Math.floor(theLetters.length * Math.random()); //Get random letter\n\n                  var letter = theLetters.charAt(num);\n                  block = block + letter;\n                }\n\n                if (si == increment - 1) {\n                  stri++;\n                }\n\n                if (si == increment) {\n                  // Add a letter;\n                  // every speed*10 ms\n                  fixed = fixed + ctnt.charAt(stri - 1);\n                  si = 0;\n                } // $(\"#output\").html(fixed + block);\n\n\n                setDecryptedEffect(fixed + block);\n                block = '';\n              };\n\n              if (!decryptedEffectRunning) {\n                _context24.next = 3;\n                break;\n              }\n\n              return _context24.abrupt(\"return\");\n\n            case 3:\n              setDecryptedEffectRunning(true);\n              theLetters = 'abcdefghijklmnopqrstuvwxyz'; //You can customize what letters it will cycle through\n\n              ctnt = 'Decrypting'; // Your text goes here\n\n              speed = 5; // ms per frame\n\n              increment = 8; // frames per step. Must be >2\n\n              clen = ctnt.length;\n              si = 0;\n              stri = 0;\n              block = '';\n              fixed = '';\n\n              (function rustle(i) {\n                setTimeout(function () {\n                  if (--i) {\n                    rustle(i);\n                  } else {\n                    setDecryptedEffectRunning(false);\n                  }\n\n                  nextFrame(i);\n                  si = si + 1;\n                }, speed);\n              })(clen * increment + 1);\n\n            case 14:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24);\n    }));\n\n    return function startDecryptEffect() {\n      return _ref30.apply(this, arguments);\n    };\n  }();\n\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    console.log('----');\n    getVault();\n  }, []);\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    account && chainId && vaultChainId && chainId == vaultChainId || query.noLayout && query.noLayout == 'true' || query.slideshowOnly && query.slideshowOnly == 'true' ? getContractStates() : null;\n  });\n\n  function splitDescription(words) {\n    var desc = words ? words.split('\\n\\n\\n\\n') : [\" \"];\n    return desc[0].trim();\n  }\n\n  function tryDecrypt(key) {\n    if (decryptPassword) {\n      key = decryptPassword;\n    }\n\n    startDecryptEffect();\n    console.log(vaultAddresses);\n    var ciphertext = vaultAddresses[0].address.replace('private:', '');\n\n    try {\n      var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(ciphertext, key);\n      JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n      setVaultPrivacy(false);\n      setDecryptPassword(key);\n      setVaultAddresses(decryptAddresses(key));\n      var ethAddress = vaultAddresses.filter(function (item) {\n        return item.coin === 'ETH';\n      })[0].address;\n      var btcAddress = vaultAddresses.filter(function (item) {\n        return item.coin === 'BTC';\n      })[0].address;\n      console.log(\"SUCCESS\", vaultAddresses);\n      getAllBalancesByAddress([], ethAddress, btcAddress, function (values) {\n        setVaultValues(values);\n      }); // getEthBalances(\n      //   vaultAddresses.filter((item) => {\n      //     return item.coin === 'ETH'\n      //   })[0].address,\n      //   (values) => {\n      //     getBtcBalance(\n      //       values,\n      //       vaultAddresses.filter((item) => {\n      //         return item.coin === 'BTC'\n      //       })[0].address,\n      //       (_values) => {\n      //         // console.log(\"Have fucking values\", values)\n      //         getNftBalance(\n      //           _values,\n      //           vaultAddresses.filter((item) => {\n      //             return item.coin === 'ETH'\n      //           })[0].address,\n      //           (__values) => {\n      //             setVaultValues(__values.concat(vaultValues))\n      //           }\n      //         )\n      //       }\n      //     )\n      //   }\n      // )\n    } catch (err) {\n      console.log('WTF', err);\n    }\n  }\n\n  function getAddresses() {\n    console.log(\"Getting Addresses\");\n    return vaultAddresses;\n  }\n\n  function decryptAddresses(key) {\n    vaultAddresses.forEach(function (item) {\n      if (item.address.includes('private')) {\n        var cipherText = item.address.replace('private:', '');\n        item.address = decrypt(cipherText, key);\n      }\n    });\n    return vaultAddresses;\n  }\n\n  function decrypt(cipherText, key) {\n    var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(cipherText, key);\n    var decryptedData = JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n    return decryptedData;\n  }\n\n  function visitOpenSeaLink() {\n    window.open('https://' + (vaultChainId == 4 ? 'rinkeby.' : '') + 'opensea.io/assets/' + (vaultChainId == 137 ? 'matic/' : '') + (alternateContractAddress ? alternateContractAddress : _constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].emblemVault[vaultChainId]) + '/' + tokenId, '_blank');\n  }\n\n  function visitLooksRareLink() {\n    window.open('https://' + (vaultChainId == 4 ? 'rinkeby.' : '') + 'looksrare.org/collections/' + (vaultChainId == 137 ? 'matic/' : '') + (alternateContractAddress ? alternateContractAddress : _constants__WEBPACK_IMPORTED_MODULE_14__[\"contractAddresses\"].emblemVault[vaultChainId]) + '/' + tokenId, '_blank');\n  }\n\n  {\n    alternateContractAddress ? emblemContract = getVaultContract(alternateContractAddress ? alternateContractAddress : null) : null;\n  }\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(next_head__WEBPACK_IMPORTED_MODULE_6___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1064,\n      columnNumber: 8\n    }\n  }, __jsx(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1065,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:site\",\n    content: \"Emblem.Finance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1066,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:title\",\n    content: vaultName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1067,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:description\",\n    content: splitDescription(vaultDesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1068,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:image\",\n    content: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1069,\n      columnNumber: 9\n    }\n  }), __jsx(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: \"\\n              // $(\\\".NFT\\\").tilt({    \\n              //     maxTilt: 3\\n              // });\\n              $(\\\".NFT\\\").trigger('mouseenter');\\n              $(\\\".NFT\\\").trigger('mouseclick'), '.NFT';\\n              if (localStorage.getItem(\\\"darkMode\\\") == 'false') {\\n                localStorage.setItem(\\\"darkMode\\\",\\\"true\\\"); location.href = location.href\\n              }\\n              \"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1070,\n      columnNumber: 9\n    }\n  })), __jsx(AddrModal, {\n    isOpen: isOpenAddrModal,\n    onClose: onCloseAddrModal,\n    addrCoin: currCoin,\n    addrAddr: currAddr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1085,\n      columnNumber: 7\n    }\n  }), __jsx(KeysModal, {\n    isOpen: isOpenKeysModal,\n    onClose: onCloseKeysModal,\n    mnemonic: mnemonic,\n    privKeyBTC: privKeyBTC,\n    privKeyETH: privKeyETH,\n    privValues: privValues,\n    addresses: vaultAddresses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1087,\n      columnNumber: 7\n    }\n  }), showOffer ? __jsx(OfferModal, {\n    isOpen: isOpenOfferModal,\n    onClose: onCloseOfferModal,\n    tokenId: tokenId,\n    mine: mine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1097,\n      columnNumber: 9\n    }\n  }) : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1107,\n      columnNumber: 9\n    }\n  }), loadingApi ? __jsx(_Refreshing__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1108,\n      columnNumber: 23\n    }\n  }) : '', !invalidVault && !slideshowOnly ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Flex\"], {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1110,\n      columnNumber: 13\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    className: \"NFT\",\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    borderColor: vaultChainId != chainId ? 'orange.500' : status == 'claimed' ? 'green.500' : null,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    minW: 390,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1111,\n      columnNumber: 15\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    alignItems: \"center\",\n    color: \"blue.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1122,\n      columnNumber: 17\n    }\n  }, \"Vault Network: \", _utils__WEBPACK_IMPORTED_MODULE_11__[\"CHAIN_ID_NAMES\"][vaultChainId]), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\" // textTransform=\"uppercase\"\n    ,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1151,\n      columnNumber: 17\n    }\n  }, vaultName, !vaultPrivacy && vaultTotalValue > 0 ? ': ~$' + vaultTotalValue.toLocaleString() : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    className: \"NFT-content\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1164,\n      columnNumber: 17\n    }\n  }, vaultValues.length && vaultValues.filter(function (item) {\n    return item.type == \"nft\";\n  }).length > 0 ? __jsx(_embed_NFTSlideshow__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n    name: vaultName,\n    image: vaultImage,\n    items: vaultValues.map(function (value) {\n      return {\n        image: value.image,\n        description: value.description,\n        name: value.name,\n        type: value.type\n      };\n    }),\n    properties: {\n      'duration': 3000,\n      canSwipe: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1166,\n      columnNumber: 23\n    }\n  }) : __jsx(_Embed__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n    className: \"d-block w-100 NFT-image\",\n    url: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1168,\n      columnNumber: 23\n    }\n  }), mine && ownedImage ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    onClick: function onClick() {\n      handleOwnedEmbed();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1172,\n      columnNumber: 21\n    }\n  }, \"(OWNED) Show Full Embed\") : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1175,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mt: \"2\",\n    ml: \"4\",\n    lineHeight: \"tight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1176,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1177,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    fontSize: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1178,\n      columnNumber: 23\n    }\n  }, vaultChainId == chainId ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    href: \"./vaults?address=\" + owner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1180,\n      columnNumber: 25\n    }\n  }, \"Owner: \", owner) : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    mt: 2,\n    as: \"h4\",\n    ml: \"4\",\n    mr: \"4\",\n    fontSize: \"xs\",\n    fontStyle: \"italic\",\n    className: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1185,\n      columnNumber: 23\n    }\n  }, __jsx(react_markdown__WEBPACK_IMPORTED_MODULE_17___default.a, {\n    plugins: [remark_gfm__WEBPACK_IMPORTED_MODULE_18___default.a],\n    children: splitDescription(vaultDesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1186,\n      columnNumber: 25\n    }\n  }))))), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    p: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1192,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Tabs\"], {\n    isFitted: true,\n    variant: \"enclosed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1193,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabList\"], {\n    mb: \"1em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1194,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Tab\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1195,\n      columnNumber: 21\n    }\n  }, \"Balances\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Tab\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1196,\n      columnNumber: 21\n    }\n  }, \"Attributes\")), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabPanels\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1198,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabPanel\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1199,\n      columnNumber: 21\n    }\n  }, vaultPrivacy ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mb: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 25\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    pb: 2,\n    color: decryptedEffect ? 'green.500' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1202,\n      columnNumber: 27\n    }\n  }, decryptedEffect ? decryptedEffect : 'Contents hidden. Enter password to unlock.'), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Input\"], {\n    type: \"password\",\n    id: \"vault-password\",\n    onChange: function onChange(e) {\n      return tryDecrypt(e.target.value);\n    },\n    \"aria-describedby\": \"password-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1205,\n      columnNumber: 27\n    }\n  })) : __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    backgroundColor: colorMode == \"light\" ? \"gray.100\" : \"gray.700\",\n    alignItems: \"baseline\",\n    className: \"coin-balance-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1213,\n      columnNumber: 25\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    color: \"gray.500\",\n    letterSpacing: \"wide\",\n    fontSize: \"sm\",\n    ml: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1214,\n      columnNumber: 27\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    as: \"h4\",\n    mt: 2,\n    fontWeight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1215,\n      columnNumber: 29\n    }\n  }, \"Current Contents:  \", __jsx(\"button\", {\n    onClick: function onClick() {\n      getAllBalancesLive([], tokenId, function (v) {\n        setLoadedValues(false);\n        setVaultValues(v);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1217,\n      columnNumber: 50\n    }\n  }, \" [Refresh Balances]\")), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    as: \"p\",\n    color: colorMode == \"dark\" ? \"lightgreen\" : \"forestgreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1226,\n      columnNumber: 29\n    }\n  }, \"$\", Number(vaultTotalValue.toFixed(4)).toLocaleString()), vaultValues.length ? vaultValues.map(function (coin) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1230,\n        columnNumber: 35\n      }\n    }, __jsx(_partials_CoinBalance__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n      colorMode: colorMode,\n      coin: coin,\n      mine: status === 'claimed' && claimedBy === account || mine,\n      onRenew: onRenew,\n      hideAsset: handleHideAsset,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1231,\n        columnNumber: 37\n      }\n    }));\n  }) : __jsx(_Refreshing__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1235,\n      columnNumber: 34\n    }\n  }), vaultDataValues.length ? vaultDataValues.map(function (data) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1239,\n        columnNumber: 35\n      }\n    }, \"Data: \", data.attribute_key);\n  }) : !vaultDataValues.length && !vaultValues.length ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1243,\n      columnNumber: 31\n    }\n  }, \"Nothing in here! Fill 'er up!\") : null))), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabPanel\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1249,\n      columnNumber: 21\n    }\n  }, __jsx(_partials_Attributes__WEBPACK_IMPORTED_MODULE_23__[\"default\"], {\n    colorMode: colorMode,\n    attributes: attributes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1250,\n      columnNumber: 23\n    }\n  })))), !vaultPrivacy ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1256,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"ButtonGroup\"], {\n    justifyContent: \"space-between\",\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1257,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1258,\n      columnNumber: 25\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1259,\n      columnNumber: 27\n    }\n  }, \"Deposit Addresses\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Flex\"], {\n    w: \"340px\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1260,\n      columnNumber: 27\n    }\n  }, vaultAddresses.map(function (addr) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n      className: \"address_nft_button\",\n      ml: 2,\n      mt: 2,\n      \"font-weight\": \"100 !important\",\n      key: addr.address,\n      onClick: function onClick() {\n        setCurrCoin(addr.coin);\n        setCurrAddr(addr.address);\n        onOpenAddrModal();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1263,\n        columnNumber: 33\n      }\n    }, addr.coin == 'ETH' ? addr.coin + '' : addr.coin == 'BTC' ? addr.coin + '/XCP/OMNI' : addr.coin == 'BCH' ? addr.coin + '/SLP' : addr.coin);\n  })), (mine || status === 'claimed') && vaultAddresses.length < 10 ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(\"button\", {\n    className: \"nft_button\",\n    onClick: function onClick() {\n      onManageAddressToggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1283,\n      columnNumber: 29\n    }\n  }, \"Manage Addresses\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Flex\"], {\n    w: \"340px\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1286,\n      columnNumber: 29\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Collapse\"], {\n    isOpen: isManageAddressOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1287,\n      columnNumber: 31\n    }\n  }, !hasAddress('DOGE') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('DOGE');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1289,\n      columnNumber: 35\n    }\n  }, \"Add DOGE\") : null, !hasAddress('DGB') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('DGB');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1292,\n      columnNumber: 35\n    }\n  }, \"Add Digibyte\") : null, !hasAddress('NMC') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('NMC');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1295,\n      columnNumber: 35\n    }\n  }, \"Add Namecoin\") : null, !hasAddress('LTC') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('LTC');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1298,\n      columnNumber: 35\n    }\n  }, \"Add Litecoin\") : null, !hasAddress('MONA') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('MONA');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1301,\n      columnNumber: 35\n    }\n  }, \"Add Mona\") : null, !hasAddress('TEZOS') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('TEZOS');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1304,\n      columnNumber: 35\n    }\n  }, \"Add Tezos\") : null, !hasAddress('SOLANA') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('SOLANA');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1307,\n      columnNumber: 35\n    }\n  }, \"Add Solana\") : null))) : null))) : null, !(status === 'claimed') && live && (vaultChainId === 1 || vaultChainId === 4 || vaultChainId === 137) ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1319,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    width: \"50%\",\n    m: 5,\n    onClick: function onClick() {\n      visitOpenSeaLink();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1321,\n      columnNumber: 25\n    }\n  }, \"Opensea\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    width: \"50%\",\n    m: 5,\n    onClick: function onClick() {\n      visitLooksRareLink();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1329,\n      columnNumber: 25\n    }\n  }, \"LooksRare\"), showOffer ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"\",\n    onClick: function onClick() {\n      onOpenOfferModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1338,\n      columnNumber: 27\n    }\n  }, mine ? 'My Offers' : 'Make an Offer', \" (NFT\\xB2NFT)\") : null) : null, !(status === 'claimed') && mine && !acceptable ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1346,\n      columnNumber: 22\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    direction: \"column\",\n    align: \"center\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1347,\n      columnNumber: 25\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    width: \"100%\",\n    onClick: onToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1348,\n      columnNumber: 27\n    }\n  }, \"Transfer Vault\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Collapse\"], {\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1349,\n      columnNumber: 27\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"2\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1350,\n      columnNumber: 29\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"FormLabel\"], {\n    htmlFor: \"owner-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1351,\n      columnNumber: 29\n    }\n  }, \"Address\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Input\"], {\n    mt: 1,\n    type: \"text\",\n    id: \"transferAddress\",\n    value: transferToAddress || '',\n    onChange: function onChange(e) {\n      console.log(\"Transfer to\", e.target.value);\n      setTransferToAddress(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1352,\n      columnNumber: 31\n    }\n  })), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"2\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1364,\n      columnNumber: 29\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    isDisabled: !Object(_utils__WEBPACK_IMPORTED_MODULE_11__[\"isETHAddress\"])(transferToAddress),\n    onClick: function onClick() {\n      onToggle();\n      transferVault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1365,\n      columnNumber: 31\n    }\n  }, \"Transfer Now\")))))) : null, mine && !acceptable ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1376,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    width: \"100%\",\n    onClick: function onClick() {\n      if (!approved) {\n        return handleApproveForall();\n      } else {\n        var key = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.lib.WordArray.random(128 / 8).toString();\n        var sha = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.SHA256(key).toString();\n        console.log('plain', key);\n        console.log('sha', sha);\n        setTransferPassword(key);\n        transferImage = sha;\n        setTimeout(function () {\n          addPreTransfer();\n        }, 500);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1377,\n      columnNumber: 23\n    }\n  }, \" \", approved ? \"Get Link (Send Vault Via Link)\" : \"Approve Gifting\", \" \"))) : null, (showTransferPassword || mintPassword) && acceptable ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1398,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    href: location.protocol + '//' + location.host + '/nft?id=' + tokenId + '&key=' + (transferPassword || mintPassword),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1399,\n      columnNumber: 25\n    }\n  }, \"Copy Gift Link\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1400,\n      columnNumber: 25\n    }\n  }, \"Password: \", transferPassword || mintPassword)) : null, acceptable && claimedBy !== account ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    mt: 2,\n    width: \"100%\",\n    onClick: function onClick() {\n      fireMetaMask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1405,\n      columnNumber: 23\n    }\n  }, \"Accept\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Input\"], {\n    mt: 2,\n    type: \"password\",\n    id: \"mintPassword\",\n    minLength: 3,\n    maxLength: 200,\n    value: mintPassword || '',\n    onChange: function onChange(e) {\n      console.log('grrr', e.target.value, mintPassword);\n      setMintPassword(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1406,\n      columnNumber: 23\n    }\n  })) : null, !(status === 'claimed') && account && vaultChainId === chainId && mine && !sealed ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1422,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    onClick: function onClick() {\n      handleClaim();\n    },\n    isDisabled: claiming,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1423,\n      columnNumber: 23\n    }\n  }, claiming ? 'Claiming ...' : 'Claim (Crack Open Vault)')) // || !live && nonce && mintSignature && vaultCiphertextV2 && to == account\n  : status === 'claimed' && claimedBy === account && vaultChainId === chainId ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1435,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    onClick: handleSign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1436,\n      columnNumber: 23\n    }\n  }, \"Get Keys\")) : null, !live && to == account && vaultChainId == chainId && status !== 'claimed' && !showMakingVaultMsg ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, useOldMint == \"true\" ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    mt: 5,\n    onClick: delayedMint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1444,\n      columnNumber: 25\n    }\n  }, \"Mint Me v1\") : __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    mt: 5,\n    onClick: lazyMint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1446,\n      columnNumber: 25\n    }\n  }, \"Mint Vault \")) : null, (!live || status == 'claimed') && to == account && vaultChainId == chainId && !showMakingVaultMsg && vaultValues.length < 1 ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    mt: 5,\n    onClick: deleteVault,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1451,\n      columnNumber: 19\n    }\n  }, \"Delete Vault \") : null, showVerifyingSignature ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1454,\n      columnNumber: 19\n    }\n  }, \"Verifying Signature ...\") : null, showMakingVaultMsg ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1459,\n      columnNumber: 19\n    }\n  }, \"Minting Vault ...\") : null), vaultIPFS ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1465,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__[\"HStack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1466,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    target: \"new\",\n    mb: 2,\n    ml: 35,\n    href: 'https://gateway.ipfs.io/ipfs/' + vaultIPFS,\n    isExternal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1467,\n      columnNumber: 23\n    }\n  }, \"View Metadata on IPFS \"), vaultImageIPFS ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    mb: 2,\n    href: 'https://gateway.ipfs.io/ipfs/' + vaultImageIPFS,\n    isExternal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1469,\n      columnNumber: 25\n    }\n  }, \"View Image on IPFS \") : null)) : null, sealed ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    mb: 2,\n    ml: 35,\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1475,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1476,\n      columnNumber: 23\n    }\n  }, \"*This vault is sealed forever.\")) : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    direction: \"column\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1479,\n      columnNumber: 17\n    }\n  }, status == 'claimed' ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    color: \"green.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1480,\n      columnNumber: 42\n    }\n  }, \"CLAIMED\") : null), hash ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Alert\"], {\n    status: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1483,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"AlertIcon\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1484,\n      columnNumber: 21\n    }\n  }), accepting ? \"Accepting Your Gift Vault\" : claiming ? \"Claiming your Vault ...\" : approving ? \"Handling Approval Flow ...\" : transfering ? \"Transfering Vault ...\" : minting ? \"Minting Vault\" : \"Generating Gift Link ...\") : null)) : vaultValues.length > 0 && slideshowOnly ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    className: \"NFT-content\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1491,\n      columnNumber: 11\n    }\n  }, vaultValues.length && vaultValues.filter(function (item) {\n    return item.type == \"nft\";\n  }).length > 0 ? __jsx(_embed_NFTSlideshow__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n    name: vaultName,\n    image: vaultValues[0].image,\n    items: vaultValues.filter(function (value) {\n      return value.image !== vaultValues[0].image;\n    }).map(function (value) {\n      return {\n        image: value.image,\n        description: value.description,\n        name: value.name,\n        type: value.type\n      };\n    }),\n    properties: {\n      'duration': 3000,\n      canSwipe: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1493,\n      columnNumber: 17\n    }\n  }) : __jsx(_Embed__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n    className: \"d-block w-100 NFT-image\",\n    url: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1495,\n      columnNumber: 17\n    }\n  })) : invalidVault ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1500,\n      columnNumber: 11\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Image\"], {\n    width: \"md\",\n    src: \"https://starwarsblog.starwars.com/wp-content/uploads/2017/06/25-star-wars-quotes-obi-wan-kenobi-identification-tall.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1501,\n      columnNumber: 13\n    }\n  }), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1505,\n      columnNumber: 13\n    }\n  }, \"THESE ARE NOT THE VAULTS YOU ARE LOOKING FOR\", ' ', __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1507,\n      columnNumber: 15\n    }\n  }, \"CREATE ONE HERE!\"))) : null, hash ? __jsx(_TransactionToast__WEBPACK_IMPORTED_MODULE_13__[\"TransactionToast\"], {\n    hash: hash,\n    onComplete: function onComplete() {\n      if (claiming && !accepting && !preTransfering) {\n        setHash(null);\n        setStatus('claimed');\n        setClaiming(false);\n        setClaimedBy(account);\n        pingClaimLogs(function () {\n          location.href = location.origin + '/nft?id=' + tokenId;\n        });\n      } else if (preTransfering) {\n        savePasswordToLocalStorage();\n        setShowTransferPassword(true);\n        setPreTransfering(false);\n        setHash(null);\n      } else if (accepting) {\n        setAccepting(false);\n        getVault();\n        setHash(null);\n      } else if (approving) {\n        setApproving(false);\n        getVault();\n        setHash(null);\n      } else if (transfering) {\n        setTransfering(false);\n        getVault();\n        setHash(null);\n      } else if (minting) {\n        checkLiveliness(tokenId, function () {\n          setMinting(false);\n          setLive(true); // setShowMakingVaultMsg(false)\n          // location.href = location.origin + '/nft?id=' + tokenId\n        });\n      } else {\n        console.log('minting', minting);\n        console.log('claiming', claiming);\n        console.log('accepting', accepting);\n        console.log('preTransfering', preTransfering);\n        console.log('approving', approving);\n        console.log(\"Unknown state\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1514,\n      columnNumber: 11\n    }\n  }) : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1560,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(Nft, \"vMM9Hy4Y3UkBoFyLoKTYsexTyEo=\", false, function () {\n  return [_web3_react_core__WEBPACK_IMPORTED_MODULE_7__[\"useWeb3React\"], next_router__WEBPACK_IMPORTED_MODULE_8__[\"useRouter\"], _hooks__WEBPACK_IMPORTED_MODULE_15__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_15__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_15__[\"useContract\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useColorMode\"]];\n});\n\n_c7 = Nft;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"AddrModal$dynamic\");\n$RefreshReg$(_c2, \"AddrModal\");\n$RefreshReg$(_c3, \"KeysModal$dynamic\");\n$RefreshReg$(_c4, \"KeysModal\");\n$RefreshReg$(_c5, \"OfferModal$dynamic\");\n$RefreshReg$(_c6, \"OfferModal\");\n$RefreshReg$(_c7, \"Nft\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Nft.tsx\n");

/***/ })

})